

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Wed Jun 20 22:52:27 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 20 "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_send_config
    47                           	FNCALL	_main,_lcd_clr
    48                           	FNCALL	_main,_delay
    49                           	FNCALL	_main,_lcd_goto
    50                           	FNCALL	_main,_send_string
    51                           	FNCALL	_main,_clearrow1
    52                           	FNCALL	_main,_scancolumn1
    53                           	FNCALL	_main,_clearrow2
    54                           	FNCALL	_main,_scancolumn2
    55                           	FNCALL	_main,_clearrow3
    56                           	FNCALL	_main,_scancolumn3
    57                           	FNCALL	_main,_clearrow4
    58                           	FNCALL	_main,_scancolumn4
    59                           	FNCALL	_main,_beep_once
    60                           	FNCALL	_main,_beep_twice
    61                           	FNCALL	_scancolumn4,_lcd_clr
    62                           	FNCALL	_scancolumn4,_lcd_goto
    63                           	FNCALL	_scancolumn4,_send_char
    64                           	FNCALL	_scancolumn3,_lcd_clr
    65                           	FNCALL	_scancolumn3,_lcd_goto
    66                           	FNCALL	_scancolumn3,_send_char
    67                           	FNCALL	_scancolumn2,_lcd_clr
    68                           	FNCALL	_scancolumn2,_lcd_goto
    69                           	FNCALL	_scancolumn2,_send_char
    70                           	FNCALL	_scancolumn1,_lcd_clr
    71                           	FNCALL	_scancolumn1,_lcd_goto
    72                           	FNCALL	_scancolumn1,_send_char
    73                           	FNCALL	_send_string,_send_char
    74                           	FNCALL	_lcd_goto,_send_config
    75                           	FNCALL	_lcd_clr,_send_config
    76                           	FNCALL	_lcd_clr,_delay
    77                           	FNCALL	_send_char,_delay
    78                           	FNCALL	_send_char,_e_pulse
    79                           	FNCALL	_send_config,_delay
    80                           	FNCALL	_send_config,_e_pulse
    81                           	FNCALL	_e_pulse,_delay
    82                           	FNCALL	_beep_twice,_delay
    83                           	FNCALL	_beep_once,_delay
    84                           	FNROOT	_main
    85                           	global	_stalled_char
    86                           psect	idataBANK0,class=CODE,space=0,delta=2
    87                           global __pidataBANK0
    88  029C                     __pidataBANK0:
    89                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
    90                           	line	59
    91                           
    92                           ;initializer for _stalled_char
    93  029C  3431               	retlw	031h
    94  029D  3432               	retlw	032h
    95  029E  3433               	retlw	033h
    96  029F  3434               	retlw	034h
    97  02A0  3435               	retlw	035h
    98  02A1  3436               	retlw	036h
    99                           	global	_keyin_char
   100                           	global	_password_count
   101                           	global	_PORTC
   102  0007                     _PORTC	set	7
   103                           	global	_PORTD
   104  0008                     _PORTD	set	8
   105                           	global	_RA0
   106  0028                     _RA0	set	40
   107                           	global	_RA1
   108  0029                     _RA1	set	41
   109                           	global	_RA2
   110  002A                     _RA2	set	42
   111                           	global	_RA3
   112  002B                     _RA3	set	43
   113                           	global	_RA4
   114  002C                     _RA4	set	44
   115                           	global	_RA5
   116  002D                     _RA5	set	45
   117                           	global	_RB1
   118  0031                     _RB1	set	49
   119                           	global	_RB2
   120  0032                     _RB2	set	50
   121                           	global	_RC0
   122  0038                     _RC0	set	56
   123                           	global	_RC1
   124  0039                     _RC1	set	57
   125                           	global	_RC2
   126  003A                     _RC2	set	58
   127                           	global	_RC3
   128  003B                     _RC3	set	59
   129                           	global	_RE0
   130  0048                     _RE0	set	72
   131                           	global	_RE1
   132  0049                     _RE1	set	73
   133                           	global	_ADCON1
   134  009F                     _ADCON1	set	159
   135                           	global	_TRISA
   136  0085                     _TRISA	set	133
   137                           	global	_TRISB
   138  0086                     _TRISB	set	134
   139                           	global	_TRISC
   140  0087                     _TRISC	set	135
   141                           	global	_TRISD
   142  0088                     _TRISD	set	136
   143                           	global	_TRISE
   144  0089                     _TRISE	set	137
   145                           psect	strings,class=STRING,delta=2
   146                           global __pstrings
   147  0003                     __pstrings:
   148                           ;	global	stringdir,stringtab,__stringbase
   149  0003                     stringtab:
   150                           ;	String table - string pointers are 1 byte each
   151  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   152  0003  3000               movlw high(stringdir)
   153  0004  008A               movwf pclath
   154  0005  0804               movf fsr,w
   155  0006  0A84               incf fsr
   156  0007  0782               	addwf pc
   157  0008                     __stringbase:
   158  0008  3400               	retlw	0
   159                           psect	strings
   160                           	
   161  0009                     STR_2:	
   162  0009  3436               	retlw	54	;'6'
   163  000A  342D               	retlw	45	;'-'
   164  000B  3444               	retlw	68	;'D'
   165  000C  3449               	retlw	73	;'I'
   166  000D  3447               	retlw	71	;'G'
   167  000E  3449               	retlw	73	;'I'
   168  000F  3454               	retlw	84	;'T'
   169  0010  3420               	retlw	32	;' '
   170  0011  3450               	retlw	80	;'P'
   171  0012  3441               	retlw	65	;'A'
   172  0013  3453               	retlw	83	;'S'
   173  0014  3453               	retlw	83	;'S'
   174  0015  3457               	retlw	87	;'W'
   175  0016  344F               	retlw	79	;'O'
   176  0017  3452               	retlw	82	;'R'
   177  0018  3444               	retlw	68	;'D'
   178  0019  3400               	retlw	0
   179                           psect	strings
   180                           	
   181  001A                     STR_1:	
   182  001A  3450               	retlw	80	;'P'
   183  001B  344C               	retlw	76	;'L'
   184  001C  3445               	retlw	69	;'E'
   185  001D  3441               	retlw	65	;'A'
   186  001E  3453               	retlw	83	;'S'
   187  001F  3445               	retlw	69	;'E'
   188  0020  3420               	retlw	32	;' '
   189  0021  3445               	retlw	69	;'E'
   190  0022  344E               	retlw	78	;'N'
   191  0023  3454               	retlw	84	;'T'
   192  0024  3445               	retlw	69	;'E'
   193  0025  3452               	retlw	82	;'R'
   194  0026  3400               	retlw	0
   195                           psect	strings
   196                           	
   197  0027                     STR_3:	
   198  0027  3453               	retlw	83	;'S'
   199  0028  3455               	retlw	85	;'U'
   200  0029  3443               	retlw	67	;'C'
   201  002A  3443               	retlw	67	;'C'
   202  002B  3445               	retlw	69	;'E'
   203  002C  3453               	retlw	83	;'S'
   204  002D  3453               	retlw	83	;'S'
   205  002E  3421               	retlw	33	;'!'
   206  002F  3400               	retlw	0
   207                           psect	strings
   208                           	
   209  0030                     STR_4:	
   210  0030  3445               	retlw	69	;'E'
   211  0031  3452               	retlw	82	;'R'
   212  0032  3452               	retlw	82	;'R'
   213  0033  344F               	retlw	79	;'O'
   214  0034  3452               	retlw	82	;'R'
   215  0035  3421               	retlw	33	;'!'
   216  0036  3400               	retlw	0
   217                           psect	strings
   218                           	file	"C:\Users\Phang\AppData\Local\Temp\s3s8."
   219                           	line	#
   220                           psect cinit,class=CODE,delta=2
   221                           global start_initialization
   222  0381                     start_initialization:
   223                           
   224                           psect	bssCOMMON,class=COMMON,space=1
   225                           global __pbssCOMMON
   226  007C                     __pbssCOMMON:
   227  007C                     _password_count:
   228  007C                            ds      1
   229                           
   230                           psect	bssBANK0,class=BANK0,space=1
   231                           global __pbssBANK0
   232  0020                     __pbssBANK0:
   233  0020                     _keyin_char:
   234  0020                            ds      6
   235                           
   236                           psect	dataBANK0,class=BANK0,space=1
   237                           global __pdataBANK0
   238  0026                     __pdataBANK0:
   239                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
   240  0026                     _stalled_char:
   241  0026                            ds      6
   242                           
   243                           ; Clear objects allocated to COMMON
   244                           psect cinit,class=CODE,delta=2
   245  0381  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   246                           ; Clear objects allocated to BANK0
   247                           psect cinit,class=CODE,delta=2
   248  0382  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   249  0383  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   250  0384  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   251  0385  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   252  0386  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   253  0387  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   254                           ; Initialize objects allocated to BANK0
   255                           	global __pidataBANK0
   256                           psect cinit,class=CODE,delta=2
   257  0388  120A  118A  229C   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
   258  038D  00A6               	movwf	__pdataBANK0+0&07fh		
   259  038E  120A  118A  229D   	fcall	__pidataBANK0+1		;fetch initializer
              120A  118A         
   260  0393  00A7               	movwf	__pdataBANK0+1&07fh		
   261  0394  120A  118A  229E   	fcall	__pidataBANK0+2		;fetch initializer
              120A  118A         
   262  0399  00A8               	movwf	__pdataBANK0+2&07fh		
   263  039A  120A  118A  229F   	fcall	__pidataBANK0+3		;fetch initializer
              120A  118A         
   264  039F  00A9               	movwf	__pdataBANK0+3&07fh		
   265  03A0  120A  118A  22A0   	fcall	__pidataBANK0+4		;fetch initializer
              120A  118A         
   266  03A5  00AA               	movwf	__pdataBANK0+4&07fh		
   267  03A6  120A  118A  22A1   	fcall	__pidataBANK0+5		;fetch initializer
              120A  118A         
   268  03AB  00AB               	movwf	__pdataBANK0+5&07fh		
   269                           psect cinit,class=CODE,delta=2
   270                           global end_of_initialization
   271                           
   272                           ;End of C runtime variable initialization code
   273                           
   274  03AC                     end_of_initialization:
   275  03AC  0183               clrf status
   276  03AD  120A  118A  2F0C   ljmp _main	;jump to C main() function
   277                           psect	cstackCOMMON,class=COMMON,space=1
   278                           global __pcstackCOMMON
   279  0070                     __pcstackCOMMON:
   280                           	global	?_send_config
   281  0070                     ?_send_config:	; 0 bytes @ 0x0
   282                           	global	?_lcd_clr
   283  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
   284                           	global	?_delay
   285  0070                     ?_delay:	; 0 bytes @ 0x0
   286                           	global	?_lcd_goto
   287  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   288                           	global	?_send_string
   289  0070                     ?_send_string:	; 0 bytes @ 0x0
   290                           	global	?_clearrow1
   291  0070                     ?_clearrow1:	; 0 bytes @ 0x0
   292                           	global	??_clearrow1
   293  0070                     ??_clearrow1:	; 0 bytes @ 0x0
   294                           	global	?_scancolumn1
   295  0070                     ?_scancolumn1:	; 0 bytes @ 0x0
   296                           	global	?_clearrow2
   297  0070                     ?_clearrow2:	; 0 bytes @ 0x0
   298                           	global	??_clearrow2
   299  0070                     ??_clearrow2:	; 0 bytes @ 0x0
   300                           	global	?_scancolumn2
   301  0070                     ?_scancolumn2:	; 0 bytes @ 0x0
   302                           	global	?_clearrow3
   303  0070                     ?_clearrow3:	; 0 bytes @ 0x0
   304                           	global	??_clearrow3
   305  0070                     ??_clearrow3:	; 0 bytes @ 0x0
   306                           	global	?_scancolumn3
   307  0070                     ?_scancolumn3:	; 0 bytes @ 0x0
   308                           	global	?_clearrow4
   309  0070                     ?_clearrow4:	; 0 bytes @ 0x0
   310                           	global	??_clearrow4
   311  0070                     ??_clearrow4:	; 0 bytes @ 0x0
   312                           	global	?_scancolumn4
   313  0070                     ?_scancolumn4:	; 0 bytes @ 0x0
   314                           	global	?_beep_once
   315  0070                     ?_beep_once:	; 0 bytes @ 0x0
   316                           	global	?_beep_twice
   317  0070                     ?_beep_twice:	; 0 bytes @ 0x0
   318                           	global	?_send_char
   319  0070                     ?_send_char:	; 0 bytes @ 0x0
   320                           	global	?_e_pulse
   321  0070                     ?_e_pulse:	; 0 bytes @ 0x0
   322                           	global	?_main
   323  0070                     ?_main:	; 0 bytes @ 0x0
   324                           	global	delay@data
   325  0070                     delay@data:	; 4 bytes @ 0x0
   326  0070                     	ds	4
   327                           	global	??_delay
   328  0074                     ??_delay:	; 0 bytes @ 0x4
   329  0074                     	ds	4
   330                           	global	??_send_config
   331  0078                     ??_send_config:	; 0 bytes @ 0x8
   332                           	global	??_beep_once
   333  0078                     ??_beep_once:	; 0 bytes @ 0x8
   334                           	global	??_beep_twice
   335  0078                     ??_beep_twice:	; 0 bytes @ 0x8
   336                           	global	??_send_char
   337  0078                     ??_send_char:	; 0 bytes @ 0x8
   338                           	global	??_e_pulse
   339  0078                     ??_e_pulse:	; 0 bytes @ 0x8
   340                           	global	send_config@data
   341  0078                     send_config@data:	; 1 bytes @ 0x8
   342                           	global	send_char@data
   343  0078                     send_char@data:	; 1 bytes @ 0x8
   344  0078                     	ds	1
   345                           	global	??_lcd_clr
   346  0079                     ??_lcd_clr:	; 0 bytes @ 0x9
   347                           	global	??_lcd_goto
   348  0079                     ??_lcd_goto:	; 0 bytes @ 0x9
   349                           	global	??_send_string
   350  0079                     ??_send_string:	; 0 bytes @ 0x9
   351  0079                     	ds	1
   352                           	global	lcd_goto@data
   353  007A                     lcd_goto@data:	; 1 bytes @ 0xA
   354                           	global	send_string@i
   355  007A                     send_string@i:	; 1 bytes @ 0xA
   356  007A                     	ds	1
   357                           	global	??_scancolumn1
   358  007B                     ??_scancolumn1:	; 0 bytes @ 0xB
   359                           	global	??_scancolumn2
   360  007B                     ??_scancolumn2:	; 0 bytes @ 0xB
   361                           	global	??_scancolumn3
   362  007B                     ??_scancolumn3:	; 0 bytes @ 0xB
   363                           	global	??_scancolumn4
   364  007B                     ??_scancolumn4:	; 0 bytes @ 0xB
   365                           	global	send_string@s
   366  007B                     send_string@s:	; 1 bytes @ 0xB
   367  007B                     	ds	1
   368                           	global	??_main
   369  007C                     ??_main:	; 0 bytes @ 0xC
   370 ;;Data sizes: Strings 46, constant 0, data 6, bss 7, persistent 0 stack 0
   371 ;;Auto spaces:   Size  Autos    Used
   372 ;; COMMON          14     12      13
   373 ;; BANK0           80      0      12
   374 ;; BANK1           80      0       0
   375 ;; BANK3           96      0       0
   376 ;; BANK2           96      0       0
   377                           
   378 ;;
   379 ;; Pointer list with targets:
   380                           
   381 ;; send_string@s	PTR const unsigned char  size(1) Largest target is 17
   382 ;;		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[13]), 
   383 ;;
   384                           
   385                           
   386 ;;
   387 ;; Critical Paths under _main in COMMON
   388 ;;
   389 ;;   _main->_send_string
   390 ;;   _main->_scancolumn1
   391 ;;   _main->_scancolumn2
   392 ;;   _main->_scancolumn3
   393 ;;   _main->_scancolumn4
   394 ;;   _scancolumn4->_lcd_goto
   395 ;;   _scancolumn3->_lcd_goto
   396 ;;   _scancolumn2->_lcd_goto
   397 ;;   _scancolumn1->_lcd_goto
   398 ;;   _send_string->_send_char
   399 ;;   _lcd_goto->_send_config
   400 ;;   _lcd_clr->_send_config
   401 ;;   _send_char->_delay
   402 ;;   _send_config->_delay
   403 ;;   _e_pulse->_delay
   404 ;;   _beep_twice->_delay
   405 ;;   _beep_once->_delay
   406 ;;
   407 ;; Critical Paths under _main in BANK0
   408 ;;
   409 ;;   None.
   410 ;;
   411 ;; Critical Paths under _main in BANK1
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _main in BANK3
   416 ;;
   417 ;;   None.
   418 ;;
   419 ;; Critical Paths under _main in BANK2
   420 ;;
   421 ;;   None.
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426                           
   427 ;;
   428 ;;Call Graph Tables:
   429 ;;
   430 ;; ---------------------------------------------------------------------------------
   431 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   432 ;; ---------------------------------------------------------------------------------
   433 ;; (0) _main                                                 0     0      0    2665
   434 ;;                        _send_config
   435 ;;                            _lcd_clr
   436 ;;                              _delay
   437 ;;                           _lcd_goto
   438 ;;                        _send_string
   439 ;;                          _clearrow1
   440 ;;                        _scancolumn1
   441 ;;                          _clearrow2
   442 ;;                        _scancolumn2
   443 ;;                          _clearrow3
   444 ;;                        _scancolumn3
   445 ;;                          _clearrow4
   446 ;;                        _scancolumn4
   447 ;;                          _beep_once
   448 ;;                         _beep_twice
   449 ;; ---------------------------------------------------------------------------------
   450 ;; (1) _scancolumn4                                          1     1      0     470
   451 ;;                                             11 COMMON     1     1      0
   452 ;;                            _lcd_clr
   453 ;;                           _lcd_goto
   454 ;;                          _send_char
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (1) _scancolumn3                                          1     1      0     470
   457 ;;                                             11 COMMON     1     1      0
   458 ;;                            _lcd_clr
   459 ;;                           _lcd_goto
   460 ;;                          _send_char
   461 ;; ---------------------------------------------------------------------------------
   462 ;; (1) _scancolumn2                                          1     1      0     470
   463 ;;                                             11 COMMON     1     1      0
   464 ;;                            _lcd_clr
   465 ;;                           _lcd_goto
   466 ;;                          _send_char
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (1) _scancolumn1                                          1     1      0     470
   469 ;;                                             11 COMMON     1     1      0
   470 ;;                            _lcd_clr
   471 ;;                           _lcd_goto
   472 ;;                          _send_char
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (1) _send_string                                          3     3      0     180
   475 ;;                                              9 COMMON     3     3      0
   476 ;;                          _send_char
   477 ;; ---------------------------------------------------------------------------------
   478 ;; (2) _lcd_goto                                             2     2      0     201
   479 ;;                                              9 COMMON     2     2      0
   480 ;;                        _send_config
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _lcd_clr                                              0     0      0     157
   483 ;;                        _send_config
   484 ;;                              _delay
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (2) _send_char                                            1     1      0     112
   487 ;;                                              8 COMMON     1     1      0
   488 ;;                              _delay
   489 ;;                            _e_pulse
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (3) _send_config                                          1     1      0     112
   492 ;;                                              8 COMMON     1     1      0
   493 ;;                              _delay
   494 ;;                            _e_pulse
   495 ;; ---------------------------------------------------------------------------------
   496 ;; (3) _e_pulse                                              0     0      0      45
   497 ;;                              _delay
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (1) _beep_twice                                           0     0      0      45
   500 ;;                              _delay
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (1) _beep_once                                            0     0      0      45
   503 ;;                              _delay
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (1) _clearrow4                                            0     0      0       0
   506 ;; ---------------------------------------------------------------------------------
   507 ;; (1) _clearrow3                                            0     0      0       0
   508 ;; ---------------------------------------------------------------------------------
   509 ;; (1) _clearrow2                                            0     0      0       0
   510 ;; ---------------------------------------------------------------------------------
   511 ;; (1) _clearrow1                                            0     0      0       0
   512 ;; ---------------------------------------------------------------------------------
   513 ;; (2) _delay                                                8     4      4      45
   514 ;;                                              0 COMMON     8     4      4
   515 ;; ---------------------------------------------------------------------------------
   516 ;; Estimated maximum stack depth 3
   517 ;; ---------------------------------------------------------------------------------
   518                           
   519 ;; Call Graph Graphs:
   520                           
   521 ;; _main (ROOT)
   522 ;;   _send_config
   523 ;;     _delay
   524 ;;     _e_pulse
   525 ;;       _delay
   526 ;;   _lcd_clr
   527 ;;     _send_config
   528 ;;       _delay
   529 ;;       _e_pulse
   530 ;;         _delay
   531 ;;     _delay
   532 ;;   _delay
   533 ;;   _lcd_goto
   534 ;;     _send_config
   535 ;;       _delay
   536 ;;       _e_pulse
   537 ;;         _delay
   538 ;;   _send_string
   539 ;;     _send_char
   540 ;;       _delay
   541 ;;       _e_pulse
   542 ;;         _delay
   543 ;;   _clearrow1
   544 ;;   _scancolumn1
   545 ;;     _lcd_clr
   546 ;;       _send_config
   547 ;;         _delay
   548 ;;         _e_pulse
   549 ;;           _delay
   550 ;;       _delay
   551 ;;     _lcd_goto
   552 ;;       _send_config
   553 ;;         _delay
   554 ;;         _e_pulse
   555 ;;           _delay
   556 ;;     _send_char
   557 ;;       _delay
   558 ;;       _e_pulse
   559 ;;         _delay
   560 ;;   _clearrow2
   561 ;;   _scancolumn2
   562 ;;     _lcd_clr
   563 ;;       _send_config
   564 ;;         _delay
   565 ;;         _e_pulse
   566 ;;           _delay
   567 ;;       _delay
   568 ;;     _lcd_goto
   569 ;;       _send_config
   570 ;;         _delay
   571 ;;         _e_pulse
   572 ;;           _delay
   573 ;;     _send_char
   574 ;;       _delay
   575 ;;       _e_pulse
   576 ;;         _delay
   577 ;;   _clearrow3
   578 ;;   _scancolumn3
   579 ;;     _lcd_clr
   580 ;;       _send_config
   581 ;;         _delay
   582 ;;         _e_pulse
   583 ;;           _delay
   584 ;;       _delay
   585 ;;     _lcd_goto
   586 ;;       _send_config
   587 ;;         _delay
   588 ;;         _e_pulse
   589 ;;           _delay
   590 ;;     _send_char
   591 ;;       _delay
   592 ;;       _e_pulse
   593 ;;         _delay
   594 ;;   _clearrow4
   595 ;;   _scancolumn4
   596 ;;     _lcd_clr
   597 ;;       _send_config
   598 ;;         _delay
   599 ;;         _e_pulse
   600 ;;           _delay
   601 ;;       _delay
   602 ;;     _lcd_goto
   603 ;;       _send_config
   604 ;;         _delay
   605 ;;         _e_pulse
   606 ;;           _delay
   607 ;;     _send_char
   608 ;;       _delay
   609 ;;       _e_pulse
   610 ;;         _delay
   611 ;;   _beep_once
   612 ;;     _delay
   613 ;;   _beep_twice
   614 ;;     _delay
   615 ;;
   616                           
   617 ;; Address spaces:
   618                           
   619 ;;Name               Size   Autos  Total    Cost      Usage
   620 ;;BANK3               60      0       0       9        0.0%
   621 ;;BITBANK3            60      0       0       8        0.0%
   622 ;;SFR3                 0      0       0       4        0.0%
   623 ;;BITSFR3              0      0       0       4        0.0%
   624 ;;BANK2               60      0       0      11        0.0%
   625 ;;BITBANK2            60      0       0      10        0.0%
   626 ;;SFR2                 0      0       0       5        0.0%
   627 ;;BITSFR2              0      0       0       5        0.0%
   628 ;;SFR1                 0      0       0       2        0.0%
   629 ;;BITSFR1              0      0       0       2        0.0%
   630 ;;BANK1               50      0       0       7        0.0%
   631 ;;BITBANK1            50      0       0       6        0.0%
   632 ;;CODE                 0      0       0       0        0.0%
   633 ;;DATA                 0      0      1E      12        0.0%
   634 ;;ABS                  0      0      19       3        0.0%
   635 ;;NULL                 0      0       0       0        0.0%
   636 ;;STACK                0      0       5       2        0.0%
   637 ;;BANK0               50      0       C       5       15.0%
   638 ;;BITBANK0            50      0       0       4        0.0%
   639 ;;SFR0                 0      0       0       1        0.0%
   640 ;;BITSFR0              0      0       0       1        0.0%
   641 ;;COMMON               E      C       D       1       92.9%
   642 ;;BITCOMMON            E      0       0       0        0.0%
   643 ;;EEDATA             100      0       0       0        0.0%
   644                           
   645                           	global	_main
   646                           psect	maintext,global,class=CODE,delta=2
   647                           global __pmaintext
   648  070C                     __pmaintext:
   649                           
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 65 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;		None               void
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 17F/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels required when called:    5
   672 ;; This function calls:
   673 ;;		_send_config
   674 ;;		_lcd_clr
   675 ;;		_delay
   676 ;;		_lcd_goto
   677 ;;		_send_string
   678 ;;		_clearrow1
   679 ;;		_scancolumn1
   680 ;;		_clearrow2
   681 ;;		_scancolumn2
   682 ;;		_clearrow3
   683 ;;		_scancolumn3
   684 ;;		_clearrow4
   685 ;;		_scancolumn4
   686 ;;		_beep_once
   687 ;;		_beep_twice
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           psect	maintext
   693                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
   694                           	line	65
   695                           	global	__size_of_main
   696  00F4                     	__size_of_main	equ	__end_of_main-_main
   697                           	
   698  070C                     _main:	
   699                           	opt	stack 3
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           	line	66
   702                           	
   703  070C                     l2494:	
   704                           ;PR9B.c: 66: ADCON1=0b00000110;
   705  070C  3006               	movlw	(06h)
   706  070D  1683               	bsf	status, 5	;RP0=1, select bank1
   707  070E  1303               	bcf	status, 6	;RP1=0, select bank1
   708  070F  009F               	movwf	(159)^080h	;volatile
   709                           	line	67
   710                           ;PR9B.c: 67: TRISA=0b11001111;
   711  0710  30CF               	movlw	(0CFh)
   712  0711  0085               	movwf	(133)^080h	;volatile
   713                           	line	68
   714                           	
   715  0712                     l2496:	
   716                           ;PR9B.c: 68: TRISB=0b00000000;
   717  0712  0186               	clrf	(134)^080h	;volatile
   718                           	line	69
   719                           	
   720  0713                     l2498:	
   721                           ;PR9B.c: 69: TRISD=0b00000000;
   722  0713  0188               	clrf	(136)^080h	;volatile
   723                           	line	70
   724                           ;PR9B.c: 70: TRISC=0b11110000;
   725  0714  30F0               	movlw	(0F0h)
   726  0715  0087               	movwf	(135)^080h	;volatile
   727                           	line	71
   728                           	
   729  0716                     l2500:	
   730                           ;PR9B.c: 71: TRISE=0b00000000;
   731  0716  0189               	clrf	(137)^080h	;volatile
   732                           	line	73
   733                           	
   734  0717                     l2502:	
   735                           ;PR9B.c: 73: PORTC=0;
   736  0717  1283               	bcf	status, 5	;RP0=0, select bank0
   737  0718  1303               	bcf	status, 6	;RP1=0, select bank0
   738  0719  0187               	clrf	(7)	;volatile
   739                           	line	74
   740                           	
   741  071A                     l2504:	
   742                           ;PR9B.c: 74: PORTD=0;
   743  071A  0188               	clrf	(8)	;volatile
   744                           	line	75
   745                           	
   746  071B                     l2506:	
   747                           ;PR9B.c: 75: RB1=0;
   748  071B  1086               	bcf	(49/8),(49)&7
   749                           	line	76
   750                           	
   751  071C                     l2508:	
   752                           ;PR9B.c: 76: RB2=0;
   753  071C  1106               	bcf	(50/8),(50)&7
   754                           	line	77
   755                           	
   756  071D                     l2510:	
   757                           ;PR9B.c: 77: RC2=0;
   758  071D  1107               	bcf	(58/8),(58)&7
   759                           	line	78
   760                           	
   761  071E                     l2512:	
   762                           ;PR9B.c: 78: RC3=0;
   763  071E  1187               	bcf	(59/8),(59)&7
   764                           	line	80
   765                           	
   766  071F                     l2514:	
   767                           ;PR9B.c: 80: send_config(0b00001001);
   768  071F  3009               	movlw	(09h)
   769  0720  120A  118A  22E6   	fcall	_send_config
              120A  118A         
   770                           	line	81
   771                           	
   772  0725                     l2516:	
   773                           ;PR9B.c: 81: send_config(0b00000010);
   774  0725  3002               	movlw	(02h)
   775  0726  120A  118A  22E6   	fcall	_send_config
              120A  118A         
   776                           	line	82
   777                           	
   778  072B                     l2518:	
   779                           ;PR9B.c: 82: send_config(0b00000110);
   780  072B  3006               	movlw	(06h)
   781  072C  120A  118A  22E6   	fcall	_send_config
              120A  118A         
   782                           	line	83
   783                           	
   784  0731                     l2520:	
   785                           ;PR9B.c: 83: send_config(0b00001100);
   786  0731  300C               	movlw	(0Ch)
   787  0732  120A  118A  22E6   	fcall	_send_config
              120A  118A         
   788                           	line	84
   789                           	
   790  0737                     l2522:	
   791                           ;PR9B.c: 84: send_config(0b00111000);
   792  0737  3038               	movlw	(038h)
   793  0738  120A  118A  22E6   	fcall	_send_config
              120A  118A         
   794                           	line	86
   795                           	
   796  073D                     l2524:	
   797                           ;PR9B.c: 86: lcd_clr();
   798  073D  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
   799                           	line	87
   800                           	
   801  0742                     l2526:	
   802                           ;PR9B.c: 87: delay(1000);
   803  0742  3000               	movlw	0
   804  0743  00F3               	movwf	(?_delay+3)
   805  0744  3000               	movlw	0
   806  0745  00F2               	movwf	(?_delay+2)
   807  0746  3003               	movlw	03h
   808  0747  00F1               	movwf	(?_delay+1)
   809  0748  30E8               	movlw	0E8h
   810  0749  00F0               	movwf	(?_delay)
   811                           
   812  074A  120A  118A  23B0   	fcall	_delay
              120A  118A         
   813                           	line	88
   814                           	
   815  074F                     l2528:	
   816                           ;PR9B.c: 88: lcd_goto(0);
   817  074F  3000               	movlw	(0)
   818  0750  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
   819                           	line	89
   820                           	
   821  0755                     l2530:	
   822                           ;PR9B.c: 89: send_string("PLEASE ENTER");
   823  0755  3012               	movlw	((STR_1-__stringbase))&0ffh
   824  0756  120A  118A  2356   	fcall	_send_string
              120A  118A         
   825                           	line	90
   826                           	
   827  075B                     l2532:	
   828                           ;PR9B.c: 90: lcd_goto(20);
   829  075B  3014               	movlw	(014h)
   830  075C  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
   831                           	line	91
   832                           	
   833  0761                     l2534:	
   834                           ;PR9B.c: 91: send_string("6-DIGIT PASSWORD");
   835  0761  3001               	movlw	((STR_2-__stringbase))&0ffh
   836  0762  120A  118A  2356   	fcall	_send_string
              120A  118A         
   837  0767  2F68               	goto	l2536
   838                           	line	94
   839                           ;PR9B.c: 94: while(1)
   840                           	
   841  0768                     l599:	
   842                           	line	96
   843                           	
   844  0768                     l2536:	
   845                           ;PR9B.c: 95: {
   846                           ;PR9B.c: 96: clearrow1();
   847  0768  120A  118A  22A2   	fcall	_clearrow1
              120A  118A         
   848                           	line	97
   849                           	
   850  076D                     l2538:	
   851                           ;PR9B.c: 97: scancolumn1();
   852  076D  120A  118A  2414   	fcall	_scancolumn1
              120A  118A         
   853                           	line	98
   854                           	
   855  0772                     l2540:	
   856                           ;PR9B.c: 98: clearrow2();
   857  0772  120A  118A  22A9   	fcall	_clearrow2
              120A  118A         
   858                           	line	99
   859                           	
   860  0777                     l2542:	
   861                           ;PR9B.c: 99: scancolumn2();
   862  0777  120A  118A  24D2   	fcall	_scancolumn2
              120A  118A         
   863                           	line	100
   864                           	
   865  077C                     l2544:	
   866                           ;PR9B.c: 100: clearrow3();
   867  077C  120A  118A  22B0   	fcall	_clearrow3
              120A  118A         
   868                           	line	101
   869                           	
   870  0781                     l2546:	
   871                           ;PR9B.c: 101: scancolumn3();
   872  0781  120A  118A  2590   	fcall	_scancolumn3
              120A  118A         
   873                           	line	102
   874                           	
   875  0786                     l2548:	
   876                           ;PR9B.c: 102: clearrow4();
   877  0786  120A  118A  22B7   	fcall	_clearrow4
              120A  118A         
   878                           	line	103
   879                           	
   880  078B                     l2550:	
   881                           ;PR9B.c: 103: scancolumn4();
   882  078B  120A  118A  264E   	fcall	_scancolumn4
              120A  118A         
   883                           	line	105
   884                           	
   885  0790                     l2552:	
   886                           ;PR9B.c: 105: if(password_count==6)
   887  0790  087C               	movf	(_password_count),w
   888  0791  3A06               	xorlw	06h
   889  0792  1D03               	skipz
   890  0793  2F95               	goto	u3291
   891  0794  2F96               	goto	u3290
   892  0795                     u3291:
   893  0795  2F68               	goto	l2536
   894  0796                     u3290:
   895                           	line	107
   896                           	
   897  0796                     l2554:	
   898                           ;PR9B.c: 106: {
   899                           ;PR9B.c: 107: password_count=0;
   900  0796  1003               	clrc
   901  0797  3000               	movlw	0
   902  0798  1803               	btfsc	status,0
   903  0799  3001               	movlw	1
   904  079A  00FC               	movwf	(_password_count)
   905                           	line	110
   906                           	
   907  079B                     l2556:	
   908                           ;PR9B.c: 108: if((keyin_char[0]==stalled_char[0])&&(keyin_char[1]==stalled_char[1])&&
   909                           ;PR9B.c: 109: (keyin_char[2]==stalled_char[2])&&(keyin_char[3]==stalled_char[3])&&
   910                           ;PR9B.c: 110: (keyin_char[4]==stalled_char[4])&&(keyin_char[5]==stalled_char[5]))
   911  079B  1283               	bcf	status, 5	;RP0=0, select bank0
   912  079C  1303               	bcf	status, 6	;RP1=0, select bank0
   913  079D  0820               	movf	(_keyin_char),w
   914  079E  0626               	xorwf	(_stalled_char),w
   915  079F  1D03               	skipz
   916  07A0  2FA2               	goto	u3301
   917  07A1  2FA3               	goto	u3300
   918  07A2                     u3301:
   919  07A2  2FDE               	goto	l2578
   920  07A3                     u3300:
   921                           	
   922  07A3                     l2558:	
   923  07A3  0821               	movf	0+(_keyin_char)+01h,w
   924  07A4  0627               	xorwf	0+(_stalled_char)+01h,w
   925  07A5  1D03               	skipz
   926  07A6  2FA8               	goto	u3311
   927  07A7  2FA9               	goto	u3310
   928  07A8                     u3311:
   929  07A8  2FDE               	goto	l2578
   930  07A9                     u3310:
   931                           	
   932  07A9                     l2560:	
   933  07A9  0822               	movf	0+(_keyin_char)+02h,w
   934  07AA  0628               	xorwf	0+(_stalled_char)+02h,w
   935  07AB  1D03               	skipz
   936  07AC  2FAE               	goto	u3321
   937  07AD  2FAF               	goto	u3320
   938  07AE                     u3321:
   939  07AE  2FDE               	goto	l2578
   940  07AF                     u3320:
   941                           	
   942  07AF                     l2562:	
   943  07AF  0823               	movf	0+(_keyin_char)+03h,w
   944  07B0  0629               	xorwf	0+(_stalled_char)+03h,w
   945  07B1  1D03               	skipz
   946  07B2  2FB4               	goto	u3331
   947  07B3  2FB5               	goto	u3330
   948  07B4                     u3331:
   949  07B4  2FDE               	goto	l2578
   950  07B5                     u3330:
   951                           	
   952  07B5                     l2564:	
   953  07B5  0824               	movf	0+(_keyin_char)+04h,w
   954  07B6  062A               	xorwf	0+(_stalled_char)+04h,w
   955  07B7  1D03               	skipz
   956  07B8  2FBA               	goto	u3341
   957  07B9  2FBB               	goto	u3340
   958  07BA                     u3341:
   959  07BA  2FDE               	goto	l2578
   960  07BB                     u3340:
   961                           	
   962  07BB                     l2566:	
   963  07BB  0825               	movf	0+(_keyin_char)+05h,w
   964  07BC  062B               	xorwf	0+(_stalled_char)+05h,w
   965  07BD  1D03               	skipz
   966  07BE  2FC0               	goto	u3351
   967  07BF  2FC1               	goto	u3350
   968  07C0                     u3351:
   969  07C0  2FDE               	goto	l2578
   970  07C1                     u3350:
   971                           	line	112
   972                           	
   973  07C1                     l2568:	
   974                           ;PR9B.c: 111: {
   975                           ;PR9B.c: 112: lcd_clr();
   976  07C1  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
   977                           	line	113
   978                           ;PR9B.c: 113: lcd_goto(0);
   979  07C6  3000               	movlw	(0)
   980  07C7  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
   981                           	line	114
   982                           	
   983  07CC                     l2570:	
   984                           ;PR9B.c: 114: send_string("SUCCESS!");
   985  07CC  301F               	movlw	((STR_3-__stringbase))&0ffh
   986  07CD  120A  118A  2356   	fcall	_send_string
              120A  118A         
   987                           	line	115
   988                           	
   989  07D2                     l2572:	
   990                           ;PR9B.c: 115: RC2=1;
   991  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
   992  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
   993  07D4  1507               	bsf	(58/8),(58)&7
   994                           	line	116
   995                           	
   996  07D5                     l2574:	
   997                           ;PR9B.c: 116: RB1=1;
   998  07D5  1486               	bsf	(49/8),(49)&7
   999                           	line	117
  1000                           	
  1001  07D6                     l2576:	
  1002                           ;PR9B.c: 117: beep_once();
  1003  07D6  120A  118A  22BE   	fcall	_beep_once
              120A  118A         
  1004  07DB  2FDC               	goto	l603
  1005                           	line	118
  1006                           ;PR9B.c: 118: while(1);
  1007                           	
  1008  07DC                     l602:	
  1009                           	
  1010  07DC                     l603:	
  1011  07DC  2FDC               	goto	l603
  1012                           	
  1013  07DD                     l604:	
  1014                           	line	119
  1015                           ;PR9B.c: 119: }
  1016  07DD  2F68               	goto	l2536
  1017                           	line	120
  1018                           	
  1019  07DE                     l601:	
  1020                           	line	122
  1021                           	
  1022  07DE                     l2578:	
  1023                           ;PR9B.c: 120: else
  1024                           ;PR9B.c: 121: {
  1025                           ;PR9B.c: 122: lcd_clr();
  1026  07DE  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1027                           	line	123
  1028                           ;PR9B.c: 123: lcd_goto(0);
  1029  07E3  3000               	movlw	(0)
  1030  07E4  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1031                           	line	124
  1032                           	
  1033  07E9                     l2580:	
  1034                           ;PR9B.c: 124: send_string("ERROR!");
  1035  07E9  3028               	movlw	((STR_4-__stringbase))&0ffh
  1036  07EA  120A  118A  2356   	fcall	_send_string
              120A  118A         
  1037                           	line	125
  1038                           	
  1039  07EF                     l2582:	
  1040                           ;PR9B.c: 125: RC3=1;
  1041  07EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1042  07F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1043  07F1  1587               	bsf	(59/8),(59)&7
  1044                           	line	126
  1045                           	
  1046  07F2                     l2584:	
  1047                           ;PR9B.c: 126: beep_twice();
  1048  07F2  120A  118A  23E0   	fcall	_beep_twice
              120A  118A         
  1049  07F7  2FF8               	goto	l607
  1050                           	line	127
  1051                           ;PR9B.c: 127: while(1);
  1052                           	
  1053  07F8                     l606:	
  1054                           	
  1055  07F8                     l607:	
  1056  07F8  2FF8               	goto	l607
  1057                           	
  1058  07F9                     l608:	
  1059  07F9  2F68               	goto	l2536
  1060                           	line	128
  1061                           	
  1062  07FA                     l605:	
  1063  07FA  2F68               	goto	l2536
  1064                           	line	129
  1065                           	
  1066  07FB                     l600:	
  1067  07FB  2F68               	goto	l2536
  1068                           	line	130
  1069                           	
  1070  07FC                     l609:	
  1071                           	line	94
  1072  07FC  2F68               	goto	l2536
  1073                           	
  1074  07FD                     l610:	
  1075                           	line	131
  1076                           	
  1077  07FD                     l611:	
  1078                           	global	start
  1079  07FD  120A  118A  2800   	ljmp	start
  1080                           	opt stack 0
  1081                           GLOBAL	__end_of_main
  1082  0800                     	__end_of_main:
  1083 ;; =============== function _main ends ============
  1084                           
  1085                           	signat	_main,88
  1086                           	global	_scancolumn4
  1087                           psect	text421,local,class=CODE,delta=2
  1088                           global __ptext421
  1089  064E                     __ptext421:
  1090                           
  1091 ;; *************** function _scancolumn4 *****************
  1092 ;; Defined at:
  1093 ;;		line 289 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;		None               void
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          1       0       0       0       0
  1110 ;;      Totals:         1       0       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    4
  1114 ;; This function calls:
  1115 ;;		_lcd_clr
  1116 ;;		_lcd_goto
  1117 ;;		_send_char
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           psect	text421
  1123                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1124                           	line	289
  1125                           	global	__size_of_scancolumn4
  1126  00BE                     	__size_of_scancolumn4	equ	__end_of_scancolumn4-_scancolumn4
  1127                           	
  1128  064E                     _scancolumn4:	
  1129                           	opt	stack 3
  1130                           ; Regs used in _scancolumn4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1131                           	line	290
  1132                           	
  1133  064E                     l2452:	
  1134                           ;PR9B.c: 290: if(RA0==0)
  1135  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  1136  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  1137  0650  1805               	btfsc	(40/8),(40)&7
  1138  0651  2E53               	goto	u3171
  1139  0652  2E54               	goto	u3170
  1140  0653                     u3171:
  1141  0653  2E7E               	goto	l704
  1142  0654                     u3170:
  1143  0654  2E56               	goto	l705
  1144                           	line	292
  1145                           	
  1146  0655                     l2454:	
  1147                           ;PR9B.c: 291: {
  1148                           ;PR9B.c: 292: while(RA0==0)continue;
  1149  0655  2E56               	goto	l705
  1150                           	
  1151  0656                     l706:	
  1152                           	
  1153  0656                     l705:	
  1154  0656  1C05               	btfss	(40/8),(40)&7
  1155  0657  2E59               	goto	u3181
  1156  0658  2E5A               	goto	u3180
  1157  0659                     u3181:
  1158  0659  2E56               	goto	l705
  1159  065A                     u3180:
  1160  065A  2E5B               	goto	l2456
  1161                           	
  1162  065B                     l707:	
  1163                           	line	293
  1164                           	
  1165  065B                     l2456:	
  1166                           ;PR9B.c: 293: if(password_count==0)lcd_clr();
  1167  065B  08FC               	movf	(_password_count),f
  1168  065C  1D03               	skipz
  1169  065D  2E5F               	goto	u3191
  1170  065E  2E60               	goto	u3190
  1171  065F                     u3191:
  1172  065F  2E65               	goto	l708
  1173  0660                     u3190:
  1174                           	
  1175  0660                     l2458:	
  1176  0660  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1177                           	
  1178  0665                     l708:	
  1179                           	line	294
  1180                           ;PR9B.c: 294: lcd_goto(password_count);
  1181  0665  087C               	movf	(_password_count),w
  1182  0666  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1183                           	line	295
  1184                           ;PR9B.c: 295: send_char('*');
  1185  066B  302A               	movlw	(02Ah)
  1186  066C  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1187                           	line	296
  1188                           	
  1189  0671                     l2460:	
  1190                           ;PR9B.c: 296: keyin_char[password_count]='*';
  1191  0671  302A               	movlw	(02Ah)
  1192  0672  00FB               	movwf	(??_scancolumn4+0)+0
  1193  0673  087C               	movf	(_password_count),w
  1194  0674  3E20               	addlw	_keyin_char&0ffh
  1195  0675  0084               	movwf	fsr0
  1196  0676  087B               	movf	(??_scancolumn4+0)+0,w
  1197  0677  1383               	bcf	status, 7	;select IRP bank0
  1198  0678  0080               	movwf	indf
  1199                           	line	297
  1200                           	
  1201  0679                     l2462:	
  1202                           ;PR9B.c: 297: password_count+=1;
  1203  0679  3001               	movlw	(01h)
  1204  067A  00FB               	movwf	(??_scancolumn4+0)+0
  1205  067B  087B               	movf	(??_scancolumn4+0)+0,w
  1206  067C  07FC               	addwf	(_password_count),f
  1207                           	line	298
  1208                           ;PR9B.c: 298: }
  1209  067D  2F0B               	goto	l727
  1210                           	line	299
  1211                           	
  1212  067E                     l704:	
  1213                           ;PR9B.c: 299: else if(RA1==0)
  1214  067E  1885               	btfsc	(41/8),(41)&7
  1215  067F  2E81               	goto	u3201
  1216  0680  2E82               	goto	u3200
  1217  0681                     u3201:
  1218  0681  2EAC               	goto	l710
  1219  0682                     u3200:
  1220  0682  2E84               	goto	l711
  1221                           	line	301
  1222                           	
  1223  0683                     l2464:	
  1224                           ;PR9B.c: 300: {
  1225                           ;PR9B.c: 301: while(RA1==0)continue;
  1226  0683  2E84               	goto	l711
  1227                           	
  1228  0684                     l712:	
  1229                           	
  1230  0684                     l711:	
  1231  0684  1C85               	btfss	(41/8),(41)&7
  1232  0685  2E87               	goto	u3211
  1233  0686  2E88               	goto	u3210
  1234  0687                     u3211:
  1235  0687  2E84               	goto	l711
  1236  0688                     u3210:
  1237  0688  2E89               	goto	l2466
  1238                           	
  1239  0689                     l713:	
  1240                           	line	302
  1241                           	
  1242  0689                     l2466:	
  1243                           ;PR9B.c: 302: if(password_count==0)lcd_clr();
  1244  0689  08FC               	movf	(_password_count),f
  1245  068A  1D03               	skipz
  1246  068B  2E8D               	goto	u3221
  1247  068C  2E8E               	goto	u3220
  1248  068D                     u3221:
  1249  068D  2E93               	goto	l714
  1250  068E                     u3220:
  1251                           	
  1252  068E                     l2468:	
  1253  068E  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1254                           	
  1255  0693                     l714:	
  1256                           	line	303
  1257                           ;PR9B.c: 303: lcd_goto(password_count);
  1258  0693  087C               	movf	(_password_count),w
  1259  0694  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1260                           	line	304
  1261                           ;PR9B.c: 304: send_char('*');
  1262  0699  302A               	movlw	(02Ah)
  1263  069A  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1264                           	line	305
  1265                           	
  1266  069F                     l2470:	
  1267                           ;PR9B.c: 305: keyin_char[password_count]='0';
  1268  069F  3030               	movlw	(030h)
  1269  06A0  00FB               	movwf	(??_scancolumn4+0)+0
  1270  06A1  087C               	movf	(_password_count),w
  1271  06A2  3E20               	addlw	_keyin_char&0ffh
  1272  06A3  0084               	movwf	fsr0
  1273  06A4  087B               	movf	(??_scancolumn4+0)+0,w
  1274  06A5  1383               	bcf	status, 7	;select IRP bank0
  1275  06A6  0080               	movwf	indf
  1276                           	line	306
  1277                           	
  1278  06A7                     l2472:	
  1279                           ;PR9B.c: 306: password_count+=1;
  1280  06A7  3001               	movlw	(01h)
  1281  06A8  00FB               	movwf	(??_scancolumn4+0)+0
  1282  06A9  087B               	movf	(??_scancolumn4+0)+0,w
  1283  06AA  07FC               	addwf	(_password_count),f
  1284                           	line	307
  1285                           ;PR9B.c: 307: }
  1286  06AB  2F0B               	goto	l727
  1287                           	line	308
  1288                           	
  1289  06AC                     l710:	
  1290                           ;PR9B.c: 308: else if(RA2==0)
  1291  06AC  1905               	btfsc	(42/8),(42)&7
  1292  06AD  2EAF               	goto	u3231
  1293  06AE  2EB0               	goto	u3230
  1294  06AF                     u3231:
  1295  06AF  2EDA               	goto	l716
  1296  06B0                     u3230:
  1297  06B0  2EB2               	goto	l717
  1298                           	line	310
  1299                           	
  1300  06B1                     l2474:	
  1301                           ;PR9B.c: 309: {
  1302                           ;PR9B.c: 310: while(RA2==0)continue;
  1303  06B1  2EB2               	goto	l717
  1304                           	
  1305  06B2                     l718:	
  1306                           	
  1307  06B2                     l717:	
  1308  06B2  1D05               	btfss	(42/8),(42)&7
  1309  06B3  2EB5               	goto	u3241
  1310  06B4  2EB6               	goto	u3240
  1311  06B5                     u3241:
  1312  06B5  2EB2               	goto	l717
  1313  06B6                     u3240:
  1314  06B6  2EB7               	goto	l2476
  1315                           	
  1316  06B7                     l719:	
  1317                           	line	311
  1318                           	
  1319  06B7                     l2476:	
  1320                           ;PR9B.c: 311: if(password_count==0)lcd_clr();
  1321  06B7  08FC               	movf	(_password_count),f
  1322  06B8  1D03               	skipz
  1323  06B9  2EBB               	goto	u3251
  1324  06BA  2EBC               	goto	u3250
  1325  06BB                     u3251:
  1326  06BB  2EC1               	goto	l720
  1327  06BC                     u3250:
  1328                           	
  1329  06BC                     l2478:	
  1330  06BC  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1331                           	
  1332  06C1                     l720:	
  1333                           	line	312
  1334                           ;PR9B.c: 312: lcd_goto(password_count);
  1335  06C1  087C               	movf	(_password_count),w
  1336  06C2  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1337                           	line	313
  1338                           ;PR9B.c: 313: send_char('*');
  1339  06C7  302A               	movlw	(02Ah)
  1340  06C8  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1341                           	line	314
  1342                           	
  1343  06CD                     l2480:	
  1344                           ;PR9B.c: 314: keyin_char[password_count]='#';
  1345  06CD  3023               	movlw	(023h)
  1346  06CE  00FB               	movwf	(??_scancolumn4+0)+0
  1347  06CF  087C               	movf	(_password_count),w
  1348  06D0  3E20               	addlw	_keyin_char&0ffh
  1349  06D1  0084               	movwf	fsr0
  1350  06D2  087B               	movf	(??_scancolumn4+0)+0,w
  1351  06D3  1383               	bcf	status, 7	;select IRP bank0
  1352  06D4  0080               	movwf	indf
  1353                           	line	315
  1354                           	
  1355  06D5                     l2482:	
  1356                           ;PR9B.c: 315: password_count+=1;
  1357  06D5  3001               	movlw	(01h)
  1358  06D6  00FB               	movwf	(??_scancolumn4+0)+0
  1359  06D7  087B               	movf	(??_scancolumn4+0)+0,w
  1360  06D8  07FC               	addwf	(_password_count),f
  1361                           	line	316
  1362                           ;PR9B.c: 316: }
  1363  06D9  2F0B               	goto	l727
  1364                           	line	317
  1365                           	
  1366  06DA                     l716:	
  1367                           ;PR9B.c: 317: else if(RA3==0)
  1368  06DA  1985               	btfsc	(43/8),(43)&7
  1369  06DB  2EDD               	goto	u3261
  1370  06DC  2EDE               	goto	u3260
  1371  06DD                     u3261:
  1372  06DD  2F0B               	goto	l727
  1373  06DE                     u3260:
  1374  06DE  2EE0               	goto	l723
  1375                           	line	319
  1376                           	
  1377  06DF                     l2484:	
  1378                           ;PR9B.c: 318: {
  1379                           ;PR9B.c: 319: while(RA3==0)continue;
  1380  06DF  2EE0               	goto	l723
  1381                           	
  1382  06E0                     l724:	
  1383                           	
  1384  06E0                     l723:	
  1385  06E0  1D85               	btfss	(43/8),(43)&7
  1386  06E1  2EE3               	goto	u3271
  1387  06E2  2EE4               	goto	u3270
  1388  06E3                     u3271:
  1389  06E3  2EE0               	goto	l723
  1390  06E4                     u3270:
  1391  06E4  2EE5               	goto	l2486
  1392                           	
  1393  06E5                     l725:	
  1394                           	line	320
  1395                           	
  1396  06E5                     l2486:	
  1397                           ;PR9B.c: 320: if(password_count==0)lcd_clr();
  1398  06E5  08FC               	movf	(_password_count),f
  1399  06E6  1D03               	skipz
  1400  06E7  2EE9               	goto	u3281
  1401  06E8  2EEA               	goto	u3280
  1402  06E9                     u3281:
  1403  06E9  2EEF               	goto	l726
  1404  06EA                     u3280:
  1405                           	
  1406  06EA                     l2488:	
  1407  06EA  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1408                           	
  1409  06EF                     l726:	
  1410                           	line	321
  1411                           ;PR9B.c: 321: lcd_goto(password_count);
  1412  06EF  087C               	movf	(_password_count),w
  1413  06F0  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1414                           	line	322
  1415                           ;PR9B.c: 322: send_char('*');
  1416  06F5  302A               	movlw	(02Ah)
  1417  06F6  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1418                           	line	323
  1419                           	
  1420  06FB                     l2490:	
  1421                           ;PR9B.c: 323: keyin_char[password_count]='D';
  1422  06FB  3044               	movlw	(044h)
  1423  06FC  00FB               	movwf	(??_scancolumn4+0)+0
  1424  06FD  087C               	movf	(_password_count),w
  1425  06FE  3E20               	addlw	_keyin_char&0ffh
  1426  06FF  0084               	movwf	fsr0
  1427  0700  087B               	movf	(??_scancolumn4+0)+0,w
  1428  0701  1383               	bcf	status, 7	;select IRP bank0
  1429  0702  0080               	movwf	indf
  1430                           	line	324
  1431                           	
  1432  0703                     l2492:	
  1433                           ;PR9B.c: 324: password_count+=1;
  1434  0703  3001               	movlw	(01h)
  1435  0704  00FB               	movwf	(??_scancolumn4+0)+0
  1436  0705  087B               	movf	(??_scancolumn4+0)+0,w
  1437  0706  07FC               	addwf	(_password_count),f
  1438  0707  2F0B               	goto	l727
  1439                           	line	325
  1440                           	
  1441  0708                     l722:	
  1442  0708  2F0B               	goto	l727
  1443                           	line	326
  1444                           	
  1445  0709                     l721:	
  1446  0709  2F0B               	goto	l727
  1447                           	
  1448  070A                     l715:	
  1449  070A  2F0B               	goto	l727
  1450                           	
  1451  070B                     l709:	
  1452                           	
  1453  070B                     l727:	
  1454  070B  0008               	return
  1455                           	opt stack 0
  1456                           GLOBAL	__end_of_scancolumn4
  1457  070C                     	__end_of_scancolumn4:
  1458 ;; =============== function _scancolumn4 ends ============
  1459                           
  1460                           	signat	_scancolumn4,88
  1461                           	global	_scancolumn3
  1462                           psect	text422,local,class=CODE,delta=2
  1463                           global __ptext422
  1464  0590                     __ptext422:
  1465                           
  1466 ;; *************** function _scancolumn3 *****************
  1467 ;; Defined at:
  1468 ;;		line 249 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;		None               void
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0
  1484 ;;      Temps:          1       0       0       0       0
  1485 ;;      Totals:         1       0       0       0       0
  1486 ;;Total ram usage:        1 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    4
  1489 ;; This function calls:
  1490 ;;		_lcd_clr
  1491 ;;		_lcd_goto
  1492 ;;		_send_char
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           psect	text422
  1498                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1499                           	line	249
  1500                           	global	__size_of_scancolumn3
  1501  00BE                     	__size_of_scancolumn3	equ	__end_of_scancolumn3-_scancolumn3
  1502                           	
  1503  0590                     _scancolumn3:	
  1504                           	opt	stack 3
  1505                           ; Regs used in _scancolumn3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506                           	line	250
  1507                           	
  1508  0590                     l2410:	
  1509                           ;PR9B.c: 250: if(RA0==0)
  1510  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  1511  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  1512  0592  1805               	btfsc	(40/8),(40)&7
  1513  0593  2D95               	goto	u3051
  1514  0594  2D96               	goto	u3050
  1515  0595                     u3051:
  1516  0595  2DC0               	goto	l678
  1517  0596                     u3050:
  1518  0596  2D98               	goto	l679
  1519                           	line	252
  1520                           	
  1521  0597                     l2412:	
  1522                           ;PR9B.c: 251: {
  1523                           ;PR9B.c: 252: while(RA0==0)continue;
  1524  0597  2D98               	goto	l679
  1525                           	
  1526  0598                     l680:	
  1527                           	
  1528  0598                     l679:	
  1529  0598  1C05               	btfss	(40/8),(40)&7
  1530  0599  2D9B               	goto	u3061
  1531  059A  2D9C               	goto	u3060
  1532  059B                     u3061:
  1533  059B  2D98               	goto	l679
  1534  059C                     u3060:
  1535  059C  2D9D               	goto	l2414
  1536                           	
  1537  059D                     l681:	
  1538                           	line	253
  1539                           	
  1540  059D                     l2414:	
  1541                           ;PR9B.c: 253: if(password_count==0)lcd_clr();
  1542  059D  08FC               	movf	(_password_count),f
  1543  059E  1D03               	skipz
  1544  059F  2DA1               	goto	u3071
  1545  05A0  2DA2               	goto	u3070
  1546  05A1                     u3071:
  1547  05A1  2DA7               	goto	l682
  1548  05A2                     u3070:
  1549                           	
  1550  05A2                     l2416:	
  1551  05A2  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1552                           	
  1553  05A7                     l682:	
  1554                           	line	254
  1555                           ;PR9B.c: 254: lcd_goto(password_count);
  1556  05A7  087C               	movf	(_password_count),w
  1557  05A8  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1558                           	line	255
  1559                           ;PR9B.c: 255: send_char('*');
  1560  05AD  302A               	movlw	(02Ah)
  1561  05AE  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1562                           	line	256
  1563                           	
  1564  05B3                     l2418:	
  1565                           ;PR9B.c: 256: keyin_char[password_count]='7';
  1566  05B3  3037               	movlw	(037h)
  1567  05B4  00FB               	movwf	(??_scancolumn3+0)+0
  1568  05B5  087C               	movf	(_password_count),w
  1569  05B6  3E20               	addlw	_keyin_char&0ffh
  1570  05B7  0084               	movwf	fsr0
  1571  05B8  087B               	movf	(??_scancolumn3+0)+0,w
  1572  05B9  1383               	bcf	status, 7	;select IRP bank0
  1573  05BA  0080               	movwf	indf
  1574                           	line	257
  1575                           	
  1576  05BB                     l2420:	
  1577                           ;PR9B.c: 257: password_count+=1;
  1578  05BB  3001               	movlw	(01h)
  1579  05BC  00FB               	movwf	(??_scancolumn3+0)+0
  1580  05BD  087B               	movf	(??_scancolumn3+0)+0,w
  1581  05BE  07FC               	addwf	(_password_count),f
  1582                           	line	258
  1583                           ;PR9B.c: 258: }
  1584  05BF  2E4D               	goto	l701
  1585                           	line	259
  1586                           	
  1587  05C0                     l678:	
  1588                           ;PR9B.c: 259: else if(RA1==0)
  1589  05C0  1885               	btfsc	(41/8),(41)&7
  1590  05C1  2DC3               	goto	u3081
  1591  05C2  2DC4               	goto	u3080
  1592  05C3                     u3081:
  1593  05C3  2DEE               	goto	l684
  1594  05C4                     u3080:
  1595  05C4  2DC6               	goto	l685
  1596                           	line	261
  1597                           	
  1598  05C5                     l2422:	
  1599                           ;PR9B.c: 260: {
  1600                           ;PR9B.c: 261: while(RA1==0)continue;
  1601  05C5  2DC6               	goto	l685
  1602                           	
  1603  05C6                     l686:	
  1604                           	
  1605  05C6                     l685:	
  1606  05C6  1C85               	btfss	(41/8),(41)&7
  1607  05C7  2DC9               	goto	u3091
  1608  05C8  2DCA               	goto	u3090
  1609  05C9                     u3091:
  1610  05C9  2DC6               	goto	l685
  1611  05CA                     u3090:
  1612  05CA  2DCB               	goto	l2424
  1613                           	
  1614  05CB                     l687:	
  1615                           	line	262
  1616                           	
  1617  05CB                     l2424:	
  1618                           ;PR9B.c: 262: if(password_count==0)lcd_clr();
  1619  05CB  08FC               	movf	(_password_count),f
  1620  05CC  1D03               	skipz
  1621  05CD  2DCF               	goto	u3101
  1622  05CE  2DD0               	goto	u3100
  1623  05CF                     u3101:
  1624  05CF  2DD5               	goto	l688
  1625  05D0                     u3100:
  1626                           	
  1627  05D0                     l2426:	
  1628  05D0  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1629                           	
  1630  05D5                     l688:	
  1631                           	line	263
  1632                           ;PR9B.c: 263: lcd_goto(password_count);
  1633  05D5  087C               	movf	(_password_count),w
  1634  05D6  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1635                           	line	264
  1636                           ;PR9B.c: 264: send_char('*');
  1637  05DB  302A               	movlw	(02Ah)
  1638  05DC  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1639                           	line	265
  1640                           	
  1641  05E1                     l2428:	
  1642                           ;PR9B.c: 265: keyin_char[password_count]='8';
  1643  05E1  3038               	movlw	(038h)
  1644  05E2  00FB               	movwf	(??_scancolumn3+0)+0
  1645  05E3  087C               	movf	(_password_count),w
  1646  05E4  3E20               	addlw	_keyin_char&0ffh
  1647  05E5  0084               	movwf	fsr0
  1648  05E6  087B               	movf	(??_scancolumn3+0)+0,w
  1649  05E7  1383               	bcf	status, 7	;select IRP bank0
  1650  05E8  0080               	movwf	indf
  1651                           	line	266
  1652                           	
  1653  05E9                     l2430:	
  1654                           ;PR9B.c: 266: password_count+=1;
  1655  05E9  3001               	movlw	(01h)
  1656  05EA  00FB               	movwf	(??_scancolumn3+0)+0
  1657  05EB  087B               	movf	(??_scancolumn3+0)+0,w
  1658  05EC  07FC               	addwf	(_password_count),f
  1659                           	line	267
  1660                           ;PR9B.c: 267: }
  1661  05ED  2E4D               	goto	l701
  1662                           	line	268
  1663                           	
  1664  05EE                     l684:	
  1665                           ;PR9B.c: 268: else if(RA2==0)
  1666  05EE  1905               	btfsc	(42/8),(42)&7
  1667  05EF  2DF1               	goto	u3111
  1668  05F0  2DF2               	goto	u3110
  1669  05F1                     u3111:
  1670  05F1  2E1C               	goto	l690
  1671  05F2                     u3110:
  1672  05F2  2DF4               	goto	l691
  1673                           	line	270
  1674                           	
  1675  05F3                     l2432:	
  1676                           ;PR9B.c: 269: {
  1677                           ;PR9B.c: 270: while(RA2==0)continue;
  1678  05F3  2DF4               	goto	l691
  1679                           	
  1680  05F4                     l692:	
  1681                           	
  1682  05F4                     l691:	
  1683  05F4  1D05               	btfss	(42/8),(42)&7
  1684  05F5  2DF7               	goto	u3121
  1685  05F6  2DF8               	goto	u3120
  1686  05F7                     u3121:
  1687  05F7  2DF4               	goto	l691
  1688  05F8                     u3120:
  1689  05F8  2DF9               	goto	l2434
  1690                           	
  1691  05F9                     l693:	
  1692                           	line	271
  1693                           	
  1694  05F9                     l2434:	
  1695                           ;PR9B.c: 271: if(password_count==0)lcd_clr();
  1696  05F9  08FC               	movf	(_password_count),f
  1697  05FA  1D03               	skipz
  1698  05FB  2DFD               	goto	u3131
  1699  05FC  2DFE               	goto	u3130
  1700  05FD                     u3131:
  1701  05FD  2E03               	goto	l694
  1702  05FE                     u3130:
  1703                           	
  1704  05FE                     l2436:	
  1705  05FE  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1706                           	
  1707  0603                     l694:	
  1708                           	line	272
  1709                           ;PR9B.c: 272: lcd_goto(password_count);
  1710  0603  087C               	movf	(_password_count),w
  1711  0604  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1712                           	line	273
  1713                           ;PR9B.c: 273: send_char('*');
  1714  0609  302A               	movlw	(02Ah)
  1715  060A  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1716                           	line	274
  1717                           	
  1718  060F                     l2438:	
  1719                           ;PR9B.c: 274: keyin_char[password_count]='9';
  1720  060F  3039               	movlw	(039h)
  1721  0610  00FB               	movwf	(??_scancolumn3+0)+0
  1722  0611  087C               	movf	(_password_count),w
  1723  0612  3E20               	addlw	_keyin_char&0ffh
  1724  0613  0084               	movwf	fsr0
  1725  0614  087B               	movf	(??_scancolumn3+0)+0,w
  1726  0615  1383               	bcf	status, 7	;select IRP bank0
  1727  0616  0080               	movwf	indf
  1728                           	line	275
  1729                           	
  1730  0617                     l2440:	
  1731                           ;PR9B.c: 275: password_count+=1;
  1732  0617  3001               	movlw	(01h)
  1733  0618  00FB               	movwf	(??_scancolumn3+0)+0
  1734  0619  087B               	movf	(??_scancolumn3+0)+0,w
  1735  061A  07FC               	addwf	(_password_count),f
  1736                           	line	276
  1737                           ;PR9B.c: 276: }
  1738  061B  2E4D               	goto	l701
  1739                           	line	277
  1740                           	
  1741  061C                     l690:	
  1742                           ;PR9B.c: 277: else if(RA3==0)
  1743  061C  1985               	btfsc	(43/8),(43)&7
  1744  061D  2E1F               	goto	u3141
  1745  061E  2E20               	goto	u3140
  1746  061F                     u3141:
  1747  061F  2E4D               	goto	l701
  1748  0620                     u3140:
  1749  0620  2E22               	goto	l697
  1750                           	line	279
  1751                           	
  1752  0621                     l2442:	
  1753                           ;PR9B.c: 278: {
  1754                           ;PR9B.c: 279: while(RA3==0)continue;
  1755  0621  2E22               	goto	l697
  1756                           	
  1757  0622                     l698:	
  1758                           	
  1759  0622                     l697:	
  1760  0622  1D85               	btfss	(43/8),(43)&7
  1761  0623  2E25               	goto	u3151
  1762  0624  2E26               	goto	u3150
  1763  0625                     u3151:
  1764  0625  2E22               	goto	l697
  1765  0626                     u3150:
  1766  0626  2E27               	goto	l2444
  1767                           	
  1768  0627                     l699:	
  1769                           	line	280
  1770                           	
  1771  0627                     l2444:	
  1772                           ;PR9B.c: 280: if(password_count==0)lcd_clr();
  1773  0627  08FC               	movf	(_password_count),f
  1774  0628  1D03               	skipz
  1775  0629  2E2B               	goto	u3161
  1776  062A  2E2C               	goto	u3160
  1777  062B                     u3161:
  1778  062B  2E31               	goto	l700
  1779  062C                     u3160:
  1780                           	
  1781  062C                     l2446:	
  1782  062C  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1783                           	
  1784  0631                     l700:	
  1785                           	line	281
  1786                           ;PR9B.c: 281: lcd_goto(password_count);
  1787  0631  087C               	movf	(_password_count),w
  1788  0632  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1789                           	line	282
  1790                           ;PR9B.c: 282: send_char('*');
  1791  0637  302A               	movlw	(02Ah)
  1792  0638  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1793                           	line	283
  1794                           	
  1795  063D                     l2448:	
  1796                           ;PR9B.c: 283: keyin_char[password_count]='C';
  1797  063D  3043               	movlw	(043h)
  1798  063E  00FB               	movwf	(??_scancolumn3+0)+0
  1799  063F  087C               	movf	(_password_count),w
  1800  0640  3E20               	addlw	_keyin_char&0ffh
  1801  0641  0084               	movwf	fsr0
  1802  0642  087B               	movf	(??_scancolumn3+0)+0,w
  1803  0643  1383               	bcf	status, 7	;select IRP bank0
  1804  0644  0080               	movwf	indf
  1805                           	line	284
  1806                           	
  1807  0645                     l2450:	
  1808                           ;PR9B.c: 284: password_count+=1;
  1809  0645  3001               	movlw	(01h)
  1810  0646  00FB               	movwf	(??_scancolumn3+0)+0
  1811  0647  087B               	movf	(??_scancolumn3+0)+0,w
  1812  0648  07FC               	addwf	(_password_count),f
  1813  0649  2E4D               	goto	l701
  1814                           	line	285
  1815                           	
  1816  064A                     l696:	
  1817  064A  2E4D               	goto	l701
  1818                           	line	286
  1819                           	
  1820  064B                     l695:	
  1821  064B  2E4D               	goto	l701
  1822                           	
  1823  064C                     l689:	
  1824  064C  2E4D               	goto	l701
  1825                           	
  1826  064D                     l683:	
  1827                           	
  1828  064D                     l701:	
  1829  064D  0008               	return
  1830                           	opt stack 0
  1831                           GLOBAL	__end_of_scancolumn3
  1832  064E                     	__end_of_scancolumn3:
  1833 ;; =============== function _scancolumn3 ends ============
  1834                           
  1835                           	signat	_scancolumn3,88
  1836                           	global	_scancolumn2
  1837                           psect	text423,local,class=CODE,delta=2
  1838                           global __ptext423
  1839  04D2                     __ptext423:
  1840                           
  1841 ;; *************** function _scancolumn2 *****************
  1842 ;; Defined at:
  1843 ;;		line 209 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;		None               void
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0
  1859 ;;      Temps:          1       0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		_lcd_clr
  1866 ;;		_lcd_goto
  1867 ;;		_send_char
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           psect	text423
  1873                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  1874                           	line	209
  1875                           	global	__size_of_scancolumn2
  1876  00BE                     	__size_of_scancolumn2	equ	__end_of_scancolumn2-_scancolumn2
  1877                           	
  1878  04D2                     _scancolumn2:	
  1879                           	opt	stack 3
  1880                           ; Regs used in _scancolumn2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1881                           	line	210
  1882                           	
  1883  04D2                     l2368:	
  1884                           ;PR9B.c: 210: if(RA0==0)
  1885  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1886  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1887  04D4  1805               	btfsc	(40/8),(40)&7
  1888  04D5  2CD7               	goto	u2931
  1889  04D6  2CD8               	goto	u2930
  1890  04D7                     u2931:
  1891  04D7  2D02               	goto	l652
  1892  04D8                     u2930:
  1893  04D8  2CDA               	goto	l653
  1894                           	line	212
  1895                           	
  1896  04D9                     l2370:	
  1897                           ;PR9B.c: 211: {
  1898                           ;PR9B.c: 212: while(RA0==0)continue;
  1899  04D9  2CDA               	goto	l653
  1900                           	
  1901  04DA                     l654:	
  1902                           	
  1903  04DA                     l653:	
  1904  04DA  1C05               	btfss	(40/8),(40)&7
  1905  04DB  2CDD               	goto	u2941
  1906  04DC  2CDE               	goto	u2940
  1907  04DD                     u2941:
  1908  04DD  2CDA               	goto	l653
  1909  04DE                     u2940:
  1910  04DE  2CDF               	goto	l2372
  1911                           	
  1912  04DF                     l655:	
  1913                           	line	213
  1914                           	
  1915  04DF                     l2372:	
  1916                           ;PR9B.c: 213: if(password_count==0)lcd_clr();
  1917  04DF  08FC               	movf	(_password_count),f
  1918  04E0  1D03               	skipz
  1919  04E1  2CE3               	goto	u2951
  1920  04E2  2CE4               	goto	u2950
  1921  04E3                     u2951:
  1922  04E3  2CE9               	goto	l656
  1923  04E4                     u2950:
  1924                           	
  1925  04E4                     l2374:	
  1926  04E4  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  1927                           	
  1928  04E9                     l656:	
  1929                           	line	214
  1930                           ;PR9B.c: 214: lcd_goto(password_count);
  1931  04E9  087C               	movf	(_password_count),w
  1932  04EA  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  1933                           	line	215
  1934                           ;PR9B.c: 215: send_char('*');
  1935  04EF  302A               	movlw	(02Ah)
  1936  04F0  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  1937                           	line	216
  1938                           	
  1939  04F5                     l2376:	
  1940                           ;PR9B.c: 216: keyin_char[password_count]='4';
  1941  04F5  3034               	movlw	(034h)
  1942  04F6  00FB               	movwf	(??_scancolumn2+0)+0
  1943  04F7  087C               	movf	(_password_count),w
  1944  04F8  3E20               	addlw	_keyin_char&0ffh
  1945  04F9  0084               	movwf	fsr0
  1946  04FA  087B               	movf	(??_scancolumn2+0)+0,w
  1947  04FB  1383               	bcf	status, 7	;select IRP bank0
  1948  04FC  0080               	movwf	indf
  1949                           	line	217
  1950                           	
  1951  04FD                     l2378:	
  1952                           ;PR9B.c: 217: password_count+=1;
  1953  04FD  3001               	movlw	(01h)
  1954  04FE  00FB               	movwf	(??_scancolumn2+0)+0
  1955  04FF  087B               	movf	(??_scancolumn2+0)+0,w
  1956  0500  07FC               	addwf	(_password_count),f
  1957                           	line	218
  1958                           ;PR9B.c: 218: }
  1959  0501  2D8F               	goto	l675
  1960                           	line	219
  1961                           	
  1962  0502                     l652:	
  1963                           ;PR9B.c: 219: else if(RA1==0)
  1964  0502  1885               	btfsc	(41/8),(41)&7
  1965  0503  2D05               	goto	u2961
  1966  0504  2D06               	goto	u2960
  1967  0505                     u2961:
  1968  0505  2D30               	goto	l658
  1969  0506                     u2960:
  1970  0506  2D08               	goto	l659
  1971                           	line	221
  1972                           	
  1973  0507                     l2380:	
  1974                           ;PR9B.c: 220: {
  1975                           ;PR9B.c: 221: while(RA1==0)continue;
  1976  0507  2D08               	goto	l659
  1977                           	
  1978  0508                     l660:	
  1979                           	
  1980  0508                     l659:	
  1981  0508  1C85               	btfss	(41/8),(41)&7
  1982  0509  2D0B               	goto	u2971
  1983  050A  2D0C               	goto	u2970
  1984  050B                     u2971:
  1985  050B  2D08               	goto	l659
  1986  050C                     u2970:
  1987  050C  2D0D               	goto	l2382
  1988                           	
  1989  050D                     l661:	
  1990                           	line	222
  1991                           	
  1992  050D                     l2382:	
  1993                           ;PR9B.c: 222: if(password_count==0)lcd_clr();
  1994  050D  08FC               	movf	(_password_count),f
  1995  050E  1D03               	skipz
  1996  050F  2D11               	goto	u2981
  1997  0510  2D12               	goto	u2980
  1998  0511                     u2981:
  1999  0511  2D17               	goto	l662
  2000  0512                     u2980:
  2001                           	
  2002  0512                     l2384:	
  2003  0512  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2004                           	
  2005  0517                     l662:	
  2006                           	line	223
  2007                           ;PR9B.c: 223: lcd_goto(password_count);
  2008  0517  087C               	movf	(_password_count),w
  2009  0518  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2010                           	line	224
  2011                           ;PR9B.c: 224: send_char('*');
  2012  051D  302A               	movlw	(02Ah)
  2013  051E  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2014                           	line	225
  2015                           	
  2016  0523                     l2386:	
  2017                           ;PR9B.c: 225: keyin_char[password_count]='5';
  2018  0523  3035               	movlw	(035h)
  2019  0524  00FB               	movwf	(??_scancolumn2+0)+0
  2020  0525  087C               	movf	(_password_count),w
  2021  0526  3E20               	addlw	_keyin_char&0ffh
  2022  0527  0084               	movwf	fsr0
  2023  0528  087B               	movf	(??_scancolumn2+0)+0,w
  2024  0529  1383               	bcf	status, 7	;select IRP bank0
  2025  052A  0080               	movwf	indf
  2026                           	line	226
  2027                           	
  2028  052B                     l2388:	
  2029                           ;PR9B.c: 226: password_count+=1;
  2030  052B  3001               	movlw	(01h)
  2031  052C  00FB               	movwf	(??_scancolumn2+0)+0
  2032  052D  087B               	movf	(??_scancolumn2+0)+0,w
  2033  052E  07FC               	addwf	(_password_count),f
  2034                           	line	227
  2035                           ;PR9B.c: 227: }
  2036  052F  2D8F               	goto	l675
  2037                           	line	228
  2038                           	
  2039  0530                     l658:	
  2040                           ;PR9B.c: 228: else if(RA2==0)
  2041  0530  1905               	btfsc	(42/8),(42)&7
  2042  0531  2D33               	goto	u2991
  2043  0532  2D34               	goto	u2990
  2044  0533                     u2991:
  2045  0533  2D5E               	goto	l664
  2046  0534                     u2990:
  2047  0534  2D36               	goto	l665
  2048                           	line	230
  2049                           	
  2050  0535                     l2390:	
  2051                           ;PR9B.c: 229: {
  2052                           ;PR9B.c: 230: while(RA2==0)continue;
  2053  0535  2D36               	goto	l665
  2054                           	
  2055  0536                     l666:	
  2056                           	
  2057  0536                     l665:	
  2058  0536  1D05               	btfss	(42/8),(42)&7
  2059  0537  2D39               	goto	u3001
  2060  0538  2D3A               	goto	u3000
  2061  0539                     u3001:
  2062  0539  2D36               	goto	l665
  2063  053A                     u3000:
  2064  053A  2D3B               	goto	l2392
  2065                           	
  2066  053B                     l667:	
  2067                           	line	231
  2068                           	
  2069  053B                     l2392:	
  2070                           ;PR9B.c: 231: if(password_count==0)lcd_clr();
  2071  053B  08FC               	movf	(_password_count),f
  2072  053C  1D03               	skipz
  2073  053D  2D3F               	goto	u3011
  2074  053E  2D40               	goto	u3010
  2075  053F                     u3011:
  2076  053F  2D45               	goto	l668
  2077  0540                     u3010:
  2078                           	
  2079  0540                     l2394:	
  2080  0540  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2081                           	
  2082  0545                     l668:	
  2083                           	line	232
  2084                           ;PR9B.c: 232: lcd_goto(password_count);
  2085  0545  087C               	movf	(_password_count),w
  2086  0546  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2087                           	line	233
  2088                           ;PR9B.c: 233: send_char('*');
  2089  054B  302A               	movlw	(02Ah)
  2090  054C  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2091                           	line	234
  2092                           	
  2093  0551                     l2396:	
  2094                           ;PR9B.c: 234: keyin_char[password_count]='6';
  2095  0551  3036               	movlw	(036h)
  2096  0552  00FB               	movwf	(??_scancolumn2+0)+0
  2097  0553  087C               	movf	(_password_count),w
  2098  0554  3E20               	addlw	_keyin_char&0ffh
  2099  0555  0084               	movwf	fsr0
  2100  0556  087B               	movf	(??_scancolumn2+0)+0,w
  2101  0557  1383               	bcf	status, 7	;select IRP bank0
  2102  0558  0080               	movwf	indf
  2103                           	line	235
  2104                           	
  2105  0559                     l2398:	
  2106                           ;PR9B.c: 235: password_count+=1;
  2107  0559  3001               	movlw	(01h)
  2108  055A  00FB               	movwf	(??_scancolumn2+0)+0
  2109  055B  087B               	movf	(??_scancolumn2+0)+0,w
  2110  055C  07FC               	addwf	(_password_count),f
  2111                           	line	236
  2112                           ;PR9B.c: 236: }
  2113  055D  2D8F               	goto	l675
  2114                           	line	237
  2115                           	
  2116  055E                     l664:	
  2117                           ;PR9B.c: 237: else if(RA3==0)
  2118  055E  1985               	btfsc	(43/8),(43)&7
  2119  055F  2D61               	goto	u3021
  2120  0560  2D62               	goto	u3020
  2121  0561                     u3021:
  2122  0561  2D8F               	goto	l675
  2123  0562                     u3020:
  2124  0562  2D64               	goto	l671
  2125                           	line	239
  2126                           	
  2127  0563                     l2400:	
  2128                           ;PR9B.c: 238: {
  2129                           ;PR9B.c: 239: while(RA3==0)continue;
  2130  0563  2D64               	goto	l671
  2131                           	
  2132  0564                     l672:	
  2133                           	
  2134  0564                     l671:	
  2135  0564  1D85               	btfss	(43/8),(43)&7
  2136  0565  2D67               	goto	u3031
  2137  0566  2D68               	goto	u3030
  2138  0567                     u3031:
  2139  0567  2D64               	goto	l671
  2140  0568                     u3030:
  2141  0568  2D69               	goto	l2402
  2142                           	
  2143  0569                     l673:	
  2144                           	line	240
  2145                           	
  2146  0569                     l2402:	
  2147                           ;PR9B.c: 240: if(password_count==0)lcd_clr();
  2148  0569  08FC               	movf	(_password_count),f
  2149  056A  1D03               	skipz
  2150  056B  2D6D               	goto	u3041
  2151  056C  2D6E               	goto	u3040
  2152  056D                     u3041:
  2153  056D  2D73               	goto	l674
  2154  056E                     u3040:
  2155                           	
  2156  056E                     l2404:	
  2157  056E  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2158                           	
  2159  0573                     l674:	
  2160                           	line	241
  2161                           ;PR9B.c: 241: lcd_goto(password_count);
  2162  0573  087C               	movf	(_password_count),w
  2163  0574  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2164                           	line	242
  2165                           ;PR9B.c: 242: send_char('*');
  2166  0579  302A               	movlw	(02Ah)
  2167  057A  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2168                           	line	243
  2169                           	
  2170  057F                     l2406:	
  2171                           ;PR9B.c: 243: keyin_char[password_count]='B';
  2172  057F  3042               	movlw	(042h)
  2173  0580  00FB               	movwf	(??_scancolumn2+0)+0
  2174  0581  087C               	movf	(_password_count),w
  2175  0582  3E20               	addlw	_keyin_char&0ffh
  2176  0583  0084               	movwf	fsr0
  2177  0584  087B               	movf	(??_scancolumn2+0)+0,w
  2178  0585  1383               	bcf	status, 7	;select IRP bank0
  2179  0586  0080               	movwf	indf
  2180                           	line	244
  2181                           	
  2182  0587                     l2408:	
  2183                           ;PR9B.c: 244: password_count+=1;
  2184  0587  3001               	movlw	(01h)
  2185  0588  00FB               	movwf	(??_scancolumn2+0)+0
  2186  0589  087B               	movf	(??_scancolumn2+0)+0,w
  2187  058A  07FC               	addwf	(_password_count),f
  2188  058B  2D8F               	goto	l675
  2189                           	line	245
  2190                           	
  2191  058C                     l670:	
  2192  058C  2D8F               	goto	l675
  2193                           	line	246
  2194                           	
  2195  058D                     l669:	
  2196  058D  2D8F               	goto	l675
  2197                           	
  2198  058E                     l663:	
  2199  058E  2D8F               	goto	l675
  2200                           	
  2201  058F                     l657:	
  2202                           	
  2203  058F                     l675:	
  2204  058F  0008               	return
  2205                           	opt stack 0
  2206                           GLOBAL	__end_of_scancolumn2
  2207  0590                     	__end_of_scancolumn2:
  2208 ;; =============== function _scancolumn2 ends ============
  2209                           
  2210                           	signat	_scancolumn2,88
  2211                           	global	_scancolumn1
  2212                           psect	text424,local,class=CODE,delta=2
  2213                           global __ptext424
  2214  0414                     __ptext424:
  2215                           
  2216 ;; *************** function _scancolumn1 *****************
  2217 ;; Defined at:
  2218 ;;		line 169 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;		None               void
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0
  2234 ;;      Temps:          1       0       0       0       0
  2235 ;;      Totals:         1       0       0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    4
  2239 ;; This function calls:
  2240 ;;		_lcd_clr
  2241 ;;		_lcd_goto
  2242 ;;		_send_char
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           psect	text424
  2248                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2249                           	line	169
  2250                           	global	__size_of_scancolumn1
  2251  00BE                     	__size_of_scancolumn1	equ	__end_of_scancolumn1-_scancolumn1
  2252                           	
  2253  0414                     _scancolumn1:	
  2254                           	opt	stack 3
  2255                           ; Regs used in _scancolumn1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           	line	170
  2257                           	
  2258  0414                     l2326:	
  2259                           ;PR9B.c: 170: if(RA0==0)
  2260  0414  1283               	bcf	status, 5	;RP0=0, select bank0
  2261  0415  1303               	bcf	status, 6	;RP1=0, select bank0
  2262  0416  1805               	btfsc	(40/8),(40)&7
  2263  0417  2C19               	goto	u2811
  2264  0418  2C1A               	goto	u2810
  2265  0419                     u2811:
  2266  0419  2C44               	goto	l626
  2267  041A                     u2810:
  2268  041A  2C1C               	goto	l627
  2269                           	line	172
  2270                           	
  2271  041B                     l2328:	
  2272                           ;PR9B.c: 171: {
  2273                           ;PR9B.c: 172: while(RA0==0)continue;
  2274  041B  2C1C               	goto	l627
  2275                           	
  2276  041C                     l628:	
  2277                           	
  2278  041C                     l627:	
  2279  041C  1C05               	btfss	(40/8),(40)&7
  2280  041D  2C1F               	goto	u2821
  2281  041E  2C20               	goto	u2820
  2282  041F                     u2821:
  2283  041F  2C1C               	goto	l627
  2284  0420                     u2820:
  2285  0420  2C21               	goto	l2330
  2286                           	
  2287  0421                     l629:	
  2288                           	line	173
  2289                           	
  2290  0421                     l2330:	
  2291                           ;PR9B.c: 173: if(password_count==0)lcd_clr();
  2292  0421  08FC               	movf	(_password_count),f
  2293  0422  1D03               	skipz
  2294  0423  2C25               	goto	u2831
  2295  0424  2C26               	goto	u2830
  2296  0425                     u2831:
  2297  0425  2C2B               	goto	l630
  2298  0426                     u2830:
  2299                           	
  2300  0426                     l2332:	
  2301  0426  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2302                           	
  2303  042B                     l630:	
  2304                           	line	174
  2305                           ;PR9B.c: 174: lcd_goto(password_count);
  2306  042B  087C               	movf	(_password_count),w
  2307  042C  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2308                           	line	175
  2309                           ;PR9B.c: 175: send_char('*');
  2310  0431  302A               	movlw	(02Ah)
  2311  0432  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2312                           	line	176
  2313                           	
  2314  0437                     l2334:	
  2315                           ;PR9B.c: 176: keyin_char[password_count]='1';
  2316  0437  3031               	movlw	(031h)
  2317  0438  00FB               	movwf	(??_scancolumn1+0)+0
  2318  0439  087C               	movf	(_password_count),w
  2319  043A  3E20               	addlw	_keyin_char&0ffh
  2320  043B  0084               	movwf	fsr0
  2321  043C  087B               	movf	(??_scancolumn1+0)+0,w
  2322  043D  1383               	bcf	status, 7	;select IRP bank0
  2323  043E  0080               	movwf	indf
  2324                           	line	177
  2325                           	
  2326  043F                     l2336:	
  2327                           ;PR9B.c: 177: password_count+=1;
  2328  043F  3001               	movlw	(01h)
  2329  0440  00FB               	movwf	(??_scancolumn1+0)+0
  2330  0441  087B               	movf	(??_scancolumn1+0)+0,w
  2331  0442  07FC               	addwf	(_password_count),f
  2332                           	line	178
  2333                           ;PR9B.c: 178: }
  2334  0443  2CD1               	goto	l649
  2335                           	line	179
  2336                           	
  2337  0444                     l626:	
  2338                           ;PR9B.c: 179: else if(RA1==0)
  2339  0444  1885               	btfsc	(41/8),(41)&7
  2340  0445  2C47               	goto	u2841
  2341  0446  2C48               	goto	u2840
  2342  0447                     u2841:
  2343  0447  2C72               	goto	l632
  2344  0448                     u2840:
  2345  0448  2C4A               	goto	l633
  2346                           	line	181
  2347                           	
  2348  0449                     l2338:	
  2349                           ;PR9B.c: 180: {
  2350                           ;PR9B.c: 181: while(RA1==0)continue;
  2351  0449  2C4A               	goto	l633
  2352                           	
  2353  044A                     l634:	
  2354                           	
  2355  044A                     l633:	
  2356  044A  1C85               	btfss	(41/8),(41)&7
  2357  044B  2C4D               	goto	u2851
  2358  044C  2C4E               	goto	u2850
  2359  044D                     u2851:
  2360  044D  2C4A               	goto	l633
  2361  044E                     u2850:
  2362  044E  2C4F               	goto	l2340
  2363                           	
  2364  044F                     l635:	
  2365                           	line	182
  2366                           	
  2367  044F                     l2340:	
  2368                           ;PR9B.c: 182: if(password_count==0)lcd_clr();
  2369  044F  08FC               	movf	(_password_count),f
  2370  0450  1D03               	skipz
  2371  0451  2C53               	goto	u2861
  2372  0452  2C54               	goto	u2860
  2373  0453                     u2861:
  2374  0453  2C59               	goto	l636
  2375  0454                     u2860:
  2376                           	
  2377  0454                     l2342:	
  2378  0454  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2379                           	
  2380  0459                     l636:	
  2381                           	line	183
  2382                           ;PR9B.c: 183: lcd_goto(password_count);
  2383  0459  087C               	movf	(_password_count),w
  2384  045A  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2385                           	line	184
  2386                           ;PR9B.c: 184: send_char('*');
  2387  045F  302A               	movlw	(02Ah)
  2388  0460  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2389                           	line	185
  2390                           	
  2391  0465                     l2344:	
  2392                           ;PR9B.c: 185: keyin_char[password_count]='2';
  2393  0465  3032               	movlw	(032h)
  2394  0466  00FB               	movwf	(??_scancolumn1+0)+0
  2395  0467  087C               	movf	(_password_count),w
  2396  0468  3E20               	addlw	_keyin_char&0ffh
  2397  0469  0084               	movwf	fsr0
  2398  046A  087B               	movf	(??_scancolumn1+0)+0,w
  2399  046B  1383               	bcf	status, 7	;select IRP bank0
  2400  046C  0080               	movwf	indf
  2401                           	line	186
  2402                           	
  2403  046D                     l2346:	
  2404                           ;PR9B.c: 186: password_count+=1;
  2405  046D  3001               	movlw	(01h)
  2406  046E  00FB               	movwf	(??_scancolumn1+0)+0
  2407  046F  087B               	movf	(??_scancolumn1+0)+0,w
  2408  0470  07FC               	addwf	(_password_count),f
  2409                           	line	187
  2410                           ;PR9B.c: 187: }
  2411  0471  2CD1               	goto	l649
  2412                           	line	188
  2413                           	
  2414  0472                     l632:	
  2415                           ;PR9B.c: 188: else if(RA2==0)
  2416  0472  1905               	btfsc	(42/8),(42)&7
  2417  0473  2C75               	goto	u2871
  2418  0474  2C76               	goto	u2870
  2419  0475                     u2871:
  2420  0475  2CA0               	goto	l638
  2421  0476                     u2870:
  2422  0476  2C78               	goto	l639
  2423                           	line	190
  2424                           	
  2425  0477                     l2348:	
  2426                           ;PR9B.c: 189: {
  2427                           ;PR9B.c: 190: while(RA2==0)continue;
  2428  0477  2C78               	goto	l639
  2429                           	
  2430  0478                     l640:	
  2431                           	
  2432  0478                     l639:	
  2433  0478  1D05               	btfss	(42/8),(42)&7
  2434  0479  2C7B               	goto	u2881
  2435  047A  2C7C               	goto	u2880
  2436  047B                     u2881:
  2437  047B  2C78               	goto	l639
  2438  047C                     u2880:
  2439  047C  2C7D               	goto	l2350
  2440                           	
  2441  047D                     l641:	
  2442                           	line	191
  2443                           	
  2444  047D                     l2350:	
  2445                           ;PR9B.c: 191: if(password_count==0)lcd_clr();
  2446  047D  08FC               	movf	(_password_count),f
  2447  047E  1D03               	skipz
  2448  047F  2C81               	goto	u2891
  2449  0480  2C82               	goto	u2890
  2450  0481                     u2891:
  2451  0481  2C87               	goto	l642
  2452  0482                     u2890:
  2453                           	
  2454  0482                     l2352:	
  2455  0482  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2456                           	
  2457  0487                     l642:	
  2458                           	line	192
  2459                           ;PR9B.c: 192: lcd_goto(password_count);
  2460  0487  087C               	movf	(_password_count),w
  2461  0488  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2462                           	line	193
  2463                           ;PR9B.c: 193: send_char('*');
  2464  048D  302A               	movlw	(02Ah)
  2465  048E  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2466                           	line	194
  2467                           	
  2468  0493                     l2354:	
  2469                           ;PR9B.c: 194: keyin_char[password_count]='3';
  2470  0493  3033               	movlw	(033h)
  2471  0494  00FB               	movwf	(??_scancolumn1+0)+0
  2472  0495  087C               	movf	(_password_count),w
  2473  0496  3E20               	addlw	_keyin_char&0ffh
  2474  0497  0084               	movwf	fsr0
  2475  0498  087B               	movf	(??_scancolumn1+0)+0,w
  2476  0499  1383               	bcf	status, 7	;select IRP bank0
  2477  049A  0080               	movwf	indf
  2478                           	line	195
  2479                           	
  2480  049B                     l2356:	
  2481                           ;PR9B.c: 195: password_count+=1;
  2482  049B  3001               	movlw	(01h)
  2483  049C  00FB               	movwf	(??_scancolumn1+0)+0
  2484  049D  087B               	movf	(??_scancolumn1+0)+0,w
  2485  049E  07FC               	addwf	(_password_count),f
  2486                           	line	196
  2487                           ;PR9B.c: 196: }
  2488  049F  2CD1               	goto	l649
  2489                           	line	197
  2490                           	
  2491  04A0                     l638:	
  2492                           ;PR9B.c: 197: else if(RA3==0)
  2493  04A0  1985               	btfsc	(43/8),(43)&7
  2494  04A1  2CA3               	goto	u2901
  2495  04A2  2CA4               	goto	u2900
  2496  04A3                     u2901:
  2497  04A3  2CD1               	goto	l649
  2498  04A4                     u2900:
  2499  04A4  2CA6               	goto	l645
  2500                           	line	199
  2501                           	
  2502  04A5                     l2358:	
  2503                           ;PR9B.c: 198: {
  2504                           ;PR9B.c: 199: while(RA3==0)continue;
  2505  04A5  2CA6               	goto	l645
  2506                           	
  2507  04A6                     l646:	
  2508                           	
  2509  04A6                     l645:	
  2510  04A6  1D85               	btfss	(43/8),(43)&7
  2511  04A7  2CA9               	goto	u2911
  2512  04A8  2CAA               	goto	u2910
  2513  04A9                     u2911:
  2514  04A9  2CA6               	goto	l645
  2515  04AA                     u2910:
  2516  04AA  2CAB               	goto	l2360
  2517                           	
  2518  04AB                     l647:	
  2519                           	line	200
  2520                           	
  2521  04AB                     l2360:	
  2522                           ;PR9B.c: 200: if(password_count==0)lcd_clr();
  2523  04AB  08FC               	movf	(_password_count),f
  2524  04AC  1D03               	skipz
  2525  04AD  2CAF               	goto	u2921
  2526  04AE  2CB0               	goto	u2920
  2527  04AF                     u2921:
  2528  04AF  2CB5               	goto	l648
  2529  04B0                     u2920:
  2530                           	
  2531  04B0                     l2362:	
  2532  04B0  120A  118A  22D2   	fcall	_lcd_clr
              120A  118A         
  2533                           	
  2534  04B5                     l648:	
  2535                           	line	201
  2536                           ;PR9B.c: 201: lcd_goto(password_count);
  2537  04B5  087C               	movf	(_password_count),w
  2538  04B6  120A  118A  2318   	fcall	_lcd_goto
              120A  118A         
  2539                           	line	202
  2540                           ;PR9B.c: 202: send_char('*');
  2541  04BB  302A               	movlw	(02Ah)
  2542  04BC  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2543                           	line	203
  2544                           	
  2545  04C1                     l2364:	
  2546                           ;PR9B.c: 203: keyin_char[password_count]='A';
  2547  04C1  3041               	movlw	(041h)
  2548  04C2  00FB               	movwf	(??_scancolumn1+0)+0
  2549  04C3  087C               	movf	(_password_count),w
  2550  04C4  3E20               	addlw	_keyin_char&0ffh
  2551  04C5  0084               	movwf	fsr0
  2552  04C6  087B               	movf	(??_scancolumn1+0)+0,w
  2553  04C7  1383               	bcf	status, 7	;select IRP bank0
  2554  04C8  0080               	movwf	indf
  2555                           	line	204
  2556                           	
  2557  04C9                     l2366:	
  2558                           ;PR9B.c: 204: password_count+=1;
  2559  04C9  3001               	movlw	(01h)
  2560  04CA  00FB               	movwf	(??_scancolumn1+0)+0
  2561  04CB  087B               	movf	(??_scancolumn1+0)+0,w
  2562  04CC  07FC               	addwf	(_password_count),f
  2563  04CD  2CD1               	goto	l649
  2564                           	line	205
  2565                           	
  2566  04CE                     l644:	
  2567  04CE  2CD1               	goto	l649
  2568                           	line	206
  2569                           	
  2570  04CF                     l643:	
  2571  04CF  2CD1               	goto	l649
  2572                           	
  2573  04D0                     l637:	
  2574  04D0  2CD1               	goto	l649
  2575                           	
  2576  04D1                     l631:	
  2577                           	
  2578  04D1                     l649:	
  2579  04D1  0008               	return
  2580                           	opt stack 0
  2581                           GLOBAL	__end_of_scancolumn1
  2582  04D2                     	__end_of_scancolumn1:
  2583 ;; =============== function _scancolumn1 ends ============
  2584                           
  2585                           	signat	_scancolumn1,88
  2586                           	global	_send_string
  2587                           psect	text425,local,class=CODE,delta=2
  2588                           global __ptext425
  2589  0356                     __ptext425:
  2590                           
  2591 ;; *************** function _send_string *****************
  2592 ;; Defined at:
  2593 ;;		line 401 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  s               1    wreg     PTR const unsigned char 
  2596 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  s               1   11[COMMON] PTR const unsigned char 
  2599 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
  2600 ;;  i               1   10[COMMON] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0
  2612 ;;      Temps:          1       0       0       0       0
  2613 ;;      Totals:         3       0       0       0       0
  2614 ;;Total ram usage:        3 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		_send_char
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           psect	text425
  2624                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2625                           	line	401
  2626                           	global	__size_of_send_string
  2627  002B                     	__size_of_send_string	equ	__end_of_send_string-_send_string
  2628                           	
  2629  0356                     _send_string:	
  2630                           	opt	stack 4
  2631                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2632                           ;send_string@s stored from wreg
  2633  0356  00FB               	movwf	(send_string@s)
  2634                           	line	402
  2635                           	
  2636  0357                     l2316:	
  2637                           ;PR9B.c: 402: unsigned char i=0;
  2638  0357  1003               	clrc
  2639  0358  3000               	movlw	0
  2640  0359  1803               	btfsc	status,0
  2641  035A  3001               	movlw	1
  2642  035B  00FA               	movwf	(send_string@i)
  2643                           	line	403
  2644                           ;PR9B.c: 403: while (s && *s)send_char (*s++);
  2645  035C  2B6E               	goto	l2322
  2646                           	
  2647  035D                     l759:	
  2648                           	
  2649  035D                     l2318:	
  2650  035D  087B               	movf	(send_string@s),w
  2651  035E  0084               	movwf	fsr0
  2652  035F  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2653  0364  120A  118A  22FF   	fcall	_send_char
              120A  118A         
  2654                           	
  2655  0369                     l2320:	
  2656  0369  3001               	movlw	(01h)
  2657  036A  00F9               	movwf	(??_send_string+0)+0
  2658  036B  0879               	movf	(??_send_string+0)+0,w
  2659  036C  07FB               	addwf	(send_string@s),f
  2660  036D  2B6E               	goto	l2322
  2661                           	
  2662  036E                     l758:	
  2663                           	
  2664  036E                     l2322:	
  2665  036E  087B               	movf	(send_string@s),w
  2666  036F  1D03               	skipz
  2667  0370  2B72               	goto	u2790
  2668  0371  2B80               	goto	l763
  2669  0372                     u2790:
  2670                           	
  2671  0372                     l2324:	
  2672  0372  087B               	movf	(send_string@s),w
  2673  0373  0084               	movwf	fsr0
  2674  0374  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2675  0379  3800               	iorlw	0
  2676  037A  1D03               	skipz
  2677  037B  2B7D               	goto	u2801
  2678  037C  2B7E               	goto	u2800
  2679  037D                     u2801:
  2680  037D  2B5D               	goto	l2318
  2681  037E                     u2800:
  2682  037E  2B80               	goto	l763
  2683                           	
  2684  037F                     l761:	
  2685  037F  2B80               	goto	l763
  2686                           	
  2687  0380                     l762:	
  2688                           	line	405
  2689                           	
  2690  0380                     l763:	
  2691  0380  0008               	return
  2692                           	opt stack 0
  2693                           GLOBAL	__end_of_send_string
  2694  0381                     	__end_of_send_string:
  2695 ;; =============== function _send_string ends ============
  2696                           
  2697                           	signat	_send_string,4216
  2698                           	global	_lcd_goto
  2699                           psect	text426,local,class=CODE,delta=2
  2700                           global __ptext426
  2701  0318                     __ptext426:
  2702                           
  2703 ;; *************** function _lcd_goto *****************
  2704 ;; Defined at:
  2705 ;;		line 382 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  data            1    wreg     unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  data            1   10[COMMON] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;		None               void
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       0       0       0       0
  2720 ;;      Locals:         1       0       0       0       0
  2721 ;;      Temps:          1       0       0       0       0
  2722 ;;      Totals:         2       0       0       0       0
  2723 ;;Total ram usage:        2 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    3
  2726 ;; This function calls:
  2727 ;;		_send_config
  2728 ;; This function is called by:
  2729 ;;		_main
  2730 ;;		_scancolumn1
  2731 ;;		_scancolumn2
  2732 ;;		_scancolumn3
  2733 ;;		_scancolumn4
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           psect	text426
  2737                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2738                           	line	382
  2739                           	global	__size_of_lcd_goto
  2740  001D                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2741                           	
  2742  0318                     _lcd_goto:	
  2743                           	opt	stack 3
  2744                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2745                           ;lcd_goto@data stored from wreg
  2746  0318  00FA               	movwf	(lcd_goto@data)
  2747                           	line	383
  2748                           	
  2749  0319                     l2308:	
  2750                           ;PR9B.c: 383: if(data<16)
  2751  0319  3010               	movlw	(010h)
  2752  031A  027A               	subwf	(lcd_goto@data),w
  2753  031B  1803               	skipnc
  2754  031C  2B1E               	goto	u2781
  2755  031D  2B1F               	goto	u2780
  2756  031E                     u2781:
  2757  031E  2B27               	goto	l2312
  2758  031F                     u2780:
  2759                           	line	385
  2760                           	
  2761  031F                     l2310:	
  2762                           ;PR9B.c: 384: {
  2763                           ;PR9B.c: 385: send_config(0x80+data);
  2764  031F  087A               	movf	(lcd_goto@data),w
  2765  0320  3E80               	addlw	080h
  2766  0321  120A  118A  22E6   	fcall	_send_config
              120A  118A         
  2767                           	line	386
  2768                           ;PR9B.c: 386: }
  2769  0326  2B34               	goto	l752
  2770                           	line	387
  2771                           	
  2772  0327                     l750:	
  2773                           	line	389
  2774                           	
  2775  0327                     l2312:	
  2776                           ;PR9B.c: 387: else
  2777                           ;PR9B.c: 388: {
  2778                           ;PR9B.c: 389: data=data-20;
  2779  0327  087A               	movf	(lcd_goto@data),w
  2780  0328  3EEC               	addlw	0ECh
  2781  0329  00F9               	movwf	(??_lcd_goto+0)+0
  2782  032A  0879               	movf	(??_lcd_goto+0)+0,w
  2783  032B  00FA               	movwf	(lcd_goto@data)
  2784                           	line	390
  2785                           	
  2786  032C                     l2314:	
  2787                           ;PR9B.c: 390: send_config(0xc0+data);
  2788  032C  087A               	movf	(lcd_goto@data),w
  2789  032D  3EC0               	addlw	0C0h
  2790  032E  120A  118A  22E6   	fcall	_send_config
              120A  118A         
  2791  0333  2B34               	goto	l752
  2792                           	line	391
  2793                           	
  2794  0334                     l751:	
  2795                           	line	392
  2796                           	
  2797  0334                     l752:	
  2798  0334  0008               	return
  2799                           	opt stack 0
  2800                           GLOBAL	__end_of_lcd_goto
  2801  0335                     	__end_of_lcd_goto:
  2802 ;; =============== function _lcd_goto ends ============
  2803                           
  2804                           	signat	_lcd_goto,4216
  2805                           	global	_lcd_clr
  2806                           psect	text427,local,class=CODE,delta=2
  2807                           global __ptext427
  2808  02D2                     __ptext427:
  2809                           
  2810 ;; *************** function _lcd_clr *****************
  2811 ;; Defined at:
  2812 ;;		line 395 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, pclath, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    3
  2833 ;; This function calls:
  2834 ;;		_send_config
  2835 ;;		_delay
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;;		_scancolumn1
  2839 ;;		_scancolumn2
  2840 ;;		_scancolumn3
  2841 ;;		_scancolumn4
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           psect	text427
  2845                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2846                           	line	395
  2847                           	global	__size_of_lcd_clr
  2848  0014                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  2849                           	
  2850  02D2                     _lcd_clr:	
  2851                           	opt	stack 3
  2852                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  2853                           	line	396
  2854                           	
  2855  02D2                     l2306:	
  2856                           ;PR9B.c: 396: send_config(0x01);
  2857  02D2  3001               	movlw	(01h)
  2858  02D3  120A  118A  22E6   	fcall	_send_config
              120A  118A         
  2859                           	line	397
  2860                           ;PR9B.c: 397: delay(50);
  2861  02D8  3000               	movlw	0
  2862  02D9  00F3               	movwf	(?_delay+3)
  2863  02DA  3000               	movlw	0
  2864  02DB  00F2               	movwf	(?_delay+2)
  2865  02DC  3000               	movlw	0
  2866  02DD  00F1               	movwf	(?_delay+1)
  2867  02DE  3032               	movlw	032h
  2868  02DF  00F0               	movwf	(?_delay)
  2869                           
  2870  02E0  120A  118A  23B0   	fcall	_delay
              120A  118A         
  2871                           	line	398
  2872                           	
  2873  02E5                     l755:	
  2874  02E5  0008               	return
  2875                           	opt stack 0
  2876                           GLOBAL	__end_of_lcd_clr
  2877  02E6                     	__end_of_lcd_clr:
  2878 ;; =============== function _lcd_clr ends ============
  2879                           
  2880                           	signat	_lcd_clr,88
  2881                           	global	_send_char
  2882                           psect	text428,local,class=CODE,delta=2
  2883                           global __ptext428
  2884  02FF                     __ptext428:
  2885                           
  2886 ;; *************** function _send_char *****************
  2887 ;; Defined at:
  2888 ;;		line 366 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  data            1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  data            1    8[COMMON] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;		None               void
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         1       0       0       0       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    2
  2909 ;; This function calls:
  2910 ;;		_delay
  2911 ;;		_e_pulse
  2912 ;; This function is called by:
  2913 ;;		_scancolumn1
  2914 ;;		_scancolumn2
  2915 ;;		_scancolumn3
  2916 ;;		_scancolumn4
  2917 ;;		_send_string
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           psect	text428
  2921                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2922                           	line	366
  2923                           	global	__size_of_send_char
  2924  0019                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  2925                           	
  2926  02FF                     _send_char:	
  2927                           	opt	stack 4
  2928                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  2929                           ;send_char@data stored from wreg
  2930  02FF  00F8               	movwf	(send_char@data)
  2931                           	line	367
  2932                           	
  2933  0300                     l2298:	
  2934                           ;PR9B.c: 367: RC0=1;
  2935  0300  1283               	bcf	status, 5	;RP0=0, select bank0
  2936  0301  1303               	bcf	status, 6	;RP1=0, select bank0
  2937  0302  1407               	bsf	(56/8),(56)&7
  2938                           	line	368
  2939                           	
  2940  0303                     l2300:	
  2941                           ;PR9B.c: 368: PORTD=data;
  2942  0303  0878               	movf	(send_char@data),w
  2943  0304  0088               	movwf	(8)	;volatile
  2944                           	line	369
  2945                           	
  2946  0305                     l2302:	
  2947                           ;PR9B.c: 369: delay(50);
  2948  0305  3000               	movlw	0
  2949  0306  00F3               	movwf	(?_delay+3)
  2950  0307  3000               	movlw	0
  2951  0308  00F2               	movwf	(?_delay+2)
  2952  0309  3000               	movlw	0
  2953  030A  00F1               	movwf	(?_delay+1)
  2954  030B  3032               	movlw	032h
  2955  030C  00F0               	movwf	(?_delay)
  2956                           
  2957  030D  120A  118A  23B0   	fcall	_delay
              120A  118A         
  2958                           	line	370
  2959                           	
  2960  0312                     l2304:	
  2961                           ;PR9B.c: 370: e_pulse();
  2962  0312  120A  118A  2335   	fcall	_e_pulse
              120A  118A         
  2963                           	line	371
  2964                           	
  2965  0317                     l744:	
  2966  0317  0008               	return
  2967                           	opt stack 0
  2968                           GLOBAL	__end_of_send_char
  2969  0318                     	__end_of_send_char:
  2970 ;; =============== function _send_char ends ============
  2971                           
  2972                           	signat	_send_char,4216
  2973                           	global	_send_config
  2974                           psect	text429,local,class=CODE,delta=2
  2975                           global __ptext429
  2976  02E6                     __ptext429:
  2977                           
  2978 ;; *************** function _send_config *****************
  2979 ;; Defined at:
  2980 ;;		line 358 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  data            1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  data            1    8[COMMON] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         1       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0
  2997 ;;      Totals:         1       0       0       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    2
  3001 ;; This function calls:
  3002 ;;		_delay
  3003 ;;		_e_pulse
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;;		_lcd_goto
  3007 ;;		_lcd_clr
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           psect	text429
  3011                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3012                           	line	358
  3013                           	global	__size_of_send_config
  3014  0019                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  3015                           	
  3016  02E6                     _send_config:	
  3017                           	opt	stack 3
  3018                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  3019                           ;send_config@data stored from wreg
  3020  02E6  00F8               	movwf	(send_config@data)
  3021                           	line	359
  3022                           	
  3023  02E7                     l2290:	
  3024                           ;PR9B.c: 359: RC0=0;
  3025  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3026  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3027  02E9  1007               	bcf	(56/8),(56)&7
  3028                           	line	360
  3029                           	
  3030  02EA                     l2292:	
  3031                           ;PR9B.c: 360: PORTD=data;
  3032  02EA  0878               	movf	(send_config@data),w
  3033  02EB  0088               	movwf	(8)	;volatile
  3034                           	line	361
  3035                           	
  3036  02EC                     l2294:	
  3037                           ;PR9B.c: 361: delay(50);
  3038  02EC  3000               	movlw	0
  3039  02ED  00F3               	movwf	(?_delay+3)
  3040  02EE  3000               	movlw	0
  3041  02EF  00F2               	movwf	(?_delay+2)
  3042  02F0  3000               	movlw	0
  3043  02F1  00F1               	movwf	(?_delay+1)
  3044  02F2  3032               	movlw	032h
  3045  02F3  00F0               	movwf	(?_delay)
  3046                           
  3047  02F4  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3048                           	line	362
  3049                           	
  3050  02F9                     l2296:	
  3051                           ;PR9B.c: 362: e_pulse();
  3052  02F9  120A  118A  2335   	fcall	_e_pulse
              120A  118A         
  3053                           	line	363
  3054                           	
  3055  02FE                     l741:	
  3056  02FE  0008               	return
  3057                           	opt stack 0
  3058                           GLOBAL	__end_of_send_config
  3059  02FF                     	__end_of_send_config:
  3060 ;; =============== function _send_config ends ============
  3061                           
  3062                           	signat	_send_config,4216
  3063                           	global	_e_pulse
  3064                           psect	text430,local,class=CODE,delta=2
  3065                           global __ptext430
  3066  0335                     __ptext430:
  3067                           
  3068 ;; *************** function _e_pulse *****************
  3069 ;; Defined at:
  3070 ;;		line 374 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		_delay
  3093 ;; This function is called by:
  3094 ;;		_send_config
  3095 ;;		_send_char
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           psect	text430
  3099                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3100                           	line	374
  3101                           	global	__size_of_e_pulse
  3102  0021                     	__size_of_e_pulse	equ	__end_of_e_pulse-_e_pulse
  3103                           	
  3104  0335                     _e_pulse:	
  3105                           	opt	stack 4
  3106                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  3107                           	line	375
  3108                           	
  3109  0335                     l2284:	
  3110                           ;PR9B.c: 375: RC1=1;
  3111  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  3112  0336  1303               	bcf	status, 6	;RP1=0, select bank0
  3113  0337  1487               	bsf	(57/8),(57)&7
  3114                           	line	376
  3115                           	
  3116  0338                     l2286:	
  3117                           ;PR9B.c: 376: delay(50);
  3118  0338  3000               	movlw	0
  3119  0339  00F3               	movwf	(?_delay+3)
  3120  033A  3000               	movlw	0
  3121  033B  00F2               	movwf	(?_delay+2)
  3122  033C  3000               	movlw	0
  3123  033D  00F1               	movwf	(?_delay+1)
  3124  033E  3032               	movlw	032h
  3125  033F  00F0               	movwf	(?_delay)
  3126                           
  3127  0340  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3128                           	line	377
  3129                           	
  3130  0345                     l2288:	
  3131                           ;PR9B.c: 377: RC1=0;
  3132  0345  1283               	bcf	status, 5	;RP0=0, select bank0
  3133  0346  1303               	bcf	status, 6	;RP1=0, select bank0
  3134  0347  1087               	bcf	(57/8),(57)&7
  3135                           	line	378
  3136                           ;PR9B.c: 378: delay(50);
  3137  0348  3000               	movlw	0
  3138  0349  00F3               	movwf	(?_delay+3)
  3139  034A  3000               	movlw	0
  3140  034B  00F2               	movwf	(?_delay+2)
  3141  034C  3000               	movlw	0
  3142  034D  00F1               	movwf	(?_delay+1)
  3143  034E  3032               	movlw	032h
  3144  034F  00F0               	movwf	(?_delay)
  3145                           
  3146  0350  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3147                           	line	379
  3148                           	
  3149  0355                     l747:	
  3150  0355  0008               	return
  3151                           	opt stack 0
  3152                           GLOBAL	__end_of_e_pulse
  3153  0356                     	__end_of_e_pulse:
  3154 ;; =============== function _e_pulse ends ============
  3155                           
  3156                           	signat	_e_pulse,88
  3157                           	global	_beep_twice
  3158                           psect	text431,local,class=CODE,delta=2
  3159                           global __ptext431
  3160  03E0                     __ptext431:
  3161                           
  3162 ;; *************** function _beep_twice *****************
  3163 ;; Defined at:
  3164 ;;		line 344 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;		None               void
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    1
  3185 ;; This function calls:
  3186 ;;		_delay
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           psect	text431
  3192                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3193                           	line	344
  3194                           	global	__size_of_beep_twice
  3195  0034                     	__size_of_beep_twice	equ	__end_of_beep_twice-_beep_twice
  3196                           	
  3197  03E0                     _beep_twice:	
  3198                           	opt	stack 6
  3199                           ; Regs used in _beep_twice: [wreg+status,2+status,0+pclath+cstack]
  3200                           	line	345
  3201                           	
  3202  03E0                     l2274:	
  3203                           ;PR9B.c: 345: RB2=1;
  3204  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  3205  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  3206  03E2  1506               	bsf	(50/8),(50)&7
  3207                           	line	346
  3208                           	
  3209  03E3                     l2276:	
  3210                           ;PR9B.c: 346: delay(8000);
  3211  03E3  3000               	movlw	0
  3212  03E4  00F3               	movwf	(?_delay+3)
  3213  03E5  3000               	movlw	0
  3214  03E6  00F2               	movwf	(?_delay+2)
  3215  03E7  301F               	movlw	01Fh
  3216  03E8  00F1               	movwf	(?_delay+1)
  3217  03E9  3040               	movlw	040h
  3218  03EA  00F0               	movwf	(?_delay)
  3219                           
  3220  03EB  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3221                           	line	347
  3222                           	
  3223  03F0                     l2278:	
  3224                           ;PR9B.c: 347: RB2=0;
  3225  03F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3226  03F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3227  03F2  1106               	bcf	(50/8),(50)&7
  3228                           	line	348
  3229                           ;PR9B.c: 348: delay(13000);
  3230  03F3  3000               	movlw	0
  3231  03F4  00F3               	movwf	(?_delay+3)
  3232  03F5  3000               	movlw	0
  3233  03F6  00F2               	movwf	(?_delay+2)
  3234  03F7  3032               	movlw	032h
  3235  03F8  00F1               	movwf	(?_delay+1)
  3236  03F9  30C8               	movlw	0C8h
  3237  03FA  00F0               	movwf	(?_delay)
  3238                           
  3239  03FB  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3240                           	line	349
  3241                           	
  3242  0400                     l2280:	
  3243                           ;PR9B.c: 349: RB2=1;
  3244  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  3245  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  3246  0402  1506               	bsf	(50/8),(50)&7
  3247                           	line	350
  3248                           ;PR9B.c: 350: delay(8000);
  3249  0403  3000               	movlw	0
  3250  0404  00F3               	movwf	(?_delay+3)
  3251  0405  3000               	movlw	0
  3252  0406  00F2               	movwf	(?_delay+2)
  3253  0407  301F               	movlw	01Fh
  3254  0408  00F1               	movwf	(?_delay+1)
  3255  0409  3040               	movlw	040h
  3256  040A  00F0               	movwf	(?_delay)
  3257                           
  3258  040B  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3259                           	line	351
  3260                           	
  3261  0410                     l2282:	
  3262                           ;PR9B.c: 351: RB2=0;
  3263  0410  1283               	bcf	status, 5	;RP0=0, select bank0
  3264  0411  1303               	bcf	status, 6	;RP1=0, select bank0
  3265  0412  1106               	bcf	(50/8),(50)&7
  3266                           	line	352
  3267                           	
  3268  0413                     l738:	
  3269  0413  0008               	return
  3270                           	opt stack 0
  3271                           GLOBAL	__end_of_beep_twice
  3272  0414                     	__end_of_beep_twice:
  3273 ;; =============== function _beep_twice ends ============
  3274                           
  3275                           	signat	_beep_twice,88
  3276                           	global	_beep_once
  3277                           psect	text432,local,class=CODE,delta=2
  3278                           global __ptext432
  3279  02BE                     __ptext432:
  3280                           
  3281 ;; *************** function _beep_once *****************
  3282 ;; Defined at:
  3283 ;;		line 337 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		_delay
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           psect	text432
  3311                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3312                           	line	337
  3313                           	global	__size_of_beep_once
  3314  0014                     	__size_of_beep_once	equ	__end_of_beep_once-_beep_once
  3315                           	
  3316  02BE                     _beep_once:	
  3317                           	opt	stack 6
  3318                           ; Regs used in _beep_once: [wreg+status,2+status,0+pclath+cstack]
  3319                           	line	338
  3320                           	
  3321  02BE                     l2268:	
  3322                           ;PR9B.c: 338: RB2=1;
  3323  02BE  1283               	bcf	status, 5	;RP0=0, select bank0
  3324  02BF  1303               	bcf	status, 6	;RP1=0, select bank0
  3325  02C0  1506               	bsf	(50/8),(50)&7
  3326                           	line	339
  3327                           	
  3328  02C1                     l2270:	
  3329                           ;PR9B.c: 339: delay(8000);
  3330  02C1  3000               	movlw	0
  3331  02C2  00F3               	movwf	(?_delay+3)
  3332  02C3  3000               	movlw	0
  3333  02C4  00F2               	movwf	(?_delay+2)
  3334  02C5  301F               	movlw	01Fh
  3335  02C6  00F1               	movwf	(?_delay+1)
  3336  02C7  3040               	movlw	040h
  3337  02C8  00F0               	movwf	(?_delay)
  3338                           
  3339  02C9  120A  118A  23B0   	fcall	_delay
              120A  118A         
  3340                           	line	340
  3341                           	
  3342  02CE                     l2272:	
  3343                           ;PR9B.c: 340: RB2=0;
  3344  02CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3345  02CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3346  02D0  1106               	bcf	(50/8),(50)&7
  3347                           	line	341
  3348                           	
  3349  02D1                     l735:	
  3350  02D1  0008               	return
  3351                           	opt stack 0
  3352                           GLOBAL	__end_of_beep_once
  3353  02D2                     	__end_of_beep_once:
  3354 ;; =============== function _beep_once ends ============
  3355                           
  3356                           	signat	_beep_once,88
  3357                           	global	_clearrow4
  3358                           psect	text433,local,class=CODE,delta=2
  3359                           global __ptext433
  3360  02B7                     __ptext433:
  3361                           
  3362 ;; *************** function _clearrow4 *****************
  3363 ;; Defined at:
  3364 ;;		line 161 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		None
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           psect	text433
  3391                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3392                           	line	161
  3393                           	global	__size_of_clearrow4
  3394  0007                     	__size_of_clearrow4	equ	__end_of_clearrow4-_clearrow4
  3395                           	
  3396  02B7                     _clearrow4:	
  3397                           	opt	stack 7
  3398                           ; Regs used in _clearrow4: []
  3399                           	line	162
  3400                           	
  3401  02B7                     l2266:	
  3402                           ;PR9B.c: 162: RE1=1;
  3403  02B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3404  02B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3405  02B9  1489               	bsf	(73/8),(73)&7
  3406                           	line	163
  3407                           ;PR9B.c: 163: RE0=1;
  3408  02BA  1409               	bsf	(72/8),(72)&7
  3409                           	line	164
  3410                           ;PR9B.c: 164: RA5=1;
  3411  02BB  1685               	bsf	(45/8),(45)&7
  3412                           	line	165
  3413                           ;PR9B.c: 165: RA4=0;
  3414  02BC  1205               	bcf	(44/8),(44)&7
  3415                           	line	166
  3416                           	
  3417  02BD                     l623:	
  3418  02BD  0008               	return
  3419                           	opt stack 0
  3420                           GLOBAL	__end_of_clearrow4
  3421  02BE                     	__end_of_clearrow4:
  3422 ;; =============== function _clearrow4 ends ============
  3423                           
  3424                           	signat	_clearrow4,88
  3425                           	global	_clearrow3
  3426                           psect	text434,local,class=CODE,delta=2
  3427                           global __ptext434
  3428  02B0                     __ptext434:
  3429                           
  3430 ;; *************** function _clearrow3 *****************
  3431 ;; Defined at:
  3432 ;;		line 153 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		None
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           psect	text434
  3459                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3460                           	line	153
  3461                           	global	__size_of_clearrow3
  3462  0007                     	__size_of_clearrow3	equ	__end_of_clearrow3-_clearrow3
  3463                           	
  3464  02B0                     _clearrow3:	
  3465                           	opt	stack 7
  3466                           ; Regs used in _clearrow3: []
  3467                           	line	154
  3468                           	
  3469  02B0                     l2264:	
  3470                           ;PR9B.c: 154: RE1=1;
  3471  02B0  1283               	bcf	status, 5	;RP0=0, select bank0
  3472  02B1  1303               	bcf	status, 6	;RP1=0, select bank0
  3473  02B2  1489               	bsf	(73/8),(73)&7
  3474                           	line	155
  3475                           ;PR9B.c: 155: RE0=1;
  3476  02B3  1409               	bsf	(72/8),(72)&7
  3477                           	line	156
  3478                           ;PR9B.c: 156: RA5=0;
  3479  02B4  1285               	bcf	(45/8),(45)&7
  3480                           	line	157
  3481                           ;PR9B.c: 157: RA4=1;
  3482  02B5  1605               	bsf	(44/8),(44)&7
  3483                           	line	158
  3484                           	
  3485  02B6                     l620:	
  3486  02B6  0008               	return
  3487                           	opt stack 0
  3488                           GLOBAL	__end_of_clearrow3
  3489  02B7                     	__end_of_clearrow3:
  3490 ;; =============== function _clearrow3 ends ============
  3491                           
  3492                           	signat	_clearrow3,88
  3493                           	global	_clearrow2
  3494                           psect	text435,local,class=CODE,delta=2
  3495                           global __ptext435
  3496  02A9                     __ptext435:
  3497                           
  3498 ;; *************** function _clearrow2 *****************
  3499 ;; Defined at:
  3500 ;;		line 145 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;		None               void
  3507 ;; Registers used:
  3508 ;;		None
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           psect	text435
  3527                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3528                           	line	145
  3529                           	global	__size_of_clearrow2
  3530  0007                     	__size_of_clearrow2	equ	__end_of_clearrow2-_clearrow2
  3531                           	
  3532  02A9                     _clearrow2:	
  3533                           	opt	stack 7
  3534                           ; Regs used in _clearrow2: []
  3535                           	line	146
  3536                           	
  3537  02A9                     l2262:	
  3538                           ;PR9B.c: 146: RE1=1;
  3539  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
  3540  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
  3541  02AB  1489               	bsf	(73/8),(73)&7
  3542                           	line	147
  3543                           ;PR9B.c: 147: RE0=0;
  3544  02AC  1009               	bcf	(72/8),(72)&7
  3545                           	line	148
  3546                           ;PR9B.c: 148: RA5=1;
  3547  02AD  1685               	bsf	(45/8),(45)&7
  3548                           	line	149
  3549                           ;PR9B.c: 149: RA4=1;
  3550  02AE  1605               	bsf	(44/8),(44)&7
  3551                           	line	150
  3552                           	
  3553  02AF                     l617:	
  3554  02AF  0008               	return
  3555                           	opt stack 0
  3556                           GLOBAL	__end_of_clearrow2
  3557  02B0                     	__end_of_clearrow2:
  3558 ;; =============== function _clearrow2 ends ============
  3559                           
  3560                           	signat	_clearrow2,88
  3561                           	global	_clearrow1
  3562                           psect	text436,local,class=CODE,delta=2
  3563                           global __ptext436
  3564  02A2                     __ptext436:
  3565                           
  3566 ;; *************** function _clearrow1 *****************
  3567 ;; Defined at:
  3568 ;;		line 137 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		None
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           psect	text436
  3595                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3596                           	line	137
  3597                           	global	__size_of_clearrow1
  3598  0007                     	__size_of_clearrow1	equ	__end_of_clearrow1-_clearrow1
  3599                           	
  3600  02A2                     _clearrow1:	
  3601                           	opt	stack 7
  3602                           ; Regs used in _clearrow1: []
  3603                           	line	138
  3604                           	
  3605  02A2                     l2260:	
  3606                           ;PR9B.c: 138: RE1=0;
  3607  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3608  02A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3609  02A4  1089               	bcf	(73/8),(73)&7
  3610                           	line	139
  3611                           ;PR9B.c: 139: RE0=1;
  3612  02A5  1409               	bsf	(72/8),(72)&7
  3613                           	line	140
  3614                           ;PR9B.c: 140: RA5=1;
  3615  02A6  1685               	bsf	(45/8),(45)&7
  3616                           	line	141
  3617                           ;PR9B.c: 141: RA4=1;
  3618  02A7  1605               	bsf	(44/8),(44)&7
  3619                           	line	142
  3620                           	
  3621  02A8                     l614:	
  3622  02A8  0008               	return
  3623                           	opt stack 0
  3624                           GLOBAL	__end_of_clearrow1
  3625  02A9                     	__end_of_clearrow1:
  3626 ;; =============== function _clearrow1 ends ============
  3627                           
  3628                           	signat	_clearrow1,88
  3629                           	global	_delay
  3630                           psect	text437,local,class=CODE,delta=2
  3631                           global __ptext437
  3632  03B0                     __ptext437:
  3633                           
  3634 ;; *************** function _delay *****************
  3635 ;; Defined at:
  3636 ;;		line 332 in file "C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  data            4    0[COMMON] unsigned long 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;		None               void
  3643 ;; Registers used:
  3644 ;;		wreg
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         4       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0
  3652 ;;      Temps:          4       0       0       0       0
  3653 ;;      Totals:         8       0       0       0       0
  3654 ;;Total ram usage:        8 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;;		_beep_once
  3661 ;;		_beep_twice
  3662 ;;		_send_config
  3663 ;;		_send_char
  3664 ;;		_e_pulse
  3665 ;;		_lcd_clr
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           psect	text437
  3669                           	file	"C:\Users\Phang\Desktop\9.80\PR 9B\PR9B.c"
  3670                           	line	332
  3671                           	global	__size_of_delay
  3672  0030                     	__size_of_delay	equ	__end_of_delay-_delay
  3673                           	
  3674  03B0                     _delay:	
  3675                           	opt	stack 6
  3676                           ; Regs used in _delay: [wreg]
  3677                           	line	333
  3678                           	
  3679  03B0                     l2254:	
  3680                           ;PR9B.c: 333: for( ;data>0;data-=1);
  3681  03B0  0873               	movf	(delay@data+3),w
  3682  03B1  0472               	iorwf	(delay@data+2),w
  3683  03B2  0471               	iorwf	(delay@data+1),w
  3684  03B3  0470               	iorwf	(delay@data),w
  3685  03B4  1D03               	skipz
  3686  03B5  2BB7               	goto	u2751
  3687  03B6  2BB8               	goto	u2750
  3688  03B7                     u2751:
  3689  03B7  2BBA               	goto	l2258
  3690  03B8                     u2750:
  3691  03B8  2BDF               	goto	l732
  3692                           	
  3693  03B9                     l2256:	
  3694  03B9  2BDF               	goto	l732
  3695                           	
  3696  03BA                     l730:	
  3697                           	
  3698  03BA                     l2258:	
  3699  03BA  3001               	movlw	01h
  3700  03BB  00F4               	movwf	((??_delay+0)+0)
  3701  03BC  3000               	movlw	0
  3702  03BD  00F5               	movwf	((??_delay+0)+0+1)
  3703  03BE  3000               	movlw	0
  3704  03BF  00F6               	movwf	((??_delay+0)+0+2)
  3705  03C0  3000               	movlw	0
  3706  03C1  00F7               	movwf	((??_delay+0)+0+3)
  3707  03C2  0874               	movf	0+(??_delay+0)+0,w
  3708  03C3  02F0               	subwf	(delay@data),f
  3709  03C4  0875               	movf	1+(??_delay+0)+0,w
  3710  03C5  1C03               	skipc
  3711  03C6  0F75               	incfsz	1+(??_delay+0)+0,w
  3712  03C7  2BC9               	goto	u2765
  3713  03C8  2BCA               	goto	u2766
  3714  03C9                     u2765:
  3715  03C9  02F1               	subwf	(delay@data+1),f
  3716  03CA                     u2766:
  3717  03CA  0876               	movf	2+(??_delay+0)+0,w
  3718  03CB  1C03               	skipc
  3719  03CC  0F76               	incfsz	2+(??_delay+0)+0,w
  3720  03CD  2BCF               	goto	u2767
  3721  03CE  2BD0               	goto	u2768
  3722  03CF                     u2767:
  3723  03CF  02F2               	subwf	(delay@data+2),f
  3724  03D0                     u2768:
  3725  03D0  0877               	movf	3+(??_delay+0)+0,w
  3726  03D1  1C03               	skipc
  3727  03D2  0F77               	incfsz	3+(??_delay+0)+0,w
  3728  03D3  2BD5               	goto	u2769
  3729  03D4  2BD6               	goto	u2760
  3730  03D5                     u2769:
  3731  03D5  02F3               	subwf	(delay@data+3),f
  3732  03D6                     u2760:
  3733                           
  3734  03D6  0873               	movf	(delay@data+3),w
  3735  03D7  0472               	iorwf	(delay@data+2),w
  3736  03D8  0471               	iorwf	(delay@data+1),w
  3737  03D9  0470               	iorwf	(delay@data),w
  3738  03DA  1D03               	skipz
  3739  03DB  2BDD               	goto	u2771
  3740  03DC  2BDE               	goto	u2770
  3741  03DD                     u2771:
  3742  03DD  2BBA               	goto	l2258
  3743  03DE                     u2770:
  3744  03DE  2BDF               	goto	l732
  3745                           	
  3746  03DF                     l731:	
  3747                           	line	334
  3748                           	
  3749  03DF                     l732:	
  3750  03DF  0008               	return
  3751                           	opt stack 0
  3752                           GLOBAL	__end_of_delay
  3753  03E0                     	__end_of_delay:
  3754 ;; =============== function _delay ends ============
  3755                           
  3756                           	signat	_delay,4216
  3757                           psect	text438,local,class=CODE,delta=2
  3758                           global __ptext438
  3759  0000                     __ptext438:
  3760                           	global	btemp
  3761  007E                     	btemp set 07Eh
  3762                           
  3763                           	DABS	1,126,2	;btemp
  3764                           	global	wtemp0
  3765  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Jun 20 22:52:27 2012

                   pc 0002          _stalled_char 0026                    fsr 0004                   l600 07FB  
                 l601 07DE                   l610 07FD                   l602 07DC                   l611 07FD  
                 l603 07DC                   l620 02B6                   l700 0631                   l604 07DD  
                 l701 064D                   l605 07FA                   l614 02A8                   l630 042B  
                 l710 06AC                   l606 07F8                   l623 02BD                   l631 04D1  
                 l711 0684                   l607 07F8                   l640 0478                   l632 0472  
                 l720 06C1                   l712 0684                   l704 067E                   l608 07F9  
                 l617 02AF                   l641 047D                   l633 044A                   l721 0709  
                 l713 0689                   l705 0656                   l609 07FC                   l730 03BA  
                 l642 0487                   l634 044A                   l626 0444                   l722 0708  
                 l714 0693                   l706 0656                   l731 03DF                   l643 04CF  
                 l635 044F                   l627 041C                   l715 070A                   l723 06E0  
                 l707 065B                   l732 03DF                   l644 04CE                   l636 0459  
                 l628 041C                   l660 0508                   l652 0502                   l724 06E0  
                 l716 06DA                   l708 0665                   l741 02FE                   l637 04D0  
                 l645 04A6                   l629 0421                   l661 050D                   l653 04DA  
                 l709 070B                   l725 06E5                   l717 06B2                   l750 0327  
                 l646 04A6                   l638 04A0                   l670 058C                   l662 0517  
                 l654 04DA                   l726 06EF                   l718 06B2                   l735 02D1  
                 l751 0334                   l647 04AB                   l639 0478                   l663 058E  
                 l671 0564                   l655 04DF                   l719 06B7                   l727 070B  
                 l744 0317                   l752 0334                   l648 04B5                   l672 0564  
                 l664 055E                   l656 04E9                   l680 0598                   l761 037F  
                 l649 04D1                   l657 058F                   l673 0569                   l665 0536  
                 l681 059D                   l738 0413                   l762 0380                   l674 0573  
                 l666 0536                   l658 0530                   l690 061C                   l682 05A7  
                 l747 0355                   l755 02E5                   l763 0380                   l667 053B  
                 l659 0508                   l675 058F                   l683 064D                   l691 05F4  
                 l668 0545                   l692 05F4                   l684 05EE                   l669 058D  
                 l693 05F9                   l685 05C6                   l758 036E                   l694 0603  
                 l686 05C6                   l678 05C0                   l759 035D                   l695 064B  
                 l687 05CB                   l679 0598                   l599 0768                   l696 064A  
                 l688 05D5                   l689 064C                   l697 0622                   l698 0622  
                 l699 0627                   _RA0 0028                   _RA1 0029                   _RA2 002A  
                 _RB1 0031                   _RA3 002B                   _RC0 0038                   _RB2 0032  
                 _RA4 002C                   _RC1 0039                   _RA5 002D                   _RC2 003A  
                 _RC3 003B                   _RE0 0048                   _RE1 0049                   fsr0 0004  
                 indf 0000       send_config@data 0078                  l2300 0303                  l2302 0305  
                l2310 031F                  l2304 0312                  l2312 0327                  l2320 0369  
                l2400 0563                  l2306 02D2                  l2314 032C                  l2322 036E  
                l2330 0421                  l2402 0569                  l2410 0590                  l2260 02A2  
                l2308 0319                  l2324 0372                  l2316 0357                  l2340 044F  
                l2332 0426                  l2404 056E                  l2420 05BB                  l2412 0597  
                l2500 0716                  l2254 03B0                  l2262 02A9                  l2270 02C1  
                l2318 035D                  l2350 047D                  l2342 0454                  l2334 0437  
                l2326 0414                  l2406 057F                  l2430 05E9                  l2422 05C5  
                l2414 059D                  l2510 071D                  l2502 0717                  l2256 03B9  
                l2264 02B0                  l2272 02CE                  l2280 0400                  l2360 04AB  
                l2352 0482                  l2344 0465                  l2336 043F                  l2328 041B  
                l2408 0587                  l2440 0617                  l2432 05F3                  l2424 05CB  
                l2416 05A2                  l2520 0731                  l2512 071E                  l2504 071A  
                l2258 03BA                  l2266 02B7                  l2282 0410                  l2274 03E0  
                l2290 02E7                  l2362 04B0                  l2354 0493                  l2346 046D  
                l2338 0449                  l2370 04D9                  l2450 0645                  l2442 0621  
                l2434 05F9                  l2426 05D0                  l2418 05B3                  l2530 0755  
                l2522 0737                  l2514 071F                  l2506 071B                  l2268 02BE  
                l2276 03E3                  l2284 0335                  l2292 02EA                  l2364 04C1  
                l2356 049B                  l2348 0477                  l2380 0507                  l2372 04DF  
                l2444 0627                  l2436 05FE                  l2428 05E1                  l2460 0671  
                l2452 064E                  l2540 0772                  l2532 075B                  l2524 073D  
                l2516 0725                  l2508 071C                  l2278 03F0                  l2286 0338  
                l2294 02EC                  l2366 04C9                  l2358 04A5                  l2390 0535  
                l2382 050D                  l2374 04E4                  l2446 062C                  l2438 060F  
                l2470 069F                  l2462 0679                  l2454 0655                  l2550 078B  
                l2542 0777                  l2534 0761                  l2526 0742                  l2518 072B  
                l2288 0345                  l2296 02F9                  l2392 053B                  l2384 0512  
                l2376 04F5                  l2368 04D2                  l2448 063D                  l2480 06CD  
                l2472 06A7                  l2464 0683                  l2456 065B                  l2560 07A9  
                l2552 0790                  l2544 077C                  l2536 0768                  l2528 074F  
                l2298 0300                  l2394 0540                  l2386 0523                  l2378 04FD  
                l2490 06FB                  l2482 06D5                  l2474 06B1                  l2466 0689  
                l2458 0660                  l2570 07CC                  l2562 07AF                  l2554 0796  
                l2546 0781                  l2538 076D                  l2396 0551                  l2388 052B  
                l2492 0703                  l2484 06DF                  l2476 06B7                  l2468 068E  
                l2580 07E9                  l2572 07D2                  l2564 07B5                  l2556 079B  
                l2548 0786                  l2398 0559                  l2486 06E5                  l2478 06BC  
                l2582 07EF                  l2574 07D5                  l2566 07BB                  l2558 07A3  
                l2494 070C                  l2488 06EA                  l2584 07F2                  l2576 07D6  
                l2568 07C1                  l2496 0712                  l2578 07DE                  l2498 0713  
                STR_1 001A                  STR_2 0009                  STR_3 0027                  STR_4 0030  
                u3000 053A                  u3001 0539                  u3010 0540                  u3011 053F  
                u3020 0562                  u3100 05D0                  u3021 0561                  u3101 05CF  
                u3030 0568                  u3110 05F2                  u3031 0567                  u3111 05F1  
                u3040 056E                  u3120 05F8                  u3200 0682                  u3041 056D  
                u3121 05F7                  u3201 0681                  u3130 05FE                  u3050 0596  
                u3210 0688                  u3131 05FD                  u3051 0595                  u3211 0687  
                u3140 0620                  u3060 059C                  u3220 068E                  u3300 07A3  
                u3141 061F                  u3061 059B                  u3221 068D                  u3301 07A2  
                u3150 0626                  u3070 05A2                  u3230 06B0                  u3310 07A9  
                u3151 0625                  u3071 05A1                  u3231 06AF                  u3311 07A8  
                u3160 062C                  u3080 05C4                  u3240 06B6                  u3320 07AF  
                u3161 062B                  u3081 05C3                  u3241 06B5                  u3321 07AE  
                u3090 05CA                  u3250 06BC                  u3170 0654                  u3330 07B5  
                u3091 05C9                  u3251 06BB                  u3171 0653                  u3331 07B4  
                u3260 06DE                  u3180 065A                  u3340 07BB                  u3261 06DD  
                u3181 0659                  u3341 07BA                  u3270 06E4                  u3190 0660  
                u3350 07C1                  u3271 06E3                  u3191 065F                  u3351 07C0  
                u2800 037E                  u3280 06EA                  u2801 037D                  u3281 06E9  
                u2810 041A                  u3290 0796                  u2811 0419                  u3291 0795  
                u2900 04A4                  u2820 0420                  u2901 04A3                  u2821 041F  
                u2750 03B8                  u2910 04AA                  u2830 0426                  u2751 03B7  
                u2911 04A9                  u2831 0425                  u2760 03D6                  u2920 04B0  
                u2840 0448                  u2921 04AF                  u2841 0447                  u2770 03DE  
                u2850 044E                  u2930 04D8                  u2771 03DD                  u2851 044D  
                u2931 04D7                  u2780 031F                  u2860 0454                  u2940 04DE  
                u2765 03C9                  u2781 031E                  u2861 0453                  u2941 04DD  
                u2766 03CA                  u2790 0372                  u2870 0476                  u2950 04E4  
                u2767 03CF                  u2871 0475                  u2951 04E3                  u2768 03D0  
                u2880 047C                  u2960 0506                  u2769 03D5                  u2881 047B  
                u2961 0505                  u2890 0482                  u2970 050C                  u2891 0481  
                u2971 050B                  u2980 0512                  u2981 0511                  u2990 0534  
                u2991 0533                  _main 070C                  btemp 007E          lcd_goto@data 007A  
                start 0000                 ?_main 0070                 _PORTC 0007                 _PORTD 0008  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _TRISE 0089       __end_of_e_pulse 0356       __end_of_lcd_clr 02E6                 _delay 03B0  
               pclath 000A                 status 0003                 wtemp0 007E          ?_scancolumn1 0070  
        ?_scancolumn2 0070          ?_scancolumn3 0070          ?_scancolumn4 0070          __end_of_main 0800  
              ??_main 007C                ?_delay 0070          ?_send_config 0070                _ADCON1 009F  
        ?_send_string 0070      __end_of_lcd_goto 0335             ??_e_pulse 0078             ??_lcd_clr 0079  
      _password_count 007C        __pcstackCOMMON 0070    __size_of_beep_once 0014          __pidataBANK0 029C  
       __end_of_delay 03E0    __size_of_clearrow1 0007    __size_of_clearrow2 0007    __size_of_clearrow3 0007  
  __size_of_clearrow4 0007               ??_delay 0074            _beep_twice 03E0            __pbssBANK0 0020  
          __pmaintext 070C  __size_of_scancolumn1 00BE  __size_of_scancolumn2 00BE  __size_of_scancolumn3 00BE  
__size_of_scancolumn4 00BE    __size_of_send_char 0019     __end_of_beep_once 02D2             ?_lcd_goto 0070  
__size_of_send_config 0019     __end_of_clearrow1 02A9     __end_of_clearrow2 02B0     __end_of_clearrow3 02B7  
   __end_of_clearrow4 02BE  __size_of_send_string 002B               _e_pulse 0335            _keyin_char 0020  
             _lcd_clr 02D2           ?_beep_twice 0070            ??_lcd_goto 0079  end_of_initialization 03AC  
   __end_of_send_char 0318         send_char@data 0078   __size_of_beep_twice 0034   start_initialization 0381  
         __pdataBANK0 0026           __pbssCOMMON 007C     __size_of_lcd_goto 001D             _beep_once 02BE  
       ??_scancolumn1 007B         ??_scancolumn2 007B         ??_scancolumn3 007B         ??_scancolumn4 007B  
           _clearrow1 02A2             _clearrow2 02A9             _clearrow3 02B0             _clearrow4 02B7  
           __ptext421 064E             __ptext430 0335             __ptext422 0590             __ptext431 03E0  
           __ptext423 04D2             __ptext432 02BE             __ptext424 0414             __ptext433 02B7  
           __ptext425 0356             __ptext434 02B0             __ptext426 0318             __ptext435 02A9  
           __ptext427 02D2             __ptext436 02A2             __ptext428 02FF             __ptext437 03B0  
           __ptext429 02E6             __ptext438 0000              ?_e_pulse 0070             __pstrings 0003  
            ?_lcd_clr 0070         ??_send_config 0078        __size_of_delay 0030          ??_beep_twice 0078  
           delay@data 0070         ??_send_string 0079            ?_beep_once 0070             _send_char 02FF  
          ?_clearrow1 0070            ?_clearrow2 0070            ?_clearrow3 0070            ?_clearrow4 0070  
 __end_of_scancolumn1 04D2   __end_of_scancolumn2 0590   __end_of_scancolumn3 064E   __end_of_scancolumn4 070C  
  __end_of_beep_twice 0414           __stringbase 0008   __end_of_send_config 02FF            ?_send_char 0070  
        send_string@i 007A          send_string@s 007B   __end_of_send_string 0381      __size_of_e_pulse 0021  
    __size_of_lcd_clr 0014              _lcd_goto 0318           ??_beep_once 0078         __size_of_main 00F4  
         _scancolumn1 0414           _scancolumn2 04D2           _scancolumn3 0590           _scancolumn4 064E  
         ??_clearrow1 0070           ??_clearrow2 0070           ??_clearrow3 0070           ??_clearrow4 0070  
         _send_config 02E6           _send_string 0356           ??_send_char 0078             stringcode 0003  
            stringdir 0003              stringtab 0003  
