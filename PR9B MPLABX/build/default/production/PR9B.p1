Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"947 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _ADCON1 `Vuc ~T0 0 e@159 ]
"633
[v _TRISA `Vuc ~T0 0 e@133 ]
"650
[v _TRISB `Vuc ~T0 0 e@134 ]
"688
[v _TRISD `Vuc ~T0 0 e@136 ]
"669
[v _TRISC `Vuc ~T0 0 e@135 ]
"707
[v _TRISE `Vuc ~T0 0 e@137 ]
"203
[v _PORTC `Vuc ~T0 0 e@7 ]
"222
[v _PORTD `Vuc ~T0 0 e@8 ]
"1128
[v _RB1 `Vb ~T0 0 e@49 ]
"1129
[v _RB2 `Vb ~T0 0 e@50 ]
"1139
[v _RC2 `Vb ~T0 0 e@58 ]
"1140
[v _RC3 `Vb ~T0 0 e@59 ]
"37 PR9B.c
[v _send_config `(v ~T0 0 ef1`uc ]
"41
[v _lcd_clr `(v ~T0 0 ef ]
"36
[v _delay `(v ~T0 0 ef1`ul ]
"40
[v _lcd_goto `(v ~T0 0 ef1`uc ]
"42
[v _send_string `(v ~T0 0 ef1`*Cuc ]
"43
[v _clearrow1 `(v ~T0 0 ef ]
"47
[v _scancolumn1 `(v ~T0 0 ef ]
"44
[v _clearrow2 `(v ~T0 0 ef ]
"48
[v _scancolumn2 `(v ~T0 0 ef ]
"45
[v _clearrow3 `(v ~T0 0 ef ]
"49
[v _scancolumn3 `(v ~T0 0 ef ]
"46
[v _clearrow4 `(v ~T0 0 ef ]
"50
[v _scancolumn4 `(v ~T0 0 ef ]
"51
[v _beep_once `(v ~T0 0 ef ]
"52
[v _beep_twice `(v ~T0 0 ef ]
"1161 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RE1 `Vb ~T0 0 e@73 ]
"1160
[v _RE0 `Vb ~T0 0 e@72 ]
"1126
[v _RA5 `Vb ~T0 0 e@45 ]
"1125
[v _RA4 `Vb ~T0 0 e@44 ]
"1121
[v _RA0 `Vb ~T0 0 e@40 ]
"38 PR9B.c
[v _send_char `(v ~T0 0 ef1`uc ]
"1122 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RA1 `Vb ~T0 0 e@41 ]
"1123
[v _RA2 `Vb ~T0 0 e@42 ]
"1124
[v _RA3 `Vb ~T0 0 e@43 ]
"1137
[v _RC0 `Vb ~T0 0 e@56 ]
"39 PR9B.c
[v _e_pulse `(v ~T0 0 ef ]
"1138 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f877a.h
[v _RC1 `Vb ~T0 0 e@57 ]
[; ;pic16f877a.h: 104: extern volatile unsigned char INDF @ 0x000;
[; ;pic16f877a.h: 106: extern volatile union {
[; ;pic16f877a.h: 107: struct {
[; ;pic16f877a.h: 108: unsigned INDF :8;
[; ;pic16f877a.h: 109: };
[; ;pic16f877a.h: 110: } INDFbits @ 0x000;
[; ;pic16f877a.h: 113: extern volatile unsigned char TMR0 @ 0x001;
[; ;pic16f877a.h: 115: extern volatile union {
[; ;pic16f877a.h: 116: struct {
[; ;pic16f877a.h: 117: unsigned TMR0 :8;
[; ;pic16f877a.h: 118: };
[; ;pic16f877a.h: 119: } TMR0bits @ 0x001;
[; ;pic16f877a.h: 122: extern volatile unsigned char PCL @ 0x002;
[; ;pic16f877a.h: 124: extern volatile union {
[; ;pic16f877a.h: 125: struct {
[; ;pic16f877a.h: 126: unsigned PCL :8;
[; ;pic16f877a.h: 127: };
[; ;pic16f877a.h: 128: } PCLbits @ 0x002;
[; ;pic16f877a.h: 131: extern volatile unsigned char STATUS @ 0x003;
[; ;pic16f877a.h: 133: extern volatile union {
[; ;pic16f877a.h: 134: struct {
[; ;pic16f877a.h: 135: unsigned C :1;
[; ;pic16f877a.h: 136: unsigned DC :1;
[; ;pic16f877a.h: 137: unsigned Z :1;
[; ;pic16f877a.h: 138: unsigned nPD :1;
[; ;pic16f877a.h: 139: unsigned nTO :1;
[; ;pic16f877a.h: 140: unsigned RP :2;
[; ;pic16f877a.h: 141: unsigned IRP :1;
[; ;pic16f877a.h: 142: };
[; ;pic16f877a.h: 143: struct {
[; ;pic16f877a.h: 144: unsigned :5;
[; ;pic16f877a.h: 145: unsigned RP0 :1;
[; ;pic16f877a.h: 146: unsigned RP1 :1;
[; ;pic16f877a.h: 147: };
[; ;pic16f877a.h: 148: struct {
[; ;pic16f877a.h: 149: unsigned CARRY :1;
[; ;pic16f877a.h: 150: };
[; ;pic16f877a.h: 151: struct {
[; ;pic16f877a.h: 152: unsigned :2;
[; ;pic16f877a.h: 153: unsigned ZERO :1;
[; ;pic16f877a.h: 154: };
[; ;pic16f877a.h: 155: } STATUSbits @ 0x003;
[; ;pic16f877a.h: 158: extern volatile unsigned char FSR @ 0x004;
[; ;pic16f877a.h: 160: extern volatile union {
[; ;pic16f877a.h: 161: struct {
[; ;pic16f877a.h: 162: unsigned FSR :8;
[; ;pic16f877a.h: 163: };
[; ;pic16f877a.h: 164: } FSRbits @ 0x004;
[; ;pic16f877a.h: 167: extern volatile unsigned char PORTA @ 0x005;
[; ;pic16f877a.h: 169: extern volatile union {
[; ;pic16f877a.h: 170: struct {
[; ;pic16f877a.h: 171: unsigned RA0 :1;
[; ;pic16f877a.h: 172: unsigned RA1 :1;
[; ;pic16f877a.h: 173: unsigned RA2 :1;
[; ;pic16f877a.h: 174: unsigned RA3 :1;
[; ;pic16f877a.h: 175: unsigned RA4 :1;
[; ;pic16f877a.h: 176: unsigned RA5 :1;
[; ;pic16f877a.h: 177: };
[; ;pic16f877a.h: 178: struct {
[; ;pic16f877a.h: 179: unsigned RA :8;
[; ;pic16f877a.h: 180: };
[; ;pic16f877a.h: 181: } PORTAbits @ 0x005;
[; ;pic16f877a.h: 184: extern volatile unsigned char PORTB @ 0x006;
[; ;pic16f877a.h: 186: extern volatile union {
[; ;pic16f877a.h: 187: struct {
[; ;pic16f877a.h: 188: unsigned RB0 :1;
[; ;pic16f877a.h: 189: unsigned RB1 :1;
[; ;pic16f877a.h: 190: unsigned RB2 :1;
[; ;pic16f877a.h: 191: unsigned RB3 :1;
[; ;pic16f877a.h: 192: unsigned RB4 :1;
[; ;pic16f877a.h: 193: unsigned RB5 :1;
[; ;pic16f877a.h: 194: unsigned RB6 :1;
[; ;pic16f877a.h: 195: unsigned RB7 :1;
[; ;pic16f877a.h: 196: };
[; ;pic16f877a.h: 197: struct {
[; ;pic16f877a.h: 198: unsigned RB :8;
[; ;pic16f877a.h: 199: };
[; ;pic16f877a.h: 200: } PORTBbits @ 0x006;
[; ;pic16f877a.h: 203: extern volatile unsigned char PORTC @ 0x007;
[; ;pic16f877a.h: 205: extern volatile union {
[; ;pic16f877a.h: 206: struct {
[; ;pic16f877a.h: 207: unsigned RC0 :1;
[; ;pic16f877a.h: 208: unsigned RC1 :1;
[; ;pic16f877a.h: 209: unsigned RC2 :1;
[; ;pic16f877a.h: 210: unsigned RC3 :1;
[; ;pic16f877a.h: 211: unsigned RC4 :1;
[; ;pic16f877a.h: 212: unsigned RC5 :1;
[; ;pic16f877a.h: 213: unsigned RC6 :1;
[; ;pic16f877a.h: 214: unsigned RC7 :1;
[; ;pic16f877a.h: 215: };
[; ;pic16f877a.h: 216: struct {
[; ;pic16f877a.h: 217: unsigned RC :8;
[; ;pic16f877a.h: 218: };
[; ;pic16f877a.h: 219: } PORTCbits @ 0x007;
[; ;pic16f877a.h: 222: extern volatile unsigned char PORTD @ 0x008;
[; ;pic16f877a.h: 224: extern volatile union {
[; ;pic16f877a.h: 225: struct {
[; ;pic16f877a.h: 226: unsigned RD0 :1;
[; ;pic16f877a.h: 227: unsigned RD1 :1;
[; ;pic16f877a.h: 228: unsigned RD2 :1;
[; ;pic16f877a.h: 229: unsigned RD3 :1;
[; ;pic16f877a.h: 230: unsigned RD4 :1;
[; ;pic16f877a.h: 231: unsigned RD5 :1;
[; ;pic16f877a.h: 232: unsigned RD6 :1;
[; ;pic16f877a.h: 233: unsigned RD7 :1;
[; ;pic16f877a.h: 234: };
[; ;pic16f877a.h: 235: struct {
[; ;pic16f877a.h: 236: unsigned RD :8;
[; ;pic16f877a.h: 237: };
[; ;pic16f877a.h: 238: } PORTDbits @ 0x008;
[; ;pic16f877a.h: 241: extern volatile unsigned char PORTE @ 0x009;
[; ;pic16f877a.h: 243: extern volatile union {
[; ;pic16f877a.h: 244: struct {
[; ;pic16f877a.h: 245: unsigned RE0 :1;
[; ;pic16f877a.h: 246: unsigned RE1 :1;
[; ;pic16f877a.h: 247: unsigned RE2 :1;
[; ;pic16f877a.h: 248: };
[; ;pic16f877a.h: 249: struct {
[; ;pic16f877a.h: 250: unsigned RE :8;
[; ;pic16f877a.h: 251: };
[; ;pic16f877a.h: 252: } PORTEbits @ 0x009;
[; ;pic16f877a.h: 255: extern volatile unsigned char PCLATH @ 0x00A;
[; ;pic16f877a.h: 257: extern volatile union {
[; ;pic16f877a.h: 258: struct {
[; ;pic16f877a.h: 259: unsigned PCLATH :5;
[; ;pic16f877a.h: 260: };
[; ;pic16f877a.h: 261: } PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 264: extern volatile unsigned char INTCON @ 0x00B;
[; ;pic16f877a.h: 266: extern volatile union {
[; ;pic16f877a.h: 267: struct {
[; ;pic16f877a.h: 268: unsigned RBIF :1;
[; ;pic16f877a.h: 269: unsigned INTF :1;
[; ;pic16f877a.h: 270: unsigned TMR0IF :1;
[; ;pic16f877a.h: 271: unsigned RBIE :1;
[; ;pic16f877a.h: 272: unsigned INTE :1;
[; ;pic16f877a.h: 273: unsigned TMR0IE :1;
[; ;pic16f877a.h: 274: unsigned PEIE :1;
[; ;pic16f877a.h: 275: unsigned GIE :1;
[; ;pic16f877a.h: 276: };
[; ;pic16f877a.h: 277: struct {
[; ;pic16f877a.h: 278: unsigned :2;
[; ;pic16f877a.h: 279: unsigned T0IF :1;
[; ;pic16f877a.h: 280: unsigned :2;
[; ;pic16f877a.h: 281: unsigned T0IE :1;
[; ;pic16f877a.h: 282: };
[; ;pic16f877a.h: 283: } INTCONbits @ 0x00B;
[; ;pic16f877a.h: 286: extern volatile unsigned char PIR1 @ 0x00C;
[; ;pic16f877a.h: 288: extern volatile union {
[; ;pic16f877a.h: 289: struct {
[; ;pic16f877a.h: 290: unsigned TMR1IF :1;
[; ;pic16f877a.h: 291: unsigned TMR2IF :1;
[; ;pic16f877a.h: 292: unsigned CCP1IF :1;
[; ;pic16f877a.h: 293: unsigned SSPIF :1;
[; ;pic16f877a.h: 294: unsigned TXIF :1;
[; ;pic16f877a.h: 295: unsigned RCIF :1;
[; ;pic16f877a.h: 296: unsigned ADIF :1;
[; ;pic16f877a.h: 297: unsigned PSPIF :1;
[; ;pic16f877a.h: 298: };
[; ;pic16f877a.h: 299: struct {
[; ;pic16f877a.h: 300: unsigned TMR1IF :1;
[; ;pic16f877a.h: 301: unsigned TMR2IF :1;
[; ;pic16f877a.h: 302: unsigned CCP1IF :1;
[; ;pic16f877a.h: 303: unsigned SSPIF :1;
[; ;pic16f877a.h: 304: unsigned :2;
[; ;pic16f877a.h: 305: unsigned ADIF :1;
[; ;pic16f877a.h: 306: unsigned PSPIF :1;
[; ;pic16f877a.h: 307: };
[; ;pic16f877a.h: 308: } PIR1bits @ 0x00C;
[; ;pic16f877a.h: 311: extern volatile unsigned char PIR2 @ 0x00D;
[; ;pic16f877a.h: 313: extern volatile union {
[; ;pic16f877a.h: 314: struct {
[; ;pic16f877a.h: 315: unsigned CCP2IF :1;
[; ;pic16f877a.h: 316: unsigned :2;
[; ;pic16f877a.h: 317: unsigned BCLIF :1;
[; ;pic16f877a.h: 318: unsigned EEIF :1;
[; ;pic16f877a.h: 319: unsigned :1;
[; ;pic16f877a.h: 320: unsigned CMIF :1;
[; ;pic16f877a.h: 321: };
[; ;pic16f877a.h: 322: } PIR2bits @ 0x00D;
[; ;pic16f877a.h: 325: extern volatile unsigned short TMR1 @ 0x00E;
[; ;pic16f877a.h: 327: extern volatile union {
[; ;pic16f877a.h: 328: struct {
[; ;pic16f877a.h: 329: unsigned TMR1 :16;
[; ;pic16f877a.h: 330: };
[; ;pic16f877a.h: 331: } TMR1bits @ 0x00E;
[; ;pic16f877a.h: 334: extern volatile unsigned char TMR1L @ 0x00E;
[; ;pic16f877a.h: 336: extern volatile union {
[; ;pic16f877a.h: 337: struct {
[; ;pic16f877a.h: 338: unsigned TMR1L :8;
[; ;pic16f877a.h: 339: };
[; ;pic16f877a.h: 340: } TMR1Lbits @ 0x00E;
[; ;pic16f877a.h: 343: extern volatile unsigned char TMR1H @ 0x00F;
[; ;pic16f877a.h: 345: extern volatile union {
[; ;pic16f877a.h: 346: struct {
[; ;pic16f877a.h: 347: unsigned TMR1H :8;
[; ;pic16f877a.h: 348: };
[; ;pic16f877a.h: 349: } TMR1Hbits @ 0x00F;
[; ;pic16f877a.h: 352: extern volatile unsigned char T1CON @ 0x010;
[; ;pic16f877a.h: 354: extern volatile union {
[; ;pic16f877a.h: 355: struct {
[; ;pic16f877a.h: 356: unsigned TMR1ON :1;
[; ;pic16f877a.h: 357: unsigned TMR1CS :1;
[; ;pic16f877a.h: 358: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 359: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 360: unsigned T1CKPS :2;
[; ;pic16f877a.h: 361: };
[; ;pic16f877a.h: 362: struct {
[; ;pic16f877a.h: 363: unsigned :2;
[; ;pic16f877a.h: 364: unsigned T1SYNC :1;
[; ;pic16f877a.h: 365: unsigned :1;
[; ;pic16f877a.h: 366: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 367: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 368: };
[; ;pic16f877a.h: 369: struct {
[; ;pic16f877a.h: 370: unsigned :2;
[; ;pic16f877a.h: 371: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 372: };
[; ;pic16f877a.h: 373: } T1CONbits @ 0x010;
[; ;pic16f877a.h: 376: extern volatile unsigned char TMR2 @ 0x011;
[; ;pic16f877a.h: 378: extern volatile union {
[; ;pic16f877a.h: 379: struct {
[; ;pic16f877a.h: 380: unsigned TMR2 :8;
[; ;pic16f877a.h: 381: };
[; ;pic16f877a.h: 382: } TMR2bits @ 0x011;
[; ;pic16f877a.h: 385: extern volatile unsigned char T2CON @ 0x012;
[; ;pic16f877a.h: 387: extern volatile union {
[; ;pic16f877a.h: 388: struct {
[; ;pic16f877a.h: 389: unsigned T2CKPS :2;
[; ;pic16f877a.h: 390: unsigned TMR2ON :1;
[; ;pic16f877a.h: 391: unsigned TOUTPS :4;
[; ;pic16f877a.h: 392: };
[; ;pic16f877a.h: 393: struct {
[; ;pic16f877a.h: 394: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 395: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 396: unsigned :1;
[; ;pic16f877a.h: 397: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 398: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 399: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 400: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 401: };
[; ;pic16f877a.h: 402: } T2CONbits @ 0x012;
[; ;pic16f877a.h: 405: extern volatile unsigned char SSPBUF @ 0x013;
[; ;pic16f877a.h: 407: extern volatile union {
[; ;pic16f877a.h: 408: struct {
[; ;pic16f877a.h: 409: unsigned SSPBUF :8;
[; ;pic16f877a.h: 410: };
[; ;pic16f877a.h: 411: } SSPBUFbits @ 0x013;
[; ;pic16f877a.h: 414: extern volatile unsigned char SSPCON @ 0x014;
[; ;pic16f877a.h: 416: extern volatile union {
[; ;pic16f877a.h: 417: struct {
[; ;pic16f877a.h: 418: unsigned SSPM :4;
[; ;pic16f877a.h: 419: unsigned CKP :1;
[; ;pic16f877a.h: 420: unsigned SSPEN :1;
[; ;pic16f877a.h: 421: unsigned SSPOV :1;
[; ;pic16f877a.h: 422: unsigned WCOL :1;
[; ;pic16f877a.h: 423: };
[; ;pic16f877a.h: 424: struct {
[; ;pic16f877a.h: 425: unsigned SSPM0 :1;
[; ;pic16f877a.h: 426: unsigned SSPM1 :1;
[; ;pic16f877a.h: 427: unsigned SSPM2 :1;
[; ;pic16f877a.h: 428: unsigned SSPM3 :1;
[; ;pic16f877a.h: 429: };
[; ;pic16f877a.h: 430: } SSPCONbits @ 0x014;
[; ;pic16f877a.h: 433: extern volatile unsigned short CCPR1 @ 0x015;
[; ;pic16f877a.h: 435: extern volatile union {
[; ;pic16f877a.h: 436: struct {
[; ;pic16f877a.h: 437: unsigned CCPR1 :16;
[; ;pic16f877a.h: 438: };
[; ;pic16f877a.h: 439: } CCPR1bits @ 0x015;
[; ;pic16f877a.h: 442: extern volatile unsigned char CCPR1L @ 0x015;
[; ;pic16f877a.h: 444: extern volatile union {
[; ;pic16f877a.h: 445: struct {
[; ;pic16f877a.h: 446: unsigned CCPR1L :8;
[; ;pic16f877a.h: 447: };
[; ;pic16f877a.h: 448: } CCPR1Lbits @ 0x015;
[; ;pic16f877a.h: 451: extern volatile unsigned char CCPR1H @ 0x016;
[; ;pic16f877a.h: 453: extern volatile union {
[; ;pic16f877a.h: 454: struct {
[; ;pic16f877a.h: 455: unsigned CCPR1H :8;
[; ;pic16f877a.h: 456: };
[; ;pic16f877a.h: 457: } CCPR1Hbits @ 0x016;
[; ;pic16f877a.h: 460: extern volatile unsigned char CCP1CON @ 0x017;
[; ;pic16f877a.h: 462: extern volatile union {
[; ;pic16f877a.h: 463: struct {
[; ;pic16f877a.h: 464: unsigned CCP1M :4;
[; ;pic16f877a.h: 465: unsigned CCP1Y :1;
[; ;pic16f877a.h: 466: unsigned CCP1X :1;
[; ;pic16f877a.h: 467: };
[; ;pic16f877a.h: 468: struct {
[; ;pic16f877a.h: 469: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 470: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 471: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 472: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 473: };
[; ;pic16f877a.h: 474: } CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 477: extern volatile unsigned char RCSTA @ 0x018;
[; ;pic16f877a.h: 479: extern volatile union {
[; ;pic16f877a.h: 480: struct {
[; ;pic16f877a.h: 481: unsigned RX9D :1;
[; ;pic16f877a.h: 482: unsigned OERR :1;
[; ;pic16f877a.h: 483: unsigned FERR :1;
[; ;pic16f877a.h: 484: unsigned ADDEN :1;
[; ;pic16f877a.h: 485: unsigned CREN :1;
[; ;pic16f877a.h: 486: unsigned SREN :1;
[; ;pic16f877a.h: 487: unsigned RX9 :1;
[; ;pic16f877a.h: 488: unsigned SPEN :1;
[; ;pic16f877a.h: 489: };
[; ;pic16f877a.h: 490: struct {
[; ;pic16f877a.h: 491: unsigned RCD8 :1;
[; ;pic16f877a.h: 492: unsigned :5;
[; ;pic16f877a.h: 493: unsigned RC9 :1;
[; ;pic16f877a.h: 494: };
[; ;pic16f877a.h: 495: struct {
[; ;pic16f877a.h: 496: unsigned :6;
[; ;pic16f877a.h: 497: unsigned nRC8 :1;
[; ;pic16f877a.h: 498: };
[; ;pic16f877a.h: 499: struct {
[; ;pic16f877a.h: 500: unsigned :6;
[; ;pic16f877a.h: 501: unsigned RC8_9 :1;
[; ;pic16f877a.h: 502: };
[; ;pic16f877a.h: 503: } RCSTAbits @ 0x018;
[; ;pic16f877a.h: 506: extern volatile unsigned char TXREG @ 0x019;
[; ;pic16f877a.h: 508: extern volatile union {
[; ;pic16f877a.h: 509: struct {
[; ;pic16f877a.h: 510: unsigned TXREG :8;
[; ;pic16f877a.h: 511: };
[; ;pic16f877a.h: 512: } TXREGbits @ 0x019;
[; ;pic16f877a.h: 515: extern volatile unsigned char RCREG @ 0x01A;
[; ;pic16f877a.h: 517: extern volatile union {
[; ;pic16f877a.h: 518: struct {
[; ;pic16f877a.h: 519: unsigned RCREG :8;
[; ;pic16f877a.h: 520: };
[; ;pic16f877a.h: 521: } RCREGbits @ 0x01A;
[; ;pic16f877a.h: 524: extern volatile unsigned short CCPR2 @ 0x01B;
[; ;pic16f877a.h: 526: extern volatile union {
[; ;pic16f877a.h: 527: struct {
[; ;pic16f877a.h: 528: unsigned CCPR2 :16;
[; ;pic16f877a.h: 529: };
[; ;pic16f877a.h: 530: } CCPR2bits @ 0x01B;
[; ;pic16f877a.h: 533: extern volatile unsigned char CCPR2L @ 0x01B;
[; ;pic16f877a.h: 535: extern volatile union {
[; ;pic16f877a.h: 536: struct {
[; ;pic16f877a.h: 537: unsigned CCPR2L :8;
[; ;pic16f877a.h: 538: };
[; ;pic16f877a.h: 539: } CCPR2Lbits @ 0x01B;
[; ;pic16f877a.h: 542: extern volatile unsigned char CCPR2H @ 0x01C;
[; ;pic16f877a.h: 544: extern volatile union {
[; ;pic16f877a.h: 545: struct {
[; ;pic16f877a.h: 546: unsigned CCPR2H :8;
[; ;pic16f877a.h: 547: };
[; ;pic16f877a.h: 548: } CCPR2Hbits @ 0x01C;
[; ;pic16f877a.h: 551: extern volatile unsigned char CCP2CON @ 0x01D;
[; ;pic16f877a.h: 553: extern volatile union {
[; ;pic16f877a.h: 554: struct {
[; ;pic16f877a.h: 555: unsigned CCP2M :4;
[; ;pic16f877a.h: 556: unsigned CCP2Y :1;
[; ;pic16f877a.h: 557: unsigned CCP2X :1;
[; ;pic16f877a.h: 558: };
[; ;pic16f877a.h: 559: struct {
[; ;pic16f877a.h: 560: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 561: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 562: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 563: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 564: };
[; ;pic16f877a.h: 565: } CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 568: extern volatile unsigned char ADRESH @ 0x01E;
[; ;pic16f877a.h: 570: extern volatile union {
[; ;pic16f877a.h: 571: struct {
[; ;pic16f877a.h: 572: unsigned ADRESH :8;
[; ;pic16f877a.h: 573: };
[; ;pic16f877a.h: 574: } ADRESHbits @ 0x01E;
[; ;pic16f877a.h: 577: extern volatile unsigned char ADCON0 @ 0x01F;
[; ;pic16f877a.h: 579: extern volatile union {
[; ;pic16f877a.h: 580: struct {
[; ;pic16f877a.h: 581: unsigned ADON :1;
[; ;pic16f877a.h: 582: unsigned :1;
[; ;pic16f877a.h: 583: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 584: unsigned CHS :3;
[; ;pic16f877a.h: 585: unsigned ADCS :2;
[; ;pic16f877a.h: 586: };
[; ;pic16f877a.h: 587: struct {
[; ;pic16f877a.h: 588: unsigned ADON :1;
[; ;pic16f877a.h: 589: unsigned :1;
[; ;pic16f877a.h: 590: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 591: unsigned CHS :3;
[; ;pic16f877a.h: 592: unsigned ADCS :2;
[; ;pic16f877a.h: 593: };
[; ;pic16f877a.h: 594: struct {
[; ;pic16f877a.h: 595: unsigned :2;
[; ;pic16f877a.h: 596: unsigned GO :1;
[; ;pic16f877a.h: 597: unsigned CHS0 :1;
[; ;pic16f877a.h: 598: unsigned CHS1 :1;
[; ;pic16f877a.h: 599: unsigned CHS2 :1;
[; ;pic16f877a.h: 600: unsigned ADCS0 :1;
[; ;pic16f877a.h: 601: unsigned ADCS1 :1;
[; ;pic16f877a.h: 602: };
[; ;pic16f877a.h: 603: struct {
[; ;pic16f877a.h: 604: unsigned :2;
[; ;pic16f877a.h: 605: unsigned nDONE :1;
[; ;pic16f877a.h: 606: };
[; ;pic16f877a.h: 607: struct {
[; ;pic16f877a.h: 608: unsigned :2;
[; ;pic16f877a.h: 609: unsigned GO_DONE :1;
[; ;pic16f877a.h: 610: };
[; ;pic16f877a.h: 611: } ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 614: extern volatile unsigned char OPTION_REG @ 0x081;
[; ;pic16f877a.h: 616: extern volatile union {
[; ;pic16f877a.h: 617: struct {
[; ;pic16f877a.h: 618: unsigned PS :3;
[; ;pic16f877a.h: 619: unsigned PSA :1;
[; ;pic16f877a.h: 620: unsigned T0SE :1;
[; ;pic16f877a.h: 621: unsigned T0CS :1;
[; ;pic16f877a.h: 622: unsigned INTEDG :1;
[; ;pic16f877a.h: 623: unsigned nRBPU :1;
[; ;pic16f877a.h: 624: };
[; ;pic16f877a.h: 625: struct {
[; ;pic16f877a.h: 626: unsigned PS0 :1;
[; ;pic16f877a.h: 627: unsigned PS1 :1;
[; ;pic16f877a.h: 628: unsigned PS2 :1;
[; ;pic16f877a.h: 629: };
[; ;pic16f877a.h: 630: } OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 633: extern volatile unsigned char TRISA @ 0x085;
[; ;pic16f877a.h: 635: extern volatile union {
[; ;pic16f877a.h: 636: struct {
[; ;pic16f877a.h: 637: unsigned TRISA0 :1;
[; ;pic16f877a.h: 638: unsigned TRISA1 :1;
[; ;pic16f877a.h: 639: unsigned TRISA2 :1;
[; ;pic16f877a.h: 640: unsigned TRISA3 :1;
[; ;pic16f877a.h: 641: unsigned TRISA4 :1;
[; ;pic16f877a.h: 642: unsigned TRISA5 :1;
[; ;pic16f877a.h: 643: };
[; ;pic16f877a.h: 644: struct {
[; ;pic16f877a.h: 645: unsigned TRISA :8;
[; ;pic16f877a.h: 646: };
[; ;pic16f877a.h: 647: } TRISAbits @ 0x085;
[; ;pic16f877a.h: 650: extern volatile unsigned char TRISB @ 0x086;
[; ;pic16f877a.h: 652: extern volatile union {
[; ;pic16f877a.h: 653: struct {
[; ;pic16f877a.h: 654: unsigned TRISB0 :1;
[; ;pic16f877a.h: 655: unsigned TRISB1 :1;
[; ;pic16f877a.h: 656: unsigned TRISB2 :1;
[; ;pic16f877a.h: 657: unsigned TRISB3 :1;
[; ;pic16f877a.h: 658: unsigned TRISB4 :1;
[; ;pic16f877a.h: 659: unsigned TRISB5 :1;
[; ;pic16f877a.h: 660: unsigned TRISB6 :1;
[; ;pic16f877a.h: 661: unsigned TRISB7 :1;
[; ;pic16f877a.h: 662: };
[; ;pic16f877a.h: 663: struct {
[; ;pic16f877a.h: 664: unsigned TRISB :8;
[; ;pic16f877a.h: 665: };
[; ;pic16f877a.h: 666: } TRISBbits @ 0x086;
[; ;pic16f877a.h: 669: extern volatile unsigned char TRISC @ 0x087;
[; ;pic16f877a.h: 671: extern volatile union {
[; ;pic16f877a.h: 672: struct {
[; ;pic16f877a.h: 673: unsigned TRISC0 :1;
[; ;pic16f877a.h: 674: unsigned TRISC1 :1;
[; ;pic16f877a.h: 675: unsigned TRISC2 :1;
[; ;pic16f877a.h: 676: unsigned TRISC3 :1;
[; ;pic16f877a.h: 677: unsigned TRISC4 :1;
[; ;pic16f877a.h: 678: unsigned TRISC5 :1;
[; ;pic16f877a.h: 679: unsigned TRISC6 :1;
[; ;pic16f877a.h: 680: unsigned TRISC7 :1;
[; ;pic16f877a.h: 681: };
[; ;pic16f877a.h: 682: struct {
[; ;pic16f877a.h: 683: unsigned TRISC :8;
[; ;pic16f877a.h: 684: };
[; ;pic16f877a.h: 685: } TRISCbits @ 0x087;
[; ;pic16f877a.h: 688: extern volatile unsigned char TRISD @ 0x088;
[; ;pic16f877a.h: 690: extern volatile union {
[; ;pic16f877a.h: 691: struct {
[; ;pic16f877a.h: 692: unsigned TRISD0 :1;
[; ;pic16f877a.h: 693: unsigned TRISD1 :1;
[; ;pic16f877a.h: 694: unsigned TRISD2 :1;
[; ;pic16f877a.h: 695: unsigned TRISD3 :1;
[; ;pic16f877a.h: 696: unsigned TRISD4 :1;
[; ;pic16f877a.h: 697: unsigned TRISD5 :1;
[; ;pic16f877a.h: 698: unsigned TRISD6 :1;
[; ;pic16f877a.h: 699: unsigned TRISD7 :1;
[; ;pic16f877a.h: 700: };
[; ;pic16f877a.h: 701: struct {
[; ;pic16f877a.h: 702: unsigned TRISD :8;
[; ;pic16f877a.h: 703: };
[; ;pic16f877a.h: 704: } TRISDbits @ 0x088;
[; ;pic16f877a.h: 707: extern volatile unsigned char TRISE @ 0x089;
[; ;pic16f877a.h: 709: extern volatile union {
[; ;pic16f877a.h: 710: struct {
[; ;pic16f877a.h: 711: unsigned TRISE0 :1;
[; ;pic16f877a.h: 712: unsigned TRISE1 :1;
[; ;pic16f877a.h: 713: unsigned TRISE2 :1;
[; ;pic16f877a.h: 714: unsigned :1;
[; ;pic16f877a.h: 715: unsigned PSPMODE :1;
[; ;pic16f877a.h: 716: unsigned IBOV :1;
[; ;pic16f877a.h: 717: unsigned OBF :1;
[; ;pic16f877a.h: 718: unsigned IBF :1;
[; ;pic16f877a.h: 719: };
[; ;pic16f877a.h: 720: struct {
[; ;pic16f877a.h: 721: unsigned TRISE :8;
[; ;pic16f877a.h: 722: };
[; ;pic16f877a.h: 723: } TRISEbits @ 0x089;
[; ;pic16f877a.h: 726: extern volatile unsigned char PIE1 @ 0x08C;
[; ;pic16f877a.h: 728: extern volatile union {
[; ;pic16f877a.h: 729: struct {
[; ;pic16f877a.h: 730: unsigned TMR1IE :1;
[; ;pic16f877a.h: 731: unsigned TMR2IE :1;
[; ;pic16f877a.h: 732: unsigned CCP1IE :1;
[; ;pic16f877a.h: 733: unsigned SSPIE :1;
[; ;pic16f877a.h: 734: unsigned TXIE :1;
[; ;pic16f877a.h: 735: unsigned RCIE :1;
[; ;pic16f877a.h: 736: unsigned ADIE :1;
[; ;pic16f877a.h: 737: unsigned PSPIE :1;
[; ;pic16f877a.h: 738: };
[; ;pic16f877a.h: 739: } PIE1bits @ 0x08C;
[; ;pic16f877a.h: 742: extern volatile unsigned char PIE2 @ 0x08D;
[; ;pic16f877a.h: 744: extern volatile union {
[; ;pic16f877a.h: 745: struct {
[; ;pic16f877a.h: 746: unsigned CCP2IE :1;
[; ;pic16f877a.h: 747: unsigned :2;
[; ;pic16f877a.h: 748: unsigned BCLIE :1;
[; ;pic16f877a.h: 749: unsigned EEIE :1;
[; ;pic16f877a.h: 750: unsigned :1;
[; ;pic16f877a.h: 751: unsigned CMIE :1;
[; ;pic16f877a.h: 752: };
[; ;pic16f877a.h: 753: } PIE2bits @ 0x08D;
[; ;pic16f877a.h: 756: extern volatile unsigned char PCON @ 0x08E;
[; ;pic16f877a.h: 758: extern volatile union {
[; ;pic16f877a.h: 759: struct {
[; ;pic16f877a.h: 760: unsigned nBOR :1;
[; ;pic16f877a.h: 761: unsigned nPOR :1;
[; ;pic16f877a.h: 762: };
[; ;pic16f877a.h: 763: struct {
[; ;pic16f877a.h: 764: unsigned nBO :1;
[; ;pic16f877a.h: 765: };
[; ;pic16f877a.h: 766: } PCONbits @ 0x08E;
[; ;pic16f877a.h: 769: extern volatile unsigned char SSPCON2 @ 0x091;
[; ;pic16f877a.h: 771: extern volatile union {
[; ;pic16f877a.h: 772: struct {
[; ;pic16f877a.h: 773: unsigned SEN :1;
[; ;pic16f877a.h: 774: unsigned RSEN :1;
[; ;pic16f877a.h: 775: unsigned PEN :1;
[; ;pic16f877a.h: 776: unsigned RCEN :1;
[; ;pic16f877a.h: 777: unsigned ACKEN :1;
[; ;pic16f877a.h: 778: unsigned ACKDT :1;
[; ;pic16f877a.h: 779: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 780: unsigned GCEN :1;
[; ;pic16f877a.h: 781: };
[; ;pic16f877a.h: 782: } SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 785: extern volatile unsigned char PR2 @ 0x092;
[; ;pic16f877a.h: 787: extern volatile union {
[; ;pic16f877a.h: 788: struct {
[; ;pic16f877a.h: 789: unsigned PR2 :8;
[; ;pic16f877a.h: 790: };
[; ;pic16f877a.h: 791: } PR2bits @ 0x092;
[; ;pic16f877a.h: 794: extern volatile unsigned char SSPADD @ 0x093;
[; ;pic16f877a.h: 796: extern volatile union {
[; ;pic16f877a.h: 797: struct {
[; ;pic16f877a.h: 798: unsigned SSPADD :8;
[; ;pic16f877a.h: 799: };
[; ;pic16f877a.h: 800: } SSPADDbits @ 0x093;
[; ;pic16f877a.h: 803: extern volatile unsigned char SSPSTAT @ 0x094;
[; ;pic16f877a.h: 805: extern volatile union {
[; ;pic16f877a.h: 806: struct {
[; ;pic16f877a.h: 807: unsigned BF :1;
[; ;pic16f877a.h: 808: unsigned UA :1;
[; ;pic16f877a.h: 809: unsigned R_nW :1;
[; ;pic16f877a.h: 810: unsigned S :1;
[; ;pic16f877a.h: 811: unsigned P :1;
[; ;pic16f877a.h: 812: unsigned D_nA :1;
[; ;pic16f877a.h: 813: unsigned CKE :1;
[; ;pic16f877a.h: 814: unsigned SMP :1;
[; ;pic16f877a.h: 815: };
[; ;pic16f877a.h: 816: struct {
[; ;pic16f877a.h: 817: unsigned BF :1;
[; ;pic16f877a.h: 818: unsigned UA :1;
[; ;pic16f877a.h: 819: unsigned R_nW :1;
[; ;pic16f877a.h: 820: unsigned S :1;
[; ;pic16f877a.h: 821: unsigned P :1;
[; ;pic16f877a.h: 822: unsigned D_nA :1;
[; ;pic16f877a.h: 823: unsigned CKE :1;
[; ;pic16f877a.h: 824: unsigned SMP :1;
[; ;pic16f877a.h: 825: };
[; ;pic16f877a.h: 826: struct {
[; ;pic16f877a.h: 827: unsigned :2;
[; ;pic16f877a.h: 828: unsigned R :1;
[; ;pic16f877a.h: 829: unsigned :2;
[; ;pic16f877a.h: 830: unsigned D :1;
[; ;pic16f877a.h: 831: };
[; ;pic16f877a.h: 832: struct {
[; ;pic16f877a.h: 833: unsigned :2;
[; ;pic16f877a.h: 834: unsigned I2C_READ :1;
[; ;pic16f877a.h: 835: unsigned I2C_START :1;
[; ;pic16f877a.h: 836: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 837: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 838: };
[; ;pic16f877a.h: 839: struct {
[; ;pic16f877a.h: 840: unsigned :2;
[; ;pic16f877a.h: 841: unsigned nW :1;
[; ;pic16f877a.h: 842: unsigned :2;
[; ;pic16f877a.h: 843: unsigned nA :1;
[; ;pic16f877a.h: 844: };
[; ;pic16f877a.h: 845: struct {
[; ;pic16f877a.h: 846: unsigned :2;
[; ;pic16f877a.h: 847: unsigned nWRITE :1;
[; ;pic16f877a.h: 848: unsigned :2;
[; ;pic16f877a.h: 849: unsigned nADDRESS :1;
[; ;pic16f877a.h: 850: };
[; ;pic16f877a.h: 851: struct {
[; ;pic16f877a.h: 852: unsigned :2;
[; ;pic16f877a.h: 853: unsigned R_W :1;
[; ;pic16f877a.h: 854: unsigned :2;
[; ;pic16f877a.h: 855: unsigned D_A :1;
[; ;pic16f877a.h: 856: };
[; ;pic16f877a.h: 857: struct {
[; ;pic16f877a.h: 858: unsigned :2;
[; ;pic16f877a.h: 859: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 860: unsigned :2;
[; ;pic16f877a.h: 861: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 862: };
[; ;pic16f877a.h: 863: } SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 866: extern volatile unsigned char TXSTA @ 0x098;
[; ;pic16f877a.h: 868: extern volatile union {
[; ;pic16f877a.h: 869: struct {
[; ;pic16f877a.h: 870: unsigned TX9D :1;
[; ;pic16f877a.h: 871: unsigned TRMT :1;
[; ;pic16f877a.h: 872: unsigned BRGH :1;
[; ;pic16f877a.h: 873: unsigned :1;
[; ;pic16f877a.h: 874: unsigned SYNC :1;
[; ;pic16f877a.h: 875: unsigned TXEN :1;
[; ;pic16f877a.h: 876: unsigned TX9 :1;
[; ;pic16f877a.h: 877: unsigned CSRC :1;
[; ;pic16f877a.h: 878: };
[; ;pic16f877a.h: 879: struct {
[; ;pic16f877a.h: 880: unsigned TXD8 :1;
[; ;pic16f877a.h: 881: unsigned :5;
[; ;pic16f877a.h: 882: unsigned nTX8 :1;
[; ;pic16f877a.h: 883: };
[; ;pic16f877a.h: 884: struct {
[; ;pic16f877a.h: 885: unsigned :6;
[; ;pic16f877a.h: 886: unsigned TX8_9 :1;
[; ;pic16f877a.h: 887: };
[; ;pic16f877a.h: 888: } TXSTAbits @ 0x098;
[; ;pic16f877a.h: 891: extern volatile unsigned char SPBRG @ 0x099;
[; ;pic16f877a.h: 893: extern volatile union {
[; ;pic16f877a.h: 894: struct {
[; ;pic16f877a.h: 895: unsigned SPBRG :8;
[; ;pic16f877a.h: 896: };
[; ;pic16f877a.h: 897: } SPBRGbits @ 0x099;
[; ;pic16f877a.h: 900: extern volatile unsigned char CMCON @ 0x09C;
[; ;pic16f877a.h: 902: extern volatile union {
[; ;pic16f877a.h: 903: struct {
[; ;pic16f877a.h: 904: unsigned CM :3;
[; ;pic16f877a.h: 905: unsigned CIS :1;
[; ;pic16f877a.h: 906: unsigned C1INV :1;
[; ;pic16f877a.h: 907: unsigned C2INV :1;
[; ;pic16f877a.h: 908: unsigned C1OUT :1;
[; ;pic16f877a.h: 909: unsigned C2OUT :1;
[; ;pic16f877a.h: 910: };
[; ;pic16f877a.h: 911: struct {
[; ;pic16f877a.h: 912: unsigned CM0 :1;
[; ;pic16f877a.h: 913: unsigned CM1 :1;
[; ;pic16f877a.h: 914: unsigned CM2 :1;
[; ;pic16f877a.h: 915: };
[; ;pic16f877a.h: 916: } CMCONbits @ 0x09C;
[; ;pic16f877a.h: 919: extern volatile unsigned char CVRCON @ 0x09D;
[; ;pic16f877a.h: 921: extern volatile union {
[; ;pic16f877a.h: 922: struct {
[; ;pic16f877a.h: 923: unsigned CVR :4;
[; ;pic16f877a.h: 924: unsigned :1;
[; ;pic16f877a.h: 925: unsigned CVRR :1;
[; ;pic16f877a.h: 926: unsigned CVROE :1;
[; ;pic16f877a.h: 927: unsigned CVREN :1;
[; ;pic16f877a.h: 928: };
[; ;pic16f877a.h: 929: struct {
[; ;pic16f877a.h: 930: unsigned CVR0 :1;
[; ;pic16f877a.h: 931: unsigned CVR1 :1;
[; ;pic16f877a.h: 932: unsigned CVR2 :1;
[; ;pic16f877a.h: 933: unsigned CVR3 :1;
[; ;pic16f877a.h: 934: };
[; ;pic16f877a.h: 935: } CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 938: extern volatile unsigned char ADRESL @ 0x09E;
[; ;pic16f877a.h: 940: extern volatile union {
[; ;pic16f877a.h: 941: struct {
[; ;pic16f877a.h: 942: unsigned ADRESL :8;
[; ;pic16f877a.h: 943: };
[; ;pic16f877a.h: 944: } ADRESLbits @ 0x09E;
[; ;pic16f877a.h: 947: extern volatile unsigned char ADCON1 @ 0x09F;
[; ;pic16f877a.h: 949: extern volatile union {
[; ;pic16f877a.h: 950: struct {
[; ;pic16f877a.h: 951: unsigned PCFG :4;
[; ;pic16f877a.h: 952: unsigned :2;
[; ;pic16f877a.h: 953: unsigned ADCS2 :1;
[; ;pic16f877a.h: 954: unsigned ADFM :1;
[; ;pic16f877a.h: 955: };
[; ;pic16f877a.h: 956: struct {
[; ;pic16f877a.h: 957: unsigned PCFG0 :1;
[; ;pic16f877a.h: 958: unsigned PCFG1 :1;
[; ;pic16f877a.h: 959: unsigned PCFG2 :1;
[; ;pic16f877a.h: 960: unsigned PCFG3 :1;
[; ;pic16f877a.h: 961: };
[; ;pic16f877a.h: 962: } ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 965: extern volatile unsigned char EEDATA @ 0x10C;
[; ;pic16f877a.h: 967: extern volatile union {
[; ;pic16f877a.h: 968: struct {
[; ;pic16f877a.h: 969: unsigned EEDATA :8;
[; ;pic16f877a.h: 970: };
[; ;pic16f877a.h: 971: } EEDATAbits @ 0x10C;
[; ;pic16f877a.h: 974: extern volatile unsigned char EEADR @ 0x10D;
[; ;pic16f877a.h: 976: extern volatile union {
[; ;pic16f877a.h: 977: struct {
[; ;pic16f877a.h: 978: unsigned EEADR :8;
[; ;pic16f877a.h: 979: };
[; ;pic16f877a.h: 980: } EEADRbits @ 0x10D;
[; ;pic16f877a.h: 983: extern volatile unsigned char EEDATH @ 0x10E;
[; ;pic16f877a.h: 985: extern volatile union {
[; ;pic16f877a.h: 986: struct {
[; ;pic16f877a.h: 987: unsigned EEDATH :6;
[; ;pic16f877a.h: 988: };
[; ;pic16f877a.h: 989: } EEDATHbits @ 0x10E;
[; ;pic16f877a.h: 992: extern volatile unsigned char EEADRH @ 0x10F;
[; ;pic16f877a.h: 994: extern volatile union {
[; ;pic16f877a.h: 995: struct {
[; ;pic16f877a.h: 996: unsigned EEADRH :5;
[; ;pic16f877a.h: 997: };
[; ;pic16f877a.h: 998: } EEADRHbits @ 0x10F;
[; ;pic16f877a.h: 1001: extern volatile unsigned char EECON1 @ 0x18C;
[; ;pic16f877a.h: 1003: extern volatile union {
[; ;pic16f877a.h: 1004: struct {
[; ;pic16f877a.h: 1005: unsigned RD :1;
[; ;pic16f877a.h: 1006: unsigned WR :1;
[; ;pic16f877a.h: 1007: unsigned WREN :1;
[; ;pic16f877a.h: 1008: unsigned WRERR :1;
[; ;pic16f877a.h: 1009: unsigned :3;
[; ;pic16f877a.h: 1010: unsigned EEPGD :1;
[; ;pic16f877a.h: 1011: };
[; ;pic16f877a.h: 1012: } EECON1bits @ 0x18C;
[; ;pic16f877a.h: 1015: extern volatile unsigned char EECON2 @ 0x18D;
[; ;pic16f877a.h: 1017: extern volatile union {
[; ;pic16f877a.h: 1018: struct {
[; ;pic16f877a.h: 1019: unsigned EECON2 :8;
[; ;pic16f877a.h: 1020: };
[; ;pic16f877a.h: 1021: } EECON2bits @ 0x18D;
[; ;pic16f877a.h: 1027: extern volatile bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 1028: extern volatile bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 1029: extern volatile bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 1030: extern volatile bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 1031: extern volatile bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 1032: extern volatile bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 1033: extern volatile bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 1034: extern volatile bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 1035: extern volatile bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 1036: extern volatile bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 1037: extern volatile bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 1038: extern volatile bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 1039: extern volatile bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 1040: extern volatile bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 1041: extern volatile bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 1042: extern volatile bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 1043: extern volatile bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 1044: extern volatile bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 1045: extern volatile bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 1046: extern volatile bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 1047: extern volatile bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 1048: extern volatile bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 1049: extern volatile bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 1050: extern volatile bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 1051: extern volatile bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 1052: extern volatile bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 1053: extern volatile bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 1054: extern volatile bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 1055: extern volatile bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 1056: extern volatile bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 1057: extern volatile bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 1058: extern volatile bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 1059: extern volatile bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 1060: extern volatile bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 1061: extern volatile bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 1062: extern volatile bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 1063: extern volatile bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 1064: extern volatile bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 1065: extern volatile bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 1066: extern volatile bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 1067: extern volatile bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 1068: extern volatile bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 1069: extern volatile bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 1070: extern volatile bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 1071: extern volatile bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 1072: extern volatile bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 1073: extern volatile bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 1074: extern volatile bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 1075: extern volatile bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 1076: extern volatile bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 1077: extern volatile bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 1078: extern volatile bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 1079: extern volatile bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 1080: extern volatile bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 1081: extern volatile bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 1082: extern volatile bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 1083: extern volatile bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1084: extern volatile bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 1085: extern volatile bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1086: extern volatile bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1087: extern volatile bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 1088: extern volatile bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 1089: extern volatile bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 1090: extern volatile bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 1091: extern volatile bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 1092: extern volatile bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 1093: extern volatile bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1094: extern volatile bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1095: extern volatile bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1096: extern volatile bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1097: extern volatile bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1098: extern volatile bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 1099: extern volatile bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 1100: extern volatile bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 1101: extern volatile bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 1102: extern volatile bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 1103: extern volatile bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 1104: extern volatile bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 1105: extern volatile bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 1106: extern volatile bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 1107: extern volatile bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 1108: extern volatile bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 1109: extern volatile bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 1110: extern volatile bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 1111: extern volatile bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 1112: extern volatile bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 1113: extern volatile bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 1114: extern volatile bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 1115: extern volatile bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 1116: extern volatile bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 1117: extern volatile bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 1118: extern volatile bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 1119: extern volatile bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 1120: extern volatile bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 1121: extern volatile bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 1122: extern volatile bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 1123: extern volatile bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 1124: extern volatile bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 1125: extern volatile bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 1126: extern volatile bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 1127: extern volatile bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 1128: extern volatile bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 1129: extern volatile bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 1130: extern volatile bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 1131: extern volatile bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 1132: extern volatile bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 1133: extern volatile bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 1134: extern volatile bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 1135: extern volatile bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 1136: extern volatile bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 1137: extern volatile bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 1138: extern volatile bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 1139: extern volatile bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 1140: extern volatile bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 1141: extern volatile bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 1142: extern volatile bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 1143: extern volatile bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 1144: extern volatile bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 1145: extern volatile bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1146: extern volatile bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1147: extern volatile bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 1148: extern volatile bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 1149: extern volatile bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 1150: extern volatile bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 1151: extern volatile bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 1152: extern volatile bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 1153: extern volatile bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 1154: extern volatile bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 1155: extern volatile bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 1156: extern volatile bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 1157: extern volatile bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 1158: extern volatile bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 1159: extern volatile bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 1160: extern volatile bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 1161: extern volatile bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 1162: extern volatile bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 1163: extern volatile bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1164: extern volatile bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 1165: extern volatile bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 1166: extern volatile bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 1167: extern volatile bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1168: extern volatile bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 1169: extern volatile bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1170: extern volatile bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1171: extern volatile bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 1172: extern volatile bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 1173: extern volatile bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 1174: extern volatile bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 1175: extern volatile bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 1176: extern volatile bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 1177: extern volatile bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 1178: extern volatile bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 1179: extern volatile bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 1180: extern volatile bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 1181: extern volatile bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 1182: extern volatile bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 1183: extern volatile bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 1184: extern volatile bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 1185: extern volatile bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 1186: extern volatile bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 1187: extern volatile bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 1188: extern volatile bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 1189: extern volatile bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 1190: extern volatile bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1191: extern volatile bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 1192: extern volatile bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1193: extern volatile bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 1194: extern volatile bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 1195: extern volatile bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 1196: extern volatile bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 1197: extern volatile bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 1198: extern volatile bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 1199: extern volatile bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 1200: extern volatile bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 1201: extern volatile bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 1202: extern volatile bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 1203: extern volatile bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 1204: extern volatile bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 1205: extern volatile bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 1206: extern volatile bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 1207: extern volatile bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 1208: extern volatile bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 1209: extern volatile bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 1210: extern volatile bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 1211: extern volatile bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 1212: extern volatile bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 1213: extern volatile bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 1214: extern volatile bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 1215: extern volatile bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 1216: extern volatile bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 1217: extern volatile bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 1218: extern volatile bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 1219: extern volatile bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 1220: extern volatile bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 1221: extern volatile bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 1222: extern volatile bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 1223: extern volatile bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 1224: extern volatile bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 1225: extern volatile bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 1226: extern volatile bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 1227: extern volatile bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 1228: extern volatile bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 1229: extern volatile bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 1230: extern volatile bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 1231: extern volatile bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 1232: extern volatile bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 1233: extern volatile bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 1234: extern volatile bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 1235: extern volatile bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 1236: extern volatile bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 1237: extern volatile bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 1238: extern volatile bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 1239: extern volatile bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 1240: extern volatile bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 1241: extern volatile bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 1242: extern volatile bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1243: extern volatile bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1244: extern volatile bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 1245: extern volatile bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 1246: extern volatile bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 1247: extern volatile bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 1248: extern volatile bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 1249: extern volatile bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 1250: extern volatile bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 1251: extern volatile bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 1252: extern volatile bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 1253: extern volatile bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 1254: extern volatile bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 1255: extern volatile bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1256: extern volatile bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 1257: extern volatile bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 1258: extern volatile bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 1259: extern volatile bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 1260: extern volatile bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 1261: extern volatile bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 1262: extern volatile bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 1263: extern volatile bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 1264: extern volatile bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 1265: extern volatile bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 1266: extern volatile bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 1267: extern volatile bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 1268: extern volatile bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void _nop(void);
[; ;pic.h: 82: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 156: extern void _delay(unsigned long);
"20 PR9B.c
[; ;PR9B.c: 20: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3F32");
[; <" 	psect config,class=CONFIG,delta=2 ;# ">
[; <" 	dw 0x3F32 ;# ">
[; ;PR9B.c: 36: void delay(unsigned long data);
[; ;PR9B.c: 37: void send_config(unsigned char data);
[; ;PR9B.c: 38: void send_char(unsigned char data);
[; ;PR9B.c: 39: void e_pulse(void);
[; ;PR9B.c: 40: void lcd_goto(unsigned char data);
[; ;PR9B.c: 41: void lcd_clr(void);
[; ;PR9B.c: 42: void send_string(const char *s);
[; ;PR9B.c: 43: void clearrow1(void);
[; ;PR9B.c: 44: void clearrow2(void);
[; ;PR9B.c: 45: void clearrow3(void);
[; ;PR9B.c: 46: void clearrow4(void);
[; ;PR9B.c: 47: void scancolumn1(void);
[; ;PR9B.c: 48: void scancolumn2(void);
[; ;PR9B.c: 49: void scancolumn3(void);
[; ;PR9B.c: 50: void scancolumn4(void);
[; ;PR9B.c: 51: void beep_once(void);
[; ;PR9B.c: 52: void beep_twice(void);
"57
[v _password_count `uc ~T0 1 e ]
[i _password_count
-> -> 0 `i `uc
]
[; ;PR9B.c: 57: unsigned char password_count=0;
"58
[v _keyin_char `uc ~T0 -> 6 `i e ]
[; ;PR9B.c: 58: unsigned char keyin_char[6];
"59
[v _stalled_char `uc ~T0 -> 6 `i e ]
[i _stalled_char
:U ..
-> 49 `c
-> 50 `c
-> 51 `c
-> 52 `c
-> 53 `c
-> 54 `c
..
]
[; ;PR9B.c: 59: unsigned char stalled_char[6]="123456";
"65
[v _main `(v ~T0 1 ef ]
{
[; ;PR9B.c: 64: void main(void)
[; ;PR9B.c: 65: {
[e :U _main ]
[f ]
[; ;PR9B.c: 66: ADCON1=0b00000110;
"66
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;PR9B.c: 67: TRISA=0b11001111;
"67
[e = _TRISA -> -> 207 `i `uc ]
[; ;PR9B.c: 68: TRISB=0b00000000;
"68
[e = _TRISB -> -> 0 `i `uc ]
[; ;PR9B.c: 69: TRISD=0b00000000;
"69
[e = _TRISD -> -> 0 `i `uc ]
[; ;PR9B.c: 70: TRISC=0b11110000;
"70
[e = _TRISC -> -> 240 `i `uc ]
[; ;PR9B.c: 71: TRISE=0b00000000;
"71
[e = _TRISE -> -> 0 `i `uc ]
[; ;PR9B.c: 73: PORTC=0;
"73
[e = _PORTC -> -> 0 `i `uc ]
[; ;PR9B.c: 74: PORTD=0;
"74
[e = _PORTD -> -> 0 `i `uc ]
[; ;PR9B.c: 75: RB1=0;
"75
[e = _RB1 -> -> 0 `i `b ]
[; ;PR9B.c: 76: RB2=0;
"76
[e = _RB2 -> -> 0 `i `b ]
[; ;PR9B.c: 77: RC2=0;
"77
[e = _RC2 -> -> 0 `i `b ]
[; ;PR9B.c: 78: RC3=0;
"78
[e = _RC3 -> -> 0 `i `b ]
[; ;PR9B.c: 80: send_config(0b00001001);
"80
[e ( _send_config (1 -> -> 9 `i `uc ]
[; ;PR9B.c: 81: send_config(0b00000010);
"81
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR9B.c: 82: send_config(0b00000110);
"82
[e ( _send_config (1 -> -> 6 `i `uc ]
[; ;PR9B.c: 83: send_config(0b00001100);
"83
[e ( _send_config (1 -> -> 12 `i `uc ]
[; ;PR9B.c: 84: send_config(0b00111000);
"84
[e ( _send_config (1 -> -> 56 `i `uc ]
[; ;PR9B.c: 86: lcd_clr();
"86
[e ( _lcd_clr ..  ]
[; ;PR9B.c: 87: delay(1000);
"87
[e ( _delay (1 -> -> -> 1000 `i `l `ul ]
[; ;PR9B.c: 88: lcd_goto(0);
"88
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR9B.c: 89: send_string("PLEASE ENTER");
"89
[e ( _send_string (1 :s 1C ]
[; ;PR9B.c: 90: lcd_goto(20);
"90
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR9B.c: 91: send_string("6-DIGIT PASSWORD");
"91
[e ( _send_string (1 :s 2C ]
[; ;PR9B.c: 94: while(1)
"94
[e :U 165 ]
[; ;PR9B.c: 95: {
"95
{
[; ;PR9B.c: 96: clearrow1();
"96
[e ( _clearrow1 ..  ]
[; ;PR9B.c: 97: scancolumn1();
"97
[e ( _scancolumn1 ..  ]
[; ;PR9B.c: 98: clearrow2();
"98
[e ( _clearrow2 ..  ]
[; ;PR9B.c: 99: scancolumn2();
"99
[e ( _scancolumn2 ..  ]
[; ;PR9B.c: 100: clearrow3();
"100
[e ( _clearrow3 ..  ]
[; ;PR9B.c: 101: scancolumn3();
"101
[e ( _scancolumn3 ..  ]
[; ;PR9B.c: 102: clearrow4();
"102
[e ( _clearrow4 ..  ]
[; ;PR9B.c: 103: scancolumn4();
"103
[e ( _scancolumn4 ..  ]
[; ;PR9B.c: 105: if(password_count==6)
"105
[e $ ! == -> _password_count `i -> 6 `i 167  ]
[; ;PR9B.c: 106: {
"106
{
[; ;PR9B.c: 107: password_count=0;
"107
[e = _password_count -> -> 0 `i `uc ]
[; ;PR9B.c: 108: if((keyin_char[0]==stalled_char[0])&&(keyin_char[1]==stalled_char[1])&&
[; ;PR9B.c: 109: (keyin_char[2]==stalled_char[2])&&(keyin_char[3]==stalled_char[3])&&
[; ;PR9B.c: 110: (keyin_char[4]==stalled_char[4])&&(keyin_char[5]==stalled_char[5]))
"110
[e $ ! && && && && && == -> *U + &U _keyin_char * -> -> -> 0 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 0 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i == -> *U + &U _keyin_char * -> -> -> 1 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 1 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i == -> *U + &U _keyin_char * -> -> -> 2 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 2 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i == -> *U + &U _keyin_char * -> -> -> 3 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 3 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i == -> *U + &U _keyin_char * -> -> -> 4 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 4 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i == -> *U + &U _keyin_char * -> -> -> 5 `i `ui `ux -> -> # *U &U _keyin_char `ui `ux `i -> *U + &U _stalled_char * -> -> -> 5 `i `ui `ux -> -> # *U &U _stalled_char `ui `ux `i 168  ]
[; ;PR9B.c: 111: {
"111
{
[; ;PR9B.c: 112: lcd_clr();
"112
[e ( _lcd_clr ..  ]
[; ;PR9B.c: 113: lcd_goto(0);
"113
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR9B.c: 114: send_string("SUCCESS!");
"114
[e ( _send_string (1 :s 3C ]
[; ;PR9B.c: 115: RC2=1;
"115
[e = _RC2 -> -> 1 `i `b ]
[; ;PR9B.c: 116: RB1=1;
"116
[e = _RB1 -> -> 1 `i `b ]
[; ;PR9B.c: 117: beep_once();
"117
[e ( _beep_once ..  ]
[; ;PR9B.c: 118: while(1);
"118
[e :U 170 ]
[e :U 169 ]
[e $U 170  ]
[e :U 171 ]
"119
}
[; ;PR9B.c: 119: }
[e $U 172  ]
"120
[e :U 168 ]
[; ;PR9B.c: 120: else
[; ;PR9B.c: 121: {
"121
{
[; ;PR9B.c: 122: lcd_clr();
"122
[e ( _lcd_clr ..  ]
[; ;PR9B.c: 123: lcd_goto(0);
"123
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR9B.c: 124: send_string("ERROR!");
"124
[e ( _send_string (1 :s 4C ]
[; ;PR9B.c: 125: RC3=1;
"125
[e = _RC3 -> -> 1 `i `b ]
[; ;PR9B.c: 126: beep_twice();
"126
[e ( _beep_twice ..  ]
[; ;PR9B.c: 127: while(1);
"127
[e :U 174 ]
[e :U 173 ]
[e $U 174  ]
[e :U 175 ]
"128
}
[e :U 172 ]
"129
}
[e :U 167 ]
"130
}
[e :U 164 ]
"94
[e $U 165  ]
[e :U 166 ]
[; ;PR9B.c: 128: }
[; ;PR9B.c: 129: }
[; ;PR9B.c: 130: }
[; ;PR9B.c: 131: }
"131
[e :UE 163 ]
}
"137
[v _clearrow1 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 136: void clearrow1(void)
[; ;PR9B.c: 137: {
[e :U _clearrow1 ]
[f ]
[; ;PR9B.c: 138: RE1=0;
"138
[e = _RE1 -> -> 0 `i `b ]
[; ;PR9B.c: 139: RE0=1;
"139
[e = _RE0 -> -> 1 `i `b ]
[; ;PR9B.c: 140: RA5=1;
"140
[e = _RA5 -> -> 1 `i `b ]
[; ;PR9B.c: 141: RA4=1;
"141
[e = _RA4 -> -> 1 `i `b ]
[; ;PR9B.c: 142: }
"142
[e :UE 176 ]
}
"145
[v _clearrow2 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 144: void clearrow2(void)
[; ;PR9B.c: 145: {
[e :U _clearrow2 ]
[f ]
[; ;PR9B.c: 146: RE1=1;
"146
[e = _RE1 -> -> 1 `i `b ]
[; ;PR9B.c: 147: RE0=0;
"147
[e = _RE0 -> -> 0 `i `b ]
[; ;PR9B.c: 148: RA5=1;
"148
[e = _RA5 -> -> 1 `i `b ]
[; ;PR9B.c: 149: RA4=1;
"149
[e = _RA4 -> -> 1 `i `b ]
[; ;PR9B.c: 150: }
"150
[e :UE 177 ]
}
"153
[v _clearrow3 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 152: void clearrow3(void)
[; ;PR9B.c: 153: {
[e :U _clearrow3 ]
[f ]
[; ;PR9B.c: 154: RE1=1;
"154
[e = _RE1 -> -> 1 `i `b ]
[; ;PR9B.c: 155: RE0=1;
"155
[e = _RE0 -> -> 1 `i `b ]
[; ;PR9B.c: 156: RA5=0;
"156
[e = _RA5 -> -> 0 `i `b ]
[; ;PR9B.c: 157: RA4=1;
"157
[e = _RA4 -> -> 1 `i `b ]
[; ;PR9B.c: 158: }
"158
[e :UE 178 ]
}
"161
[v _clearrow4 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 160: void clearrow4(void)
[; ;PR9B.c: 161: {
[e :U _clearrow4 ]
[f ]
[; ;PR9B.c: 162: RE1=1;
"162
[e = _RE1 -> -> 1 `i `b ]
[; ;PR9B.c: 163: RE0=1;
"163
[e = _RE0 -> -> 1 `i `b ]
[; ;PR9B.c: 164: RA5=1;
"164
[e = _RA5 -> -> 1 `i `b ]
[; ;PR9B.c: 165: RA4=0;
"165
[e = _RA4 -> -> 0 `i `b ]
[; ;PR9B.c: 166: }
"166
[e :UE 179 ]
}
"169
[v _scancolumn1 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 168: void scancolumn1(void)
[; ;PR9B.c: 169: {
[e :U _scancolumn1 ]
[f ]
[; ;PR9B.c: 170: if(RA0==0)
"170
[e $ ! == -> _RA0 `i -> 0 `i 181  ]
[; ;PR9B.c: 171: {
"171
{
[; ;PR9B.c: 172: while(RA0==0)continue;
"172
[e $U 182  ]
[e :U 183 ]
[e $U 182  ]
[e :U 182 ]
[e $ == -> _RA0 `i -> 0 `i 183  ]
[e :U 184 ]
[; ;PR9B.c: 173: if(password_count==0)lcd_clr();
"173
[e $ ! == -> _password_count `i -> 0 `i 185  ]
[e ( _lcd_clr ..  ]
[e :U 185 ]
[; ;PR9B.c: 174: lcd_goto(password_count);
"174
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 175: send_char('*');
"175
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 176: keyin_char[password_count]='1';
"176
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 49 `ui `uc ]
[; ;PR9B.c: 177: password_count+=1;
"177
[e =+ _password_count -> -> 1 `i `uc ]
"178
}
[; ;PR9B.c: 178: }
[e $U 186  ]
"179
[e :U 181 ]
[; ;PR9B.c: 179: else if(RA1==0)
[e $ ! == -> _RA1 `i -> 0 `i 187  ]
[; ;PR9B.c: 180: {
"180
{
[; ;PR9B.c: 181: while(RA1==0)continue;
"181
[e $U 188  ]
[e :U 189 ]
[e $U 188  ]
[e :U 188 ]
[e $ == -> _RA1 `i -> 0 `i 189  ]
[e :U 190 ]
[; ;PR9B.c: 182: if(password_count==0)lcd_clr();
"182
[e $ ! == -> _password_count `i -> 0 `i 191  ]
[e ( _lcd_clr ..  ]
[e :U 191 ]
[; ;PR9B.c: 183: lcd_goto(password_count);
"183
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 184: send_char('*');
"184
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 185: keyin_char[password_count]='2';
"185
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 50 `ui `uc ]
[; ;PR9B.c: 186: password_count+=1;
"186
[e =+ _password_count -> -> 1 `i `uc ]
"187
}
[; ;PR9B.c: 187: }
[e $U 192  ]
"188
[e :U 187 ]
[; ;PR9B.c: 188: else if(RA2==0)
[e $ ! == -> _RA2 `i -> 0 `i 193  ]
[; ;PR9B.c: 189: {
"189
{
[; ;PR9B.c: 190: while(RA2==0)continue;
"190
[e $U 194  ]
[e :U 195 ]
[e $U 194  ]
[e :U 194 ]
[e $ == -> _RA2 `i -> 0 `i 195  ]
[e :U 196 ]
[; ;PR9B.c: 191: if(password_count==0)lcd_clr();
"191
[e $ ! == -> _password_count `i -> 0 `i 197  ]
[e ( _lcd_clr ..  ]
[e :U 197 ]
[; ;PR9B.c: 192: lcd_goto(password_count);
"192
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 193: send_char('*');
"193
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 194: keyin_char[password_count]='3';
"194
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 51 `ui `uc ]
[; ;PR9B.c: 195: password_count+=1;
"195
[e =+ _password_count -> -> 1 `i `uc ]
"196
}
[; ;PR9B.c: 196: }
[e $U 198  ]
"197
[e :U 193 ]
[; ;PR9B.c: 197: else if(RA3==0)
[e $ ! == -> _RA3 `i -> 0 `i 199  ]
[; ;PR9B.c: 198: {
"198
{
[; ;PR9B.c: 199: while(RA3==0)continue;
"199
[e $U 200  ]
[e :U 201 ]
[e $U 200  ]
[e :U 200 ]
[e $ == -> _RA3 `i -> 0 `i 201  ]
[e :U 202 ]
[; ;PR9B.c: 200: if(password_count==0)lcd_clr();
"200
[e $ ! == -> _password_count `i -> 0 `i 203  ]
[e ( _lcd_clr ..  ]
[e :U 203 ]
[; ;PR9B.c: 201: lcd_goto(password_count);
"201
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 202: send_char('*');
"202
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 203: keyin_char[password_count]='A';
"203
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 65 `ui `uc ]
[; ;PR9B.c: 204: password_count+=1;
"204
[e =+ _password_count -> -> 1 `i `uc ]
"205
}
[e :U 199 ]
"206
[e :U 198 ]
[e :U 192 ]
[e :U 186 ]
[; ;PR9B.c: 205: }
[; ;PR9B.c: 206: }
[e :UE 180 ]
}
"209
[v _scancolumn2 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 208: void scancolumn2(void)
[; ;PR9B.c: 209: {
[e :U _scancolumn2 ]
[f ]
[; ;PR9B.c: 210: if(RA0==0)
"210
[e $ ! == -> _RA0 `i -> 0 `i 205  ]
[; ;PR9B.c: 211: {
"211
{
[; ;PR9B.c: 212: while(RA0==0)continue;
"212
[e $U 206  ]
[e :U 207 ]
[e $U 206  ]
[e :U 206 ]
[e $ == -> _RA0 `i -> 0 `i 207  ]
[e :U 208 ]
[; ;PR9B.c: 213: if(password_count==0)lcd_clr();
"213
[e $ ! == -> _password_count `i -> 0 `i 209  ]
[e ( _lcd_clr ..  ]
[e :U 209 ]
[; ;PR9B.c: 214: lcd_goto(password_count);
"214
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 215: send_char('*');
"215
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 216: keyin_char[password_count]='4';
"216
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 52 `ui `uc ]
[; ;PR9B.c: 217: password_count+=1;
"217
[e =+ _password_count -> -> 1 `i `uc ]
"218
}
[; ;PR9B.c: 218: }
[e $U 210  ]
"219
[e :U 205 ]
[; ;PR9B.c: 219: else if(RA1==0)
[e $ ! == -> _RA1 `i -> 0 `i 211  ]
[; ;PR9B.c: 220: {
"220
{
[; ;PR9B.c: 221: while(RA1==0)continue;
"221
[e $U 212  ]
[e :U 213 ]
[e $U 212  ]
[e :U 212 ]
[e $ == -> _RA1 `i -> 0 `i 213  ]
[e :U 214 ]
[; ;PR9B.c: 222: if(password_count==0)lcd_clr();
"222
[e $ ! == -> _password_count `i -> 0 `i 215  ]
[e ( _lcd_clr ..  ]
[e :U 215 ]
[; ;PR9B.c: 223: lcd_goto(password_count);
"223
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 224: send_char('*');
"224
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 225: keyin_char[password_count]='5';
"225
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 53 `ui `uc ]
[; ;PR9B.c: 226: password_count+=1;
"226
[e =+ _password_count -> -> 1 `i `uc ]
"227
}
[; ;PR9B.c: 227: }
[e $U 216  ]
"228
[e :U 211 ]
[; ;PR9B.c: 228: else if(RA2==0)
[e $ ! == -> _RA2 `i -> 0 `i 217  ]
[; ;PR9B.c: 229: {
"229
{
[; ;PR9B.c: 230: while(RA2==0)continue;
"230
[e $U 218  ]
[e :U 219 ]
[e $U 218  ]
[e :U 218 ]
[e $ == -> _RA2 `i -> 0 `i 219  ]
[e :U 220 ]
[; ;PR9B.c: 231: if(password_count==0)lcd_clr();
"231
[e $ ! == -> _password_count `i -> 0 `i 221  ]
[e ( _lcd_clr ..  ]
[e :U 221 ]
[; ;PR9B.c: 232: lcd_goto(password_count);
"232
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 233: send_char('*');
"233
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 234: keyin_char[password_count]='6';
"234
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 54 `ui `uc ]
[; ;PR9B.c: 235: password_count+=1;
"235
[e =+ _password_count -> -> 1 `i `uc ]
"236
}
[; ;PR9B.c: 236: }
[e $U 222  ]
"237
[e :U 217 ]
[; ;PR9B.c: 237: else if(RA3==0)
[e $ ! == -> _RA3 `i -> 0 `i 223  ]
[; ;PR9B.c: 238: {
"238
{
[; ;PR9B.c: 239: while(RA3==0)continue;
"239
[e $U 224  ]
[e :U 225 ]
[e $U 224  ]
[e :U 224 ]
[e $ == -> _RA3 `i -> 0 `i 225  ]
[e :U 226 ]
[; ;PR9B.c: 240: if(password_count==0)lcd_clr();
"240
[e $ ! == -> _password_count `i -> 0 `i 227  ]
[e ( _lcd_clr ..  ]
[e :U 227 ]
[; ;PR9B.c: 241: lcd_goto(password_count);
"241
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 242: send_char('*');
"242
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 243: keyin_char[password_count]='B';
"243
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 66 `ui `uc ]
[; ;PR9B.c: 244: password_count+=1;
"244
[e =+ _password_count -> -> 1 `i `uc ]
"245
}
[e :U 223 ]
"246
[e :U 222 ]
[e :U 216 ]
[e :U 210 ]
[; ;PR9B.c: 245: }
[; ;PR9B.c: 246: }
[e :UE 204 ]
}
"249
[v _scancolumn3 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 248: void scancolumn3(void)
[; ;PR9B.c: 249: {
[e :U _scancolumn3 ]
[f ]
[; ;PR9B.c: 250: if(RA0==0)
"250
[e $ ! == -> _RA0 `i -> 0 `i 229  ]
[; ;PR9B.c: 251: {
"251
{
[; ;PR9B.c: 252: while(RA0==0)continue;
"252
[e $U 230  ]
[e :U 231 ]
[e $U 230  ]
[e :U 230 ]
[e $ == -> _RA0 `i -> 0 `i 231  ]
[e :U 232 ]
[; ;PR9B.c: 253: if(password_count==0)lcd_clr();
"253
[e $ ! == -> _password_count `i -> 0 `i 233  ]
[e ( _lcd_clr ..  ]
[e :U 233 ]
[; ;PR9B.c: 254: lcd_goto(password_count);
"254
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 255: send_char('*');
"255
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 256: keyin_char[password_count]='7';
"256
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 55 `ui `uc ]
[; ;PR9B.c: 257: password_count+=1;
"257
[e =+ _password_count -> -> 1 `i `uc ]
"258
}
[; ;PR9B.c: 258: }
[e $U 234  ]
"259
[e :U 229 ]
[; ;PR9B.c: 259: else if(RA1==0)
[e $ ! == -> _RA1 `i -> 0 `i 235  ]
[; ;PR9B.c: 260: {
"260
{
[; ;PR9B.c: 261: while(RA1==0)continue;
"261
[e $U 236  ]
[e :U 237 ]
[e $U 236  ]
[e :U 236 ]
[e $ == -> _RA1 `i -> 0 `i 237  ]
[e :U 238 ]
[; ;PR9B.c: 262: if(password_count==0)lcd_clr();
"262
[e $ ! == -> _password_count `i -> 0 `i 239  ]
[e ( _lcd_clr ..  ]
[e :U 239 ]
[; ;PR9B.c: 263: lcd_goto(password_count);
"263
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 264: send_char('*');
"264
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 265: keyin_char[password_count]='8';
"265
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 56 `ui `uc ]
[; ;PR9B.c: 266: password_count+=1;
"266
[e =+ _password_count -> -> 1 `i `uc ]
"267
}
[; ;PR9B.c: 267: }
[e $U 240  ]
"268
[e :U 235 ]
[; ;PR9B.c: 268: else if(RA2==0)
[e $ ! == -> _RA2 `i -> 0 `i 241  ]
[; ;PR9B.c: 269: {
"269
{
[; ;PR9B.c: 270: while(RA2==0)continue;
"270
[e $U 242  ]
[e :U 243 ]
[e $U 242  ]
[e :U 242 ]
[e $ == -> _RA2 `i -> 0 `i 243  ]
[e :U 244 ]
[; ;PR9B.c: 271: if(password_count==0)lcd_clr();
"271
[e $ ! == -> _password_count `i -> 0 `i 245  ]
[e ( _lcd_clr ..  ]
[e :U 245 ]
[; ;PR9B.c: 272: lcd_goto(password_count);
"272
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 273: send_char('*');
"273
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 274: keyin_char[password_count]='9';
"274
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 57 `ui `uc ]
[; ;PR9B.c: 275: password_count+=1;
"275
[e =+ _password_count -> -> 1 `i `uc ]
"276
}
[; ;PR9B.c: 276: }
[e $U 246  ]
"277
[e :U 241 ]
[; ;PR9B.c: 277: else if(RA3==0)
[e $ ! == -> _RA3 `i -> 0 `i 247  ]
[; ;PR9B.c: 278: {
"278
{
[; ;PR9B.c: 279: while(RA3==0)continue;
"279
[e $U 248  ]
[e :U 249 ]
[e $U 248  ]
[e :U 248 ]
[e $ == -> _RA3 `i -> 0 `i 249  ]
[e :U 250 ]
[; ;PR9B.c: 280: if(password_count==0)lcd_clr();
"280
[e $ ! == -> _password_count `i -> 0 `i 251  ]
[e ( _lcd_clr ..  ]
[e :U 251 ]
[; ;PR9B.c: 281: lcd_goto(password_count);
"281
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 282: send_char('*');
"282
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 283: keyin_char[password_count]='C';
"283
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 67 `ui `uc ]
[; ;PR9B.c: 284: password_count+=1;
"284
[e =+ _password_count -> -> 1 `i `uc ]
"285
}
[e :U 247 ]
"286
[e :U 246 ]
[e :U 240 ]
[e :U 234 ]
[; ;PR9B.c: 285: }
[; ;PR9B.c: 286: }
[e :UE 228 ]
}
"289
[v _scancolumn4 `(v ~T0 1 ef ]
{
[; ;PR9B.c: 288: void scancolumn4(void)
[; ;PR9B.c: 289: {
[e :U _scancolumn4 ]
[f ]
[; ;PR9B.c: 290: if(RA0==0)
"290
[e $ ! == -> _RA0 `i -> 0 `i 253  ]
[; ;PR9B.c: 291: {
"291
{
[; ;PR9B.c: 292: while(RA0==0)continue;
"292
[e $U 254  ]
[e :U 255 ]
[e $U 254  ]
[e :U 254 ]
[e $ == -> _RA0 `i -> 0 `i 255  ]
[e :U 256 ]
[; ;PR9B.c: 293: if(password_count==0)lcd_clr();
"293
[e $ ! == -> _password_count `i -> 0 `i 257  ]
[e ( _lcd_clr ..  ]
[e :U 257 ]
[; ;PR9B.c: 294: lcd_goto(password_count);
"294
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 295: send_char('*');
"295
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 296: keyin_char[password_count]='*';
"296
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 42 `ui `uc ]
[; ;PR9B.c: 297: password_count+=1;
"297
[e =+ _password_count -> -> 1 `i `uc ]
"298
}
[; ;PR9B.c: 298: }
[e $U 258  ]
"299
[e :U 253 ]
[; ;PR9B.c: 299: else if(RA1==0)
[e $ ! == -> _RA1 `i -> 0 `i 259  ]
[; ;PR9B.c: 300: {
"300
{
[; ;PR9B.c: 301: while(RA1==0)continue;
"301
[e $U 260  ]
[e :U 261 ]
[e $U 260  ]
[e :U 260 ]
[e $ == -> _RA1 `i -> 0 `i 261  ]
[e :U 262 ]
[; ;PR9B.c: 302: if(password_count==0)lcd_clr();
"302
[e $ ! == -> _password_count `i -> 0 `i 263  ]
[e ( _lcd_clr ..  ]
[e :U 263 ]
[; ;PR9B.c: 303: lcd_goto(password_count);
"303
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 304: send_char('*');
"304
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 305: keyin_char[password_count]='0';
"305
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 48 `ui `uc ]
[; ;PR9B.c: 306: password_count+=1;
"306
[e =+ _password_count -> -> 1 `i `uc ]
"307
}
[; ;PR9B.c: 307: }
[e $U 264  ]
"308
[e :U 259 ]
[; ;PR9B.c: 308: else if(RA2==0)
[e $ ! == -> _RA2 `i -> 0 `i 265  ]
[; ;PR9B.c: 309: {
"309
{
[; ;PR9B.c: 310: while(RA2==0)continue;
"310
[e $U 266  ]
[e :U 267 ]
[e $U 266  ]
[e :U 266 ]
[e $ == -> _RA2 `i -> 0 `i 267  ]
[e :U 268 ]
[; ;PR9B.c: 311: if(password_count==0)lcd_clr();
"311
[e $ ! == -> _password_count `i -> 0 `i 269  ]
[e ( _lcd_clr ..  ]
[e :U 269 ]
[; ;PR9B.c: 312: lcd_goto(password_count);
"312
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 313: send_char('*');
"313
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 314: keyin_char[password_count]='#';
"314
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 35 `ui `uc ]
[; ;PR9B.c: 315: password_count+=1;
"315
[e =+ _password_count -> -> 1 `i `uc ]
"316
}
[; ;PR9B.c: 316: }
[e $U 270  ]
"317
[e :U 265 ]
[; ;PR9B.c: 317: else if(RA3==0)
[e $ ! == -> _RA3 `i -> 0 `i 271  ]
[; ;PR9B.c: 318: {
"318
{
[; ;PR9B.c: 319: while(RA3==0)continue;
"319
[e $U 272  ]
[e :U 273 ]
[e $U 272  ]
[e :U 272 ]
[e $ == -> _RA3 `i -> 0 `i 273  ]
[e :U 274 ]
[; ;PR9B.c: 320: if(password_count==0)lcd_clr();
"320
[e $ ! == -> _password_count `i -> 0 `i 275  ]
[e ( _lcd_clr ..  ]
[e :U 275 ]
[; ;PR9B.c: 321: lcd_goto(password_count);
"321
[e ( _lcd_goto (1 _password_count ]
[; ;PR9B.c: 322: send_char('*');
"322
[e ( _send_char (1 -> -> 42 `ui `uc ]
[; ;PR9B.c: 323: keyin_char[password_count]='D';
"323
[e = *U + &U _keyin_char * -> _password_count `ux -> -> # *U &U _keyin_char `ui `ux -> -> 68 `ui `uc ]
[; ;PR9B.c: 324: password_count+=1;
"324
[e =+ _password_count -> -> 1 `i `uc ]
"325
}
[e :U 271 ]
"326
[e :U 270 ]
[e :U 264 ]
[e :U 258 ]
[; ;PR9B.c: 325: }
[; ;PR9B.c: 326: }
[e :UE 252 ]
}
"332
[v _delay `(v ~T0 1 ef1`ul ]
{
[; ;PR9B.c: 331: void delay(unsigned long data)
[; ;PR9B.c: 332: {
[e :U _delay ]
[v _data `ul ~T0 1 r1 ]
[f ]
[; ;PR9B.c: 333: for( ;data>0;data-=1);
"333
{
[e $ > _data -> -> -> 0 `i `l `ul 277  ]
[e $U 278  ]
[e :U 277 ]
[e =- _data -> -> -> 1 `i `l `ul ]
[e $ > _data -> -> -> 0 `i `l `ul 277  ]
[e :U 278 ]
}
[; ;PR9B.c: 334: }
"334
[e :UE 276 ]
}
"337
[v _beep_once `(v ~T0 1 ef ]
{
[; ;PR9B.c: 336: void beep_once(void)
[; ;PR9B.c: 337: {
[e :U _beep_once ]
[f ]
[; ;PR9B.c: 338: RB2=1;
"338
[e = _RB2 -> -> 1 `i `b ]
[; ;PR9B.c: 339: delay(8000);
"339
[e ( _delay (1 -> -> -> 8000 `i `l `ul ]
[; ;PR9B.c: 340: RB2=0;
"340
[e = _RB2 -> -> 0 `i `b ]
[; ;PR9B.c: 341: }
"341
[e :UE 280 ]
}
"344
[v _beep_twice `(v ~T0 1 ef ]
{
[; ;PR9B.c: 343: void beep_twice(void)
[; ;PR9B.c: 344: {
[e :U _beep_twice ]
[f ]
[; ;PR9B.c: 345: RB2=1;
"345
[e = _RB2 -> -> 1 `i `b ]
[; ;PR9B.c: 346: delay(8000);
"346
[e ( _delay (1 -> -> -> 8000 `i `l `ul ]
[; ;PR9B.c: 347: RB2=0;
"347
[e = _RB2 -> -> 0 `i `b ]
[; ;PR9B.c: 348: delay(13000);
"348
[e ( _delay (1 -> -> -> 13000 `i `l `ul ]
[; ;PR9B.c: 349: RB2=1;
"349
[e = _RB2 -> -> 1 `i `b ]
[; ;PR9B.c: 350: delay(8000);
"350
[e ( _delay (1 -> -> -> 8000 `i `l `ul ]
[; ;PR9B.c: 351: RB2=0;
"351
[e = _RB2 -> -> 0 `i `b ]
[; ;PR9B.c: 352: }
"352
[e :UE 281 ]
}
"358
[v _send_config `(v ~T0 1 ef1`uc ]
{
[; ;PR9B.c: 357: void send_config(unsigned char data)
[; ;PR9B.c: 358: {
[e :U _send_config ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR9B.c: 359: RC0=0;
"359
[e = _RC0 -> -> 0 `i `b ]
[; ;PR9B.c: 360: PORTD=data;
"360
[e = _PORTD _data ]
[; ;PR9B.c: 361: delay(50);
"361
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR9B.c: 362: e_pulse();
"362
[e ( _e_pulse ..  ]
[; ;PR9B.c: 363: }
"363
[e :UE 282 ]
}
"366
[v _send_char `(v ~T0 1 ef1`uc ]
{
[; ;PR9B.c: 365: void send_char(unsigned char data)
[; ;PR9B.c: 366: {
[e :U _send_char ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR9B.c: 367: RC0=1;
"367
[e = _RC0 -> -> 1 `i `b ]
[; ;PR9B.c: 368: PORTD=data;
"368
[e = _PORTD _data ]
[; ;PR9B.c: 369: delay(50);
"369
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR9B.c: 370: e_pulse();
"370
[e ( _e_pulse ..  ]
[; ;PR9B.c: 371: }
"371
[e :UE 283 ]
}
"374
[v _e_pulse `(v ~T0 1 ef ]
{
[; ;PR9B.c: 373: void e_pulse(void)
[; ;PR9B.c: 374: {
[e :U _e_pulse ]
[f ]
[; ;PR9B.c: 375: RC1=1;
"375
[e = _RC1 -> -> 1 `i `b ]
[; ;PR9B.c: 376: delay(50);
"376
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR9B.c: 377: RC1=0;
"377
[e = _RC1 -> -> 0 `i `b ]
[; ;PR9B.c: 378: delay(50);
"378
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR9B.c: 379: }
"379
[e :UE 284 ]
}
"382
[v _lcd_goto `(v ~T0 1 ef1`uc ]
{
[; ;PR9B.c: 381: void lcd_goto(unsigned char data)
[; ;PR9B.c: 382: {
[e :U _lcd_goto ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR9B.c: 383: if(data<16)
"383
[e $ ! < -> _data `i -> 16 `i 286  ]
[; ;PR9B.c: 384: {
"384
{
[; ;PR9B.c: 385: send_config(0x80+data);
"385
[e ( _send_config (1 -> + -> 128 `i -> _data `i `uc ]
"386
}
[; ;PR9B.c: 386: }
[e $U 287  ]
"387
[e :U 286 ]
[; ;PR9B.c: 387: else
[; ;PR9B.c: 388: {
"388
{
[; ;PR9B.c: 389: data=data-20;
"389
[e = _data -> - -> _data `i -> 20 `i `uc ]
[; ;PR9B.c: 390: send_config(0xc0+data);
"390
[e ( _send_config (1 -> + -> 192 `i -> _data `i `uc ]
"391
}
[e :U 287 ]
[; ;PR9B.c: 391: }
[; ;PR9B.c: 392: }
"392
[e :UE 285 ]
}
"395
[v _lcd_clr `(v ~T0 1 ef ]
{
[; ;PR9B.c: 394: void lcd_clr(void)
[; ;PR9B.c: 395: {
[e :U _lcd_clr ]
[f ]
[; ;PR9B.c: 396: send_config(0x01);
"396
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR9B.c: 397: delay(50);
"397
[e ( _delay (1 -> -> -> 50 `i `l `ul ]
[; ;PR9B.c: 398: }
"398
[e :UE 288 ]
}
"401
[v _send_string `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR9B.c: 400: void send_string(const char *s)
[; ;PR9B.c: 401: {
[e :U _send_string ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
"402
[v _i `uc ~T0 1 a ]
[; ;PR9B.c: 402: unsigned char i=0;
[e = _i -> -> 0 `i `uc ]
[; ;PR9B.c: 403: while (s && *s)send_char (*s++);
"403
[e $U 290  ]
[e :U 291 ]
[e ( _send_char (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 290 ]
[e $ && != _s -> -> 0 `i `*Cuc != -> *U _s `i -> -> -> 0 `i `Cuc `i 291  ]
[e :U 292 ]
[; ;PR9B.c: 405: }
"405
[e :UE 289 ]
}
[a 1C 80 76 69 65 83 69 32 69 78 84 69 82 0 ]
[a 2C 54 45 68 73 71 73 84 32 80 65 83 83 87 79 82 68 0 ]
[a 3C 83 85 67 67 69 83 83 33 0 ]
[a 4C 69 82 82 79 82 33 0 ]
