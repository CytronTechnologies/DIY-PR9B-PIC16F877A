

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Wed Jun 27 13:00:30 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "PR9B.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 20 "PR9B.c"
    45  2007  3F32               dw 0x3F32 ;# 
    46                           	FNCALL	_main,_send_config
    47                           	FNCALL	_main,_lcd_clr
    48                           	FNCALL	_main,_delay
    49                           	FNCALL	_main,_lcd_goto
    50                           	FNCALL	_main,_send_string
    51                           	FNCALL	_main,_clearrow1
    52                           	FNCALL	_main,_scancolumn1
    53                           	FNCALL	_main,_clearrow2
    54                           	FNCALL	_main,_scancolumn2
    55                           	FNCALL	_main,_clearrow3
    56                           	FNCALL	_main,_scancolumn3
    57                           	FNCALL	_main,_clearrow4
    58                           	FNCALL	_main,_scancolumn4
    59                           	FNCALL	_main,_beep_once
    60                           	FNCALL	_main,_beep_twice
    61                           	FNCALL	_send_string,_send_char
    62                           	FNCALL	_scancolumn1,_lcd_clr
    63                           	FNCALL	_scancolumn1,_lcd_goto
    64                           	FNCALL	_scancolumn1,_send_char
    65                           	FNCALL	_scancolumn2,_lcd_clr
    66                           	FNCALL	_scancolumn2,_lcd_goto
    67                           	FNCALL	_scancolumn2,_send_char
    68                           	FNCALL	_scancolumn3,_lcd_clr
    69                           	FNCALL	_scancolumn3,_lcd_goto
    70                           	FNCALL	_scancolumn3,_send_char
    71                           	FNCALL	_scancolumn4,_lcd_clr
    72                           	FNCALL	_scancolumn4,_lcd_goto
    73                           	FNCALL	_scancolumn4,_send_char
    74                           	FNCALL	_lcd_clr,_send_config
    75                           	FNCALL	_lcd_clr,_delay
    76                           	FNCALL	_lcd_goto,_send_config
    77                           	FNCALL	_send_config,_delay
    78                           	FNCALL	_send_config,_e_pulse
    79                           	FNCALL	_beep_once,_delay
    80                           	FNCALL	_beep_twice,_delay
    81                           	FNCALL	_send_char,_delay
    82                           	FNCALL	_send_char,_e_pulse
    83                           	FNCALL	_e_pulse,_delay
    84                           	FNROOT	_main
    85                           	global	_stalled_char
    86                           psect	idataBANK0,class=CODE,space=0,delta=2
    87                           global __pidataBANK0
    88  02A6                     __pidataBANK0:
    89                           	file	"PR9B.c"
    90                           	line	59
    91                           
    92                           ;initializer for _stalled_char
    93  02A6  3431               	retlw	031h
    94  02A7  3432               	retlw	032h
    95  02A8  3433               	retlw	033h
    96  02A9  3434               	retlw	034h
    97  02AA  3435               	retlw	035h
    98  02AB  3436               	retlw	036h
    99                           	global	_password_count
   100                           	global	_keyin_char
   101                           	global	_PORTC
   102  0007                     _PORTC	set	0x7
   103                           	global	_PORTD
   104  0008                     _PORTD	set	0x8
   105                           	global	_RA0
   106  0028                     _RA0	set	0x28
   107                           	global	_RA1
   108  0029                     _RA1	set	0x29
   109                           	global	_RA2
   110  002A                     _RA2	set	0x2A
   111                           	global	_RA3
   112  002B                     _RA3	set	0x2B
   113                           	global	_RA4
   114  002C                     _RA4	set	0x2C
   115                           	global	_RA5
   116  002D                     _RA5	set	0x2D
   117                           	global	_RB1
   118  0031                     _RB1	set	0x31
   119                           	global	_RB2
   120  0032                     _RB2	set	0x32
   121                           	global	_RC0
   122  0038                     _RC0	set	0x38
   123                           	global	_RC1
   124  0039                     _RC1	set	0x39
   125                           	global	_RC2
   126  003A                     _RC2	set	0x3A
   127                           	global	_RC3
   128  003B                     _RC3	set	0x3B
   129                           	global	_RE0
   130  0048                     _RE0	set	0x48
   131                           	global	_RE1
   132  0049                     _RE1	set	0x49
   133                           	global	_ADCON1
   134  009F                     _ADCON1	set	0x9F
   135                           	global	_TRISA
   136  0085                     _TRISA	set	0x85
   137                           	global	_TRISB
   138  0086                     _TRISB	set	0x86
   139                           	global	_TRISC
   140  0087                     _TRISC	set	0x87
   141                           	global	_TRISD
   142  0088                     _TRISD	set	0x88
   143                           	global	_TRISE
   144  0089                     _TRISE	set	0x89
   145                           psect	strings,class=STRING,delta=2
   146                           global __pstrings
   147  0003                     __pstrings:
   148                           ;	global	stringdir,stringtab,__stringbase
   149  0003                     stringtab:
   150                           ;	String table - string pointers are 1 byte each
   151  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   152  0003  3000               movlw high(stringdir)
   153  0004  008A               movwf pclath
   154  0005  0804               movf fsr,w
   155  0006  0A84               incf fsr
   156  0007  0782               	addwf pc
   157  0008                     __stringbase:
   158  0008  3400               	retlw	0
   159                           psect	strings
   160                           	
   161  0009                     STR_2:	
   162  0009  3436               	retlw	54	;'6'
   163  000A  342D               	retlw	45	;'-'
   164  000B  3444               	retlw	68	;'D'
   165  000C  3449               	retlw	73	;'I'
   166  000D  3447               	retlw	71	;'G'
   167  000E  3449               	retlw	73	;'I'
   168  000F  3454               	retlw	84	;'T'
   169  0010  3420               	retlw	32	;' '
   170  0011  3450               	retlw	80	;'P'
   171  0012  3441               	retlw	65	;'A'
   172  0013  3453               	retlw	83	;'S'
   173  0014  3453               	retlw	83	;'S'
   174  0015  3457               	retlw	87	;'W'
   175  0016  344F               	retlw	79	;'O'
   176  0017  3452               	retlw	82	;'R'
   177  0018  3444               	retlw	68	;'D'
   178  0019  3400               	retlw	0
   179                           psect	strings
   180                           	
   181  001A                     STR_1:	
   182  001A  3450               	retlw	80	;'P'
   183  001B  344C               	retlw	76	;'L'
   184  001C  3445               	retlw	69	;'E'
   185  001D  3441               	retlw	65	;'A'
   186  001E  3453               	retlw	83	;'S'
   187  001F  3445               	retlw	69	;'E'
   188  0020  3420               	retlw	32	;' '
   189  0021  3445               	retlw	69	;'E'
   190  0022  344E               	retlw	78	;'N'
   191  0023  3454               	retlw	84	;'T'
   192  0024  3445               	retlw	69	;'E'
   193  0025  3452               	retlw	82	;'R'
   194  0026  3400               	retlw	0
   195                           psect	strings
   196                           	
   197  0027                     STR_3:	
   198  0027  3453               	retlw	83	;'S'
   199  0028  3455               	retlw	85	;'U'
   200  0029  3443               	retlw	67	;'C'
   201  002A  3443               	retlw	67	;'C'
   202  002B  3445               	retlw	69	;'E'
   203  002C  3453               	retlw	83	;'S'
   204  002D  3453               	retlw	83	;'S'
   205  002E  3421               	retlw	33	;'!'
   206  002F  3400               	retlw	0
   207                           psect	strings
   208                           	
   209  0030                     STR_4:	
   210  0030  3445               	retlw	69	;'E'
   211  0031  3452               	retlw	82	;'R'
   212  0032  3452               	retlw	82	;'R'
   213  0033  344F               	retlw	79	;'O'
   214  0034  3452               	retlw	82	;'R'
   215  0035  3421               	retlw	33	;'!'
   216  0036  3400               	retlw	0
   217                           psect	strings
   218                           	file	"C:\Users\HATAKE~1\AppData\Local\Temp\s1cpc."
   219                           	line	#
   220                           psect cinit,class=CODE,delta=2
   221                           global start_initialization
   222  0387                     start_initialization:
   223                           
   224                           psect	bssCOMMON,class=COMMON,space=1
   225                           global __pbssCOMMON
   226  007C                     __pbssCOMMON:
   227  007C                     _password_count:
   228  007C                            ds      1
   229                           
   230                           psect	bssBANK0,class=BANK0,space=1
   231                           global __pbssBANK0
   232  0020                     __pbssBANK0:
   233  0020                     _keyin_char:
   234  0020                            ds      6
   235                           
   236                           psect	dataBANK0,class=BANK0,space=1
   237                           global __pdataBANK0
   238  0026                     __pdataBANK0:
   239                           	file	"PR9B.c"
   240  0026                     _stalled_char:
   241  0026                            ds      6
   242                           
   243                           ; Clear objects allocated to COMMON
   244                           psect cinit,class=CODE,delta=2,merge=1
   245  0387  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   246                           ; Clear objects allocated to BANK0
   247                           psect cinit,class=CODE,delta=2,merge=1
   248  0388  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   249  0389  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   250  038A  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   251  038B  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   252  038C  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   253  038D  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   254                           ; Initialize objects allocated to BANK0
   255                           	global __pidataBANK0
   256                           psect cinit,class=CODE,delta=2,merge=1
   257  038E  120A  118A  22A6   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
   258  0393  00A6               	movwf	__pdataBANK0+0&07fh		
   259  0394  120A  118A  22A7   	fcall	__pidataBANK0+1		;fetch initializer
              120A  118A         
   260  0399  00A7               	movwf	__pdataBANK0+1&07fh		
   261  039A  120A  118A  22A8   	fcall	__pidataBANK0+2		;fetch initializer
              120A  118A         
   262  039F  00A8               	movwf	__pdataBANK0+2&07fh		
   263  03A0  120A  118A  22A9   	fcall	__pidataBANK0+3		;fetch initializer
              120A  118A         
   264  03A5  00A9               	movwf	__pdataBANK0+3&07fh		
   265  03A6  120A  118A  22AA   	fcall	__pidataBANK0+4		;fetch initializer
              120A  118A         
   266  03AB  00AA               	movwf	__pdataBANK0+4&07fh		
   267  03AC  120A  118A  22AB   	fcall	__pidataBANK0+5		;fetch initializer
              120A  118A         
   268  03B1  00AB               	movwf	__pdataBANK0+5&07fh		
   269                           psect cinit,class=CODE,delta=2,merge=1
   270                           global end_of_initialization
   271                           
   272                           ;End of C runtime variable initialization code
   273                           
   274  03B2                     end_of_initialization:
   275  03B2  0183               clrf status
   276  03B3  120A  118A  2F12   ljmp _main	;jump to C main() function
   277                           psect	cstackCOMMON,class=COMMON,space=1
   278                           global __pcstackCOMMON
   279  0070                     __pcstackCOMMON:
   280                           	global	?_send_config
   281  0070                     ?_send_config:	; 0 bytes @ 0x0
   282                           	global	?_lcd_clr
   283  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
   284                           	global	?_delay
   285  0070                     ?_delay:	; 0 bytes @ 0x0
   286                           	global	?_lcd_goto
   287  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   288                           	global	?_send_string
   289  0070                     ?_send_string:	; 0 bytes @ 0x0
   290                           	global	?_clearrow1
   291  0070                     ?_clearrow1:	; 0 bytes @ 0x0
   292                           	global	??_clearrow1
   293  0070                     ??_clearrow1:	; 0 bytes @ 0x0
   294                           	global	?_scancolumn1
   295  0070                     ?_scancolumn1:	; 0 bytes @ 0x0
   296                           	global	?_clearrow2
   297  0070                     ?_clearrow2:	; 0 bytes @ 0x0
   298                           	global	??_clearrow2
   299  0070                     ??_clearrow2:	; 0 bytes @ 0x0
   300                           	global	?_scancolumn2
   301  0070                     ?_scancolumn2:	; 0 bytes @ 0x0
   302                           	global	?_clearrow3
   303  0070                     ?_clearrow3:	; 0 bytes @ 0x0
   304                           	global	??_clearrow3
   305  0070                     ??_clearrow3:	; 0 bytes @ 0x0
   306                           	global	?_scancolumn3
   307  0070                     ?_scancolumn3:	; 0 bytes @ 0x0
   308                           	global	?_clearrow4
   309  0070                     ?_clearrow4:	; 0 bytes @ 0x0
   310                           	global	??_clearrow4
   311  0070                     ??_clearrow4:	; 0 bytes @ 0x0
   312                           	global	?_scancolumn4
   313  0070                     ?_scancolumn4:	; 0 bytes @ 0x0
   314                           	global	?_beep_once
   315  0070                     ?_beep_once:	; 0 bytes @ 0x0
   316                           	global	?_beep_twice
   317  0070                     ?_beep_twice:	; 0 bytes @ 0x0
   318                           	global	?_send_char
   319  0070                     ?_send_char:	; 0 bytes @ 0x0
   320                           	global	?_e_pulse
   321  0070                     ?_e_pulse:	; 0 bytes @ 0x0
   322                           	global	?_main
   323  0070                     ?_main:	; 0 bytes @ 0x0
   324                           	global	delay@data
   325  0070                     delay@data:	; 4 bytes @ 0x0
   326  0070                     	ds	4
   327                           	global	??_delay
   328  0074                     ??_delay:	; 0 bytes @ 0x4
   329  0074                     	ds	4
   330                           	global	??_send_config
   331  0078                     ??_send_config:	; 0 bytes @ 0x8
   332                           	global	??_beep_once
   333  0078                     ??_beep_once:	; 0 bytes @ 0x8
   334                           	global	??_beep_twice
   335  0078                     ??_beep_twice:	; 0 bytes @ 0x8
   336                           	global	??_send_char
   337  0078                     ??_send_char:	; 0 bytes @ 0x8
   338                           	global	??_e_pulse
   339  0078                     ??_e_pulse:	; 0 bytes @ 0x8
   340                           	global	send_config@data
   341  0078                     send_config@data:	; 1 bytes @ 0x8
   342                           	global	send_char@data
   343  0078                     send_char@data:	; 1 bytes @ 0x8
   344  0078                     	ds	1
   345                           	global	??_lcd_clr
   346  0079                     ??_lcd_clr:	; 0 bytes @ 0x9
   347                           	global	??_lcd_goto
   348  0079                     ??_lcd_goto:	; 0 bytes @ 0x9
   349                           	global	??_send_string
   350  0079                     ??_send_string:	; 0 bytes @ 0x9
   351  0079                     	ds	1
   352                           	global	lcd_goto@data
   353  007A                     lcd_goto@data:	; 1 bytes @ 0xA
   354                           	global	send_string@i
   355  007A                     send_string@i:	; 1 bytes @ 0xA
   356  007A                     	ds	1
   357                           	global	??_scancolumn1
   358  007B                     ??_scancolumn1:	; 0 bytes @ 0xB
   359                           	global	??_scancolumn2
   360  007B                     ??_scancolumn2:	; 0 bytes @ 0xB
   361                           	global	??_scancolumn3
   362  007B                     ??_scancolumn3:	; 0 bytes @ 0xB
   363                           	global	??_scancolumn4
   364  007B                     ??_scancolumn4:	; 0 bytes @ 0xB
   365                           	global	send_string@s
   366  007B                     send_string@s:	; 1 bytes @ 0xB
   367  007B                     	ds	1
   368                           	global	??_main
   369  007C                     ??_main:	; 0 bytes @ 0xC
   370                           ;!
   371                           ;!Data Sizes:
   372                           ;!    Strings     46
   373                           ;!    Constant    0
   374                           ;!    Data        6
   375                           ;!    BSS         7
   376                           ;!    Persistent  0
   377                           ;!    Stack       0
   378                           ;!
   379                           ;!Auto Spaces:
   380                           ;!    Space          Size  Autos    Used
   381                           ;!    COMMON           14     12      13
   382                           ;!    BANK0            80      0      12
   383                           ;!    BANK1            80      0       0
   384                           ;!    BANK3            96      0       0
   385                           ;!    BANK2            96      0       0
   386                           
   387                           ;!
   388                           ;!Pointer List with Targets:
   389                           ;!
   390                           ;!    send_string@s	PTR const unsigned char  size(1) Largest target is 17
   391                           ;!		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[13]), 
   392                           ;!
   393                           
   394                           
   395                           ;!
   396                           ;!Critical Paths under _main in COMMON
   397                           ;!
   398                           ;!    _main->_send_string
   399                           ;!    _main->_scancolumn1
   400                           ;!    _main->_scancolumn2
   401                           ;!    _main->_scancolumn3
   402                           ;!    _main->_scancolumn4
   403                           ;!    _send_string->_send_char
   404                           ;!    _scancolumn1->_lcd_goto
   405                           ;!    _scancolumn2->_lcd_goto
   406                           ;!    _scancolumn3->_lcd_goto
   407                           ;!    _scancolumn4->_lcd_goto
   408                           ;!    _lcd_clr->_send_config
   409                           ;!    _lcd_goto->_send_config
   410                           ;!    _send_config->_delay
   411                           ;!    _beep_once->_delay
   412                           ;!    _beep_twice->_delay
   413                           ;!    _send_char->_delay
   414                           ;!    _e_pulse->_delay
   415                           ;!
   416                           ;!Critical Paths under _main in BANK0
   417                           ;!
   418                           ;!    None.
   419                           ;!
   420                           ;!Critical Paths under _main in BANK1
   421                           ;!
   422                           ;!    None.
   423                           ;!
   424                           ;!Critical Paths under _main in BANK3
   425                           ;!
   426                           ;!    None.
   427                           ;!
   428                           ;!Critical Paths under _main in BANK2
   429                           ;!
   430                           ;!    None.
   431                           
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   434 ;;
   435                           
   436                           ;!
   437                           ;!Call Graph Tables:
   438                           ;!
   439                           ;! ---------------------------------------------------------------------------------
   440                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   441                           ;! ---------------------------------------------------------------------------------
   442                           ;! (0) _main                                                 0     0      0    2665
   443                           ;!                        _send_config
   444                           ;!                            _lcd_clr
   445                           ;!                              _delay
   446                           ;!                           _lcd_goto
   447                           ;!                        _send_string
   448                           ;!                          _clearrow1
   449                           ;!                        _scancolumn1
   450                           ;!                          _clearrow2
   451                           ;!                        _scancolumn2
   452                           ;!                          _clearrow3
   453                           ;!                        _scancolumn3
   454                           ;!                          _clearrow4
   455                           ;!                        _scancolumn4
   456                           ;!                          _beep_once
   457                           ;!                         _beep_twice
   458                           ;! ---------------------------------------------------------------------------------
   459                           ;! (1) _send_string                                          3     3      0     180
   460                           ;!                                              9 COMMON     3     3      0
   461                           ;!                          _send_char
   462                           ;! ---------------------------------------------------------------------------------
   463                           ;! (1) _clearrow1                                            0     0      0       0
   464                           ;! ---------------------------------------------------------------------------------
   465                           ;! (1) _scancolumn1                                          1     1      0     470
   466                           ;!                                             11 COMMON     1     1      0
   467                           ;!                            _lcd_clr
   468                           ;!                           _lcd_goto
   469                           ;!                          _send_char
   470                           ;! ---------------------------------------------------------------------------------
   471                           ;! (1) _clearrow2                                            0     0      0       0
   472                           ;! ---------------------------------------------------------------------------------
   473                           ;! (1) _scancolumn2                                          1     1      0     470
   474                           ;!                                             11 COMMON     1     1      0
   475                           ;!                            _lcd_clr
   476                           ;!                           _lcd_goto
   477                           ;!                          _send_char
   478                           ;! ---------------------------------------------------------------------------------
   479                           ;! (1) _clearrow3                                            0     0      0       0
   480                           ;! ---------------------------------------------------------------------------------
   481                           ;! (1) _scancolumn3                                          1     1      0     470
   482                           ;!                                             11 COMMON     1     1      0
   483                           ;!                            _lcd_clr
   484                           ;!                           _lcd_goto
   485                           ;!                          _send_char
   486                           ;! ---------------------------------------------------------------------------------
   487                           ;! (1) _clearrow4                                            0     0      0       0
   488                           ;! ---------------------------------------------------------------------------------
   489                           ;! (1) _scancolumn4                                          1     1      0     470
   490                           ;!                                             11 COMMON     1     1      0
   491                           ;!                            _lcd_clr
   492                           ;!                           _lcd_goto
   493                           ;!                          _send_char
   494                           ;! ---------------------------------------------------------------------------------
   495                           ;! (2) _lcd_clr                                              0     0      0     157
   496                           ;!                        _send_config
   497                           ;!                              _delay
   498                           ;! ---------------------------------------------------------------------------------
   499                           ;! (2) _lcd_goto                                             2     2      0     201
   500                           ;!                                              9 COMMON     2     2      0
   501                           ;!                        _send_config
   502                           ;! ---------------------------------------------------------------------------------
   503                           ;! (3) _send_config                                          1     1      0     112
   504                           ;!                                              8 COMMON     1     1      0
   505                           ;!                              _delay
   506                           ;!                            _e_pulse
   507                           ;! ---------------------------------------------------------------------------------
   508                           ;! (1) _beep_once                                            0     0      0      45
   509                           ;!                              _delay
   510                           ;! ---------------------------------------------------------------------------------
   511                           ;! (1) _beep_twice                                           0     0      0      45
   512                           ;!                              _delay
   513                           ;! ---------------------------------------------------------------------------------
   514                           ;! (2) _send_char                                            1     1      0     112
   515                           ;!                                              8 COMMON     1     1      0
   516                           ;!                              _delay
   517                           ;!                            _e_pulse
   518                           ;! ---------------------------------------------------------------------------------
   519                           ;! (3) _e_pulse                                              0     0      0      45
   520                           ;!                              _delay
   521                           ;! ---------------------------------------------------------------------------------
   522                           ;! (2) _delay                                                8     4      4      45
   523                           ;!                                              0 COMMON     8     4      4
   524                           ;! ---------------------------------------------------------------------------------
   525                           ;! Estimated maximum stack depth 3
   526                           ;! ---------------------------------------------------------------------------------
   527                           ;!
   528                           ;! Call Graph Graphs:
   529                           ;!
   530                           ;! _main (ROOT)
   531                           ;!   _send_config
   532                           ;!     _delay
   533                           ;!     _e_pulse
   534                           ;!       _delay
   535                           ;!   _lcd_clr
   536                           ;!     _send_config
   537                           ;!       _delay
   538                           ;!       _e_pulse
   539                           ;!         _delay
   540                           ;!     _delay
   541                           ;!   _delay
   542                           ;!   _lcd_goto
   543                           ;!     _send_config
   544                           ;!       _delay
   545                           ;!       _e_pulse
   546                           ;!         _delay
   547                           ;!   _send_string
   548                           ;!     _send_char
   549                           ;!       _delay
   550                           ;!       _e_pulse
   551                           ;!         _delay
   552                           ;!   _clearrow1
   553                           ;!   _scancolumn1
   554                           ;!     _lcd_clr
   555                           ;!       _send_config
   556                           ;!         _delay
   557                           ;!         _e_pulse
   558                           ;!           _delay
   559                           ;!       _delay
   560                           ;!     _lcd_goto
   561                           ;!       _send_config
   562                           ;!         _delay
   563                           ;!         _e_pulse
   564                           ;!           _delay
   565                           ;!     _send_char
   566                           ;!       _delay
   567                           ;!       _e_pulse
   568                           ;!         _delay
   569                           ;!   _clearrow2
   570                           ;!   _scancolumn2
   571                           ;!     _lcd_clr
   572                           ;!       _send_config
   573                           ;!         _delay
   574                           ;!         _e_pulse
   575                           ;!           _delay
   576                           ;!       _delay
   577                           ;!     _lcd_goto
   578                           ;!       _send_config
   579                           ;!         _delay
   580                           ;!         _e_pulse
   581                           ;!           _delay
   582                           ;!     _send_char
   583                           ;!       _delay
   584                           ;!       _e_pulse
   585                           ;!         _delay
   586                           ;!   _clearrow3
   587                           ;!   _scancolumn3
   588                           ;!     _lcd_clr
   589                           ;!       _send_config
   590                           ;!         _delay
   591                           ;!         _e_pulse
   592                           ;!           _delay
   593                           ;!       _delay
   594                           ;!     _lcd_goto
   595                           ;!       _send_config
   596                           ;!         _delay
   597                           ;!         _e_pulse
   598                           ;!           _delay
   599                           ;!     _send_char
   600                           ;!       _delay
   601                           ;!       _e_pulse
   602                           ;!         _delay
   603                           ;!   _clearrow4
   604                           ;!   _scancolumn4
   605                           ;!     _lcd_clr
   606                           ;!       _send_config
   607                           ;!         _delay
   608                           ;!         _e_pulse
   609                           ;!           _delay
   610                           ;!       _delay
   611                           ;!     _lcd_goto
   612                           ;!       _send_config
   613                           ;!         _delay
   614                           ;!         _e_pulse
   615                           ;!           _delay
   616                           ;!     _send_char
   617                           ;!       _delay
   618                           ;!       _e_pulse
   619                           ;!         _delay
   620                           ;!   _beep_once
   621                           ;!     _delay
   622                           ;!   _beep_twice
   623                           ;!     _delay
   624                           ;!
   625                           
   626                           ;! Address spaces:
   627                           
   628                           ;!Name               Size   Autos  Total    Cost      Usage
   629                           ;!BANK3               60      0       0       9        0.0%
   630                           ;!BITBANK3            60      0       0       8        0.0%
   631                           ;!SFR3                 0      0       0       4        0.0%
   632                           ;!BITSFR3              0      0       0       4        0.0%
   633                           ;!BANK2               60      0       0      11        0.0%
   634                           ;!BITBANK2            60      0       0      10        0.0%
   635                           ;!SFR2                 0      0       0       5        0.0%
   636                           ;!BITSFR2              0      0       0       5        0.0%
   637                           ;!BANK1               50      0       0       7        0.0%
   638                           ;!BITBANK1            50      0       0       6        0.0%
   639                           ;!SFR1                 0      0       0       2        0.0%
   640                           ;!BITSFR1              0      0       0       2        0.0%
   641                           ;!BANK0               50      0       C       5       15.0%
   642                           ;!BITBANK0            50      0       0       4        0.0%
   643                           ;!SFR0                 0      0       0       1        0.0%
   644                           ;!BITSFR0              0      0       0       1        0.0%
   645                           ;!COMMON               E      C       D       1       92.9%
   646                           ;!BITCOMMON            E      0       0       0        0.0%
   647                           ;!CODE                 0      0       0       0        0.0%
   648                           ;!DATA                 0      0      1E      12        0.0%
   649                           ;!ABS                  0      0      19       3        0.0%
   650                           ;!NULL                 0      0       0       0        0.0%
   651                           ;!STACK                0      0       5       2        0.0%
   652                           ;!EEDATA             100      0       0       0        0.0%
   653                           
   654                           	global	_main
   655                           
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 65 in file "PR9B.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;		None               void
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 17F/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels required when called:    5
   678 ;; This function calls:
   679 ;;		_send_config
   680 ;;		_lcd_clr
   681 ;;		_delay
   682 ;;		_lcd_goto
   683 ;;		_send_string
   684 ;;		_clearrow1
   685 ;;		_scancolumn1
   686 ;;		_clearrow2
   687 ;;		_scancolumn2
   688 ;;		_clearrow3
   689 ;;		_scancolumn3
   690 ;;		_clearrow4
   691 ;;		_scancolumn4
   692 ;;		_beep_once
   693 ;;		_beep_twice
   694 ;; This function is called by:
   695 ;;		Startup code after reset
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           psect	maintext,global,class=CODE,delta=2,split=1
   699                           global __pmaintext
   700  0712                     __pmaintext:
   701                           psect	maintext
   702                           	file	"PR9B.c"
   703                           	line	65
   704                           	global	__size_of_main
   705  00EE                     	__size_of_main	equ	__end_of_main-_main
   706                           	
   707  0712                     _main:	
   708                           	opt	stack 3
   709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   710                           	line	66
   711                           	
   712  0712                     l1280:	
   713                           ;PR9B.c: 66: ADCON1=0b00000110;
   714  0712  3006               	movlw	(06h)
   715  0713  1683               	bsf	status, 5	;RP0=1, select bank1
   716  0714  1303               	bcf	status, 6	;RP1=0, select bank1
   717  0715  009F               	movwf	(159)^080h	;volatile
   718                           	line	67
   719                           ;PR9B.c: 67: TRISA=0b11001111;
   720  0716  30CF               	movlw	(0CFh)
   721  0717  0085               	movwf	(133)^080h	;volatile
   722                           	line	68
   723                           	
   724  0718                     l1282:	
   725                           ;PR9B.c: 68: TRISB=0b00000000;
   726  0718  0186               	clrf	(134)^080h	;volatile
   727                           	line	69
   728                           	
   729  0719                     l1284:	
   730                           ;PR9B.c: 69: TRISD=0b00000000;
   731  0719  0188               	clrf	(136)^080h	;volatile
   732                           	line	70
   733                           ;PR9B.c: 70: TRISC=0b11110000;
   734  071A  30F0               	movlw	(0F0h)
   735  071B  0087               	movwf	(135)^080h	;volatile
   736                           	line	71
   737                           	
   738  071C                     l1286:	
   739                           ;PR9B.c: 71: TRISE=0b00000000;
   740  071C  0189               	clrf	(137)^080h	;volatile
   741                           	line	73
   742                           	
   743  071D                     l1288:	
   744                           ;PR9B.c: 73: PORTC=0;
   745  071D  1283               	bcf	status, 5	;RP0=0, select bank0
   746  071E  1303               	bcf	status, 6	;RP1=0, select bank0
   747  071F  0187               	clrf	(7)	;volatile
   748                           	line	74
   749                           	
   750  0720                     l1290:	
   751                           ;PR9B.c: 74: PORTD=0;
   752  0720  0188               	clrf	(8)	;volatile
   753                           	line	75
   754                           	
   755  0721                     l1292:	
   756                           ;PR9B.c: 75: RB1=0;
   757  0721  1086               	bcf	(49/8),(49)&7	;volatile
   758                           	line	76
   759                           	
   760  0722                     l1294:	
   761                           ;PR9B.c: 76: RB2=0;
   762  0722  1106               	bcf	(50/8),(50)&7	;volatile
   763                           	line	77
   764                           	
   765  0723                     l1296:	
   766                           ;PR9B.c: 77: RC2=0;
   767  0723  1107               	bcf	(58/8),(58)&7	;volatile
   768                           	line	78
   769                           	
   770  0724                     l1298:	
   771                           ;PR9B.c: 78: RC3=0;
   772  0724  1187               	bcf	(59/8),(59)&7	;volatile
   773                           	line	80
   774                           	
   775  0725                     l1300:	
   776                           ;PR9B.c: 80: send_config(0b00001001);
   777  0725  3009               	movlw	(09h)
   778  0726  120A  118A  2309   	fcall	_send_config
              120A  118A         
   779                           	line	81
   780                           	
   781  072B                     l1302:	
   782                           ;PR9B.c: 81: send_config(0b00000010);
   783  072B  3002               	movlw	(02h)
   784  072C  120A  118A  2309   	fcall	_send_config
              120A  118A         
   785                           	line	82
   786                           	
   787  0731                     l1304:	
   788                           ;PR9B.c: 82: send_config(0b00000110);
   789  0731  3006               	movlw	(06h)
   790  0732  120A  118A  2309   	fcall	_send_config
              120A  118A         
   791                           	line	83
   792                           	
   793  0737                     l1306:	
   794                           ;PR9B.c: 83: send_config(0b00001100);
   795  0737  300C               	movlw	(0Ch)
   796  0738  120A  118A  2309   	fcall	_send_config
              120A  118A         
   797                           	line	84
   798                           	
   799  073D                     l1308:	
   800                           ;PR9B.c: 84: send_config(0b00111000);
   801  073D  3038               	movlw	(038h)
   802  073E  120A  118A  2309   	fcall	_send_config
              120A  118A         
   803                           	line	86
   804                           	
   805  0743                     l1310:	
   806                           ;PR9B.c: 86: lcd_clr();
   807  0743  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
   808                           	line	87
   809                           	
   810  0748                     l1312:	
   811                           ;PR9B.c: 87: delay(1000);
   812  0748  3000               	movlw	0
   813  0749  00F3               	movwf	(?_delay+3)
   814  074A  3000               	movlw	0
   815  074B  00F2               	movwf	(?_delay+2)
   816  074C  3003               	movlw	03h
   817  074D  00F1               	movwf	(?_delay+1)
   818  074E  30E8               	movlw	0E8h
   819  074F  00F0               	movwf	(?_delay)
   820                           
   821  0750  120A  118A  23B6   	fcall	_delay
              120A  118A         
   822                           	line	88
   823                           	
   824  0755                     l1314:	
   825                           ;PR9B.c: 88: lcd_goto(0);
   826  0755  3000               	movlw	(0)
   827  0756  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
   828                           	line	89
   829                           	
   830  075B                     l1316:	
   831                           ;PR9B.c: 89: send_string("PLEASE ENTER");
   832  075B  3012               	movlw	((STR_1-__stringbase))&0ffh
   833  075C  120A  118A  2360   	fcall	_send_string
              120A  118A         
   834                           	line	90
   835                           	
   836  0761                     l1318:	
   837                           ;PR9B.c: 90: lcd_goto(20);
   838  0761  3014               	movlw	(014h)
   839  0762  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
   840                           	line	91
   841                           	
   842  0767                     l1320:	
   843                           ;PR9B.c: 91: send_string("6-DIGIT PASSWORD");
   844  0767  3001               	movlw	((STR_2-__stringbase))&0ffh
   845  0768  120A  118A  2360   	fcall	_send_string
              120A  118A         
   846  076D  2F6E               	goto	l1322
   847                           	line	94
   848                           ;PR9B.c: 94: while(1)
   849                           	
   850  076E                     l87:	
   851                           	line	96
   852                           	
   853  076E                     l1322:	
   854                           ;PR9B.c: 95: {
   855                           ;PR9B.c: 96: clearrow1();
   856  076E  120A  118A  22C1   	fcall	_clearrow1
              120A  118A         
   857                           	line	97
   858                           	
   859  0773                     l1324:	
   860                           ;PR9B.c: 97: scancolumn1();
   861  0773  120A  118A  2654   	fcall	_scancolumn1
              120A  118A         
   862                           	line	98
   863                           	
   864  0778                     l1326:	
   865                           ;PR9B.c: 98: clearrow2();
   866  0778  120A  118A  22BA   	fcall	_clearrow2
              120A  118A         
   867                           	line	99
   868                           	
   869  077D                     l1328:	
   870                           ;PR9B.c: 99: scancolumn2();
   871  077D  120A  118A  2596   	fcall	_scancolumn2
              120A  118A         
   872                           	line	100
   873                           	
   874  0782                     l1330:	
   875                           ;PR9B.c: 100: clearrow3();
   876  0782  120A  118A  22B3   	fcall	_clearrow3
              120A  118A         
   877                           	line	101
   878                           	
   879  0787                     l1332:	
   880                           ;PR9B.c: 101: scancolumn3();
   881  0787  120A  118A  24D8   	fcall	_scancolumn3
              120A  118A         
   882                           	line	102
   883                           	
   884  078C                     l1334:	
   885                           ;PR9B.c: 102: clearrow4();
   886  078C  120A  118A  22AC   	fcall	_clearrow4
              120A  118A         
   887                           	line	103
   888                           	
   889  0791                     l1336:	
   890                           ;PR9B.c: 103: scancolumn4();
   891  0791  120A  118A  241A   	fcall	_scancolumn4
              120A  118A         
   892                           	line	105
   893                           	
   894  0796                     l1338:	
   895                           ;PR9B.c: 105: if(password_count==6)
   896  0796  087C               	movf	(_password_count),w
   897  0797  3A06               	xorlw	06h
   898  0798  1D03               	skipz
   899  0799  2F9B               	goto	u1161
   900  079A  2F9C               	goto	u1160
   901  079B                     u1161:
   902  079B  2F6E               	goto	l1322
   903  079C                     u1160:
   904                           	line	107
   905                           	
   906  079C                     l1340:	
   907                           ;PR9B.c: 106: {
   908                           ;PR9B.c: 107: password_count=0;
   909  079C  01FC               	clrf	(_password_count)
   910                           	line	110
   911                           	
   912  079D                     l1342:	
   913                           ;PR9B.c: 108: if((keyin_char[0]==stalled_char[0])&&(keyin_char[1]==stalled_char[1])&&
   914                           ;PR9B.c: 109: (keyin_char[2]==stalled_char[2])&&(keyin_char[3]==stalled_char[3])&&
   915                           ;PR9B.c: 110: (keyin_char[4]==stalled_char[4])&&(keyin_char[5]==stalled_char[5]))
   916  079D  1283               	bcf	status, 5	;RP0=0, select bank0
   917  079E  1303               	bcf	status, 6	;RP1=0, select bank0
   918  079F  0820               	movf	(_keyin_char),w
   919  07A0  0626               	xorwf	(_stalled_char),w
   920  07A1  1D03               	skipz
   921  07A2  2FA4               	goto	u1171
   922  07A3  2FA5               	goto	u1170
   923  07A4                     u1171:
   924  07A4  2FDF               	goto	l1364
   925  07A5                     u1170:
   926                           	
   927  07A5                     l1344:	
   928  07A5  0821               	movf	0+(_keyin_char)+01h,w
   929  07A6  0627               	xorwf	0+(_stalled_char)+01h,w
   930  07A7  1D03               	skipz
   931  07A8  2FAA               	goto	u1181
   932  07A9  2FAB               	goto	u1180
   933  07AA                     u1181:
   934  07AA  2FDF               	goto	l1364
   935  07AB                     u1180:
   936                           	
   937  07AB                     l1346:	
   938  07AB  0822               	movf	0+(_keyin_char)+02h,w
   939  07AC  0628               	xorwf	0+(_stalled_char)+02h,w
   940  07AD  1D03               	skipz
   941  07AE  2FB0               	goto	u1191
   942  07AF  2FB1               	goto	u1190
   943  07B0                     u1191:
   944  07B0  2FDF               	goto	l1364
   945  07B1                     u1190:
   946                           	
   947  07B1                     l1348:	
   948  07B1  0823               	movf	0+(_keyin_char)+03h,w
   949  07B2  0629               	xorwf	0+(_stalled_char)+03h,w
   950  07B3  1D03               	skipz
   951  07B4  2FB6               	goto	u1201
   952  07B5  2FB7               	goto	u1200
   953  07B6                     u1201:
   954  07B6  2FDF               	goto	l1364
   955  07B7                     u1200:
   956                           	
   957  07B7                     l1350:	
   958  07B7  0824               	movf	0+(_keyin_char)+04h,w
   959  07B8  062A               	xorwf	0+(_stalled_char)+04h,w
   960  07B9  1D03               	skipz
   961  07BA  2FBC               	goto	u1211
   962  07BB  2FBD               	goto	u1210
   963  07BC                     u1211:
   964  07BC  2FDF               	goto	l1364
   965  07BD                     u1210:
   966                           	
   967  07BD                     l1352:	
   968  07BD  0825               	movf	0+(_keyin_char)+05h,w
   969  07BE  062B               	xorwf	0+(_stalled_char)+05h,w
   970  07BF  1D03               	skipz
   971  07C0  2FC2               	goto	u1221
   972  07C1  2FC3               	goto	u1220
   973  07C2                     u1221:
   974  07C2  2FDF               	goto	l1364
   975  07C3                     u1220:
   976                           	line	112
   977                           	
   978  07C3                     l1354:	
   979                           ;PR9B.c: 111: {
   980                           ;PR9B.c: 112: lcd_clr();
   981  07C3  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
   982                           	line	113
   983                           ;PR9B.c: 113: lcd_goto(0);
   984  07C8  3000               	movlw	(0)
   985  07C9  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
   986                           	line	114
   987                           	
   988  07CE                     l1356:	
   989                           ;PR9B.c: 114: send_string("SUCCESS!");
   990  07CE  301F               	movlw	((STR_3-__stringbase))&0ffh
   991  07CF  120A  118A  2360   	fcall	_send_string
              120A  118A         
   992                           	line	115
   993                           	
   994  07D4                     l1358:	
   995                           ;PR9B.c: 115: RC2=1;
   996  07D4  1283               	bcf	status, 5	;RP0=0, select bank0
   997  07D5  1303               	bcf	status, 6	;RP1=0, select bank0
   998  07D6  1507               	bsf	(58/8),(58)&7	;volatile
   999                           	line	116
  1000                           	
  1001  07D7                     l1360:	
  1002                           ;PR9B.c: 116: RB1=1;
  1003  07D7  1486               	bsf	(49/8),(49)&7	;volatile
  1004                           	line	117
  1005                           	
  1006  07D8                     l1362:	
  1007                           ;PR9B.c: 117: beep_once();
  1008  07D8  120A  118A  22C8   	fcall	_beep_once
              120A  118A         
  1009                           	line	118
  1010                           ;PR9B.c: 118: while(1);
  1011                           	
  1012  07DD                     l90:	
  1013                           	
  1014  07DD                     l91:	
  1015  07DD  2FDD               	goto	l90
  1016                           	
  1017  07DE                     l92:	
  1018                           	line	119
  1019                           ;PR9B.c: 119: }
  1020  07DE  2F6E               	goto	l1322
  1021                           	line	120
  1022                           	
  1023  07DF                     l89:	
  1024                           	line	122
  1025                           	
  1026  07DF                     l1364:	
  1027                           ;PR9B.c: 120: else
  1028                           ;PR9B.c: 121: {
  1029                           ;PR9B.c: 122: lcd_clr();
  1030  07DF  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1031                           	line	123
  1032                           ;PR9B.c: 123: lcd_goto(0);
  1033  07E4  3000               	movlw	(0)
  1034  07E5  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1035                           	line	124
  1036                           	
  1037  07EA                     l1366:	
  1038                           ;PR9B.c: 124: send_string("ERROR!");
  1039  07EA  3028               	movlw	((STR_4-__stringbase))&0ffh
  1040  07EB  120A  118A  2360   	fcall	_send_string
              120A  118A         
  1041                           	line	125
  1042                           	
  1043  07F0                     l1368:	
  1044                           ;PR9B.c: 125: RC3=1;
  1045  07F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1046  07F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1047  07F2  1587               	bsf	(59/8),(59)&7	;volatile
  1048                           	line	126
  1049                           	
  1050  07F3                     l1370:	
  1051                           ;PR9B.c: 126: beep_twice();
  1052  07F3  120A  118A  23E6   	fcall	_beep_twice
              120A  118A         
  1053                           	line	127
  1054                           ;PR9B.c: 127: while(1);
  1055                           	
  1056  07F8                     l94:	
  1057                           	
  1058  07F8                     l95:	
  1059  07F8  2FF8               	goto	l94
  1060                           	
  1061  07F9                     l96:	
  1062  07F9  2F6E               	goto	l1322
  1063                           	line	128
  1064                           	
  1065  07FA                     l93:	
  1066  07FA  2F6E               	goto	l1322
  1067                           	line	129
  1068                           	
  1069  07FB                     l88:	
  1070  07FB  2F6E               	goto	l1322
  1071                           	line	130
  1072                           	
  1073  07FC                     l97:	
  1074                           	line	94
  1075  07FC  2F6E               	goto	l1322
  1076                           	
  1077  07FD                     l98:	
  1078                           	line	131
  1079                           	
  1080  07FD                     l99:	
  1081                           	global	start
  1082  07FD  120A  118A  2800   	ljmp	start
  1083                           	opt stack 0
  1084                           GLOBAL	__end_of_main
  1085  0800                     	__end_of_main:
  1086                           	signat	_main,88
  1087                           	global	_send_string
  1088                           
  1089 ;; *************** function _send_string *****************
  1090 ;; Defined at:
  1091 ;;		line 401 in file "PR9B.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  s               1    wreg     PTR const unsigned char 
  1094 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  s               1   11[COMMON] PTR const unsigned char 
  1097 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
  1098 ;;  i               1   10[COMMON] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;		None               void
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         2       0       0       0       0
  1110 ;;      Temps:          1       0       0       0       0
  1111 ;;      Totals:         3       0       0       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    3
  1115 ;; This function calls:
  1116 ;;		_send_char
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           psect	text385,local,class=CODE,delta=2,merge=1
  1122                           global __ptext385
  1123  0360                     __ptext385:
  1124                           psect	text385
  1125                           	file	"PR9B.c"
  1126                           	line	401
  1127                           	global	__size_of_send_string
  1128  0027                     	__size_of_send_string	equ	__end_of_send_string-_send_string
  1129                           	
  1130  0360                     _send_string:	
  1131                           	opt	stack 4
  1132                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1133                           ;send_string@s stored from wreg
  1134  0360  00FB               	movwf	(send_string@s)
  1135                           	line	402
  1136                           	
  1137  0361                     l1102:	
  1138                           ;PR9B.c: 402: unsigned char i=0;
  1139  0361  01FA               	clrf	(send_string@i)
  1140                           	line	403
  1141                           ;PR9B.c: 403: while (s && *s)send_char (*s++);
  1142  0362  2B74               	goto	l1108
  1143                           	
  1144  0363                     l247:	
  1145                           	
  1146  0363                     l1104:	
  1147  0363  087B               	movf	(send_string@s),w
  1148  0364  0084               	movwf	fsr0
  1149  0365  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1150  036A  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1151                           	
  1152  036F                     l1106:	
  1153  036F  3001               	movlw	(01h)
  1154  0370  00F9               	movwf	(??_send_string+0)+0
  1155  0371  0879               	movf	(??_send_string+0)+0,w
  1156  0372  07FB               	addwf	(send_string@s),f
  1157  0373  2B74               	goto	l1108
  1158                           	
  1159  0374                     l246:	
  1160                           	
  1161  0374                     l1108:	
  1162  0374  087B               	movf	(send_string@s),w
  1163  0375  1D03               	skipz
  1164  0376  2B78               	goto	u660
  1165  0377  2B86               	goto	l251
  1166  0378                     u660:
  1167                           	
  1168  0378                     l1110:	
  1169  0378  087B               	movf	(send_string@s),w
  1170  0379  0084               	movwf	fsr0
  1171  037A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1172  037F  3800               	iorlw	0
  1173  0380  1D03               	skipz
  1174  0381  2B83               	goto	u671
  1175  0382  2B84               	goto	u670
  1176  0383                     u671:
  1177  0383  2B63               	goto	l1104
  1178  0384                     u670:
  1179  0384  2B86               	goto	l251
  1180                           	
  1181  0385                     l249:	
  1182  0385  2B86               	goto	l251
  1183                           	
  1184  0386                     l250:	
  1185                           	line	405
  1186                           	
  1187  0386                     l251:	
  1188  0386  0008               	return
  1189                           	opt stack 0
  1190                           GLOBAL	__end_of_send_string
  1191  0387                     	__end_of_send_string:
  1192                           	signat	_send_string,4216
  1193                           	global	_clearrow1
  1194                           
  1195 ;; *************** function _clearrow1 *****************
  1196 ;; Defined at:
  1197 ;;		line 137 in file "PR9B.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		None
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           psect	text386,local,class=CODE,delta=2,merge=1
  1224                           global __ptext386
  1225  02C1                     __ptext386:
  1226                           psect	text386
  1227                           	file	"PR9B.c"
  1228                           	line	137
  1229                           	global	__size_of_clearrow1
  1230  0007                     	__size_of_clearrow1	equ	__end_of_clearrow1-_clearrow1
  1231                           	
  1232  02C1                     _clearrow1:	
  1233                           	opt	stack 7
  1234                           ; Regs used in _clearrow1: []
  1235                           	line	138
  1236                           	
  1237  02C1                     l1046:	
  1238                           ;PR9B.c: 138: RE1=0;
  1239  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  1240  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  1241  02C3  1089               	bcf	(73/8),(73)&7	;volatile
  1242                           	line	139
  1243                           ;PR9B.c: 139: RE0=1;
  1244  02C4  1409               	bsf	(72/8),(72)&7	;volatile
  1245                           	line	140
  1246                           ;PR9B.c: 140: RA5=1;
  1247  02C5  1685               	bsf	(45/8),(45)&7	;volatile
  1248                           	line	141
  1249                           ;PR9B.c: 141: RA4=1;
  1250  02C6  1605               	bsf	(44/8),(44)&7	;volatile
  1251                           	line	142
  1252                           	
  1253  02C7                     l102:	
  1254  02C7  0008               	return
  1255                           	opt stack 0
  1256                           GLOBAL	__end_of_clearrow1
  1257  02C8                     	__end_of_clearrow1:
  1258                           	signat	_clearrow1,88
  1259                           	global	_scancolumn1
  1260                           
  1261 ;; *************** function _scancolumn1 *****************
  1262 ;; Defined at:
  1263 ;;		line 169 in file "PR9B.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;		None               void
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0
  1279 ;;      Temps:          1       0       0       0       0
  1280 ;;      Totals:         1       0       0       0       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    4
  1284 ;; This function calls:
  1285 ;;		_lcd_clr
  1286 ;;		_lcd_goto
  1287 ;;		_send_char
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           psect	text387,local,class=CODE,delta=2,merge=1
  1293                           global __ptext387
  1294  0654                     __ptext387:
  1295                           psect	text387
  1296                           	file	"PR9B.c"
  1297                           	line	169
  1298                           	global	__size_of_scancolumn1
  1299  00BE                     	__size_of_scancolumn1	equ	__end_of_scancolumn1-_scancolumn1
  1300                           	
  1301  0654                     _scancolumn1:	
  1302                           	opt	stack 3
  1303                           ; Regs used in _scancolumn1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1304                           	line	170
  1305                           	
  1306  0654                     l1112:	
  1307                           ;PR9B.c: 170: if(RA0==0)
  1308  0654  1283               	bcf	status, 5	;RP0=0, select bank0
  1309  0655  1303               	bcf	status, 6	;RP1=0, select bank0
  1310  0656  1805               	btfsc	(40/8),(40)&7	;volatile
  1311  0657  2E59               	goto	u681
  1312  0658  2E5A               	goto	u680
  1313  0659                     u681:
  1314  0659  2E84               	goto	l114
  1315  065A                     u680:
  1316  065A  2E5C               	goto	l115
  1317                           	line	172
  1318                           	
  1319  065B                     l1114:	
  1320                           ;PR9B.c: 171: {
  1321                           ;PR9B.c: 172: while(RA0==0)continue;
  1322  065B  2E5C               	goto	l115
  1323                           	
  1324  065C                     l116:	
  1325                           	
  1326  065C                     l115:	
  1327  065C  1C05               	btfss	(40/8),(40)&7	;volatile
  1328  065D  2E5F               	goto	u691
  1329  065E  2E60               	goto	u690
  1330  065F                     u691:
  1331  065F  2E5C               	goto	l115
  1332  0660                     u690:
  1333  0660  2E61               	goto	l1116
  1334                           	
  1335  0661                     l117:	
  1336                           	line	173
  1337                           	
  1338  0661                     l1116:	
  1339                           ;PR9B.c: 173: if(password_count==0)lcd_clr();
  1340  0661  08FC               	movf	(_password_count),f
  1341  0662  1D03               	skipz
  1342  0663  2E65               	goto	u701
  1343  0664  2E66               	goto	u700
  1344  0665                     u701:
  1345  0665  2E6B               	goto	l118
  1346  0666                     u700:
  1347                           	
  1348  0666                     l1118:	
  1349  0666  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1350                           	
  1351  066B                     l118:	
  1352                           	line	174
  1353                           ;PR9B.c: 174: lcd_goto(password_count);
  1354  066B  087C               	movf	(_password_count),w
  1355  066C  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1356                           	line	175
  1357                           ;PR9B.c: 175: send_char('*');
  1358  0671  302A               	movlw	(02Ah)
  1359  0672  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1360                           	line	176
  1361                           	
  1362  0677                     l1120:	
  1363                           ;PR9B.c: 176: keyin_char[password_count]='1';
  1364  0677  3031               	movlw	(031h)
  1365  0678  00FB               	movwf	(??_scancolumn1+0)+0
  1366  0679  087C               	movf	(_password_count),w
  1367  067A  3E20               	addlw	_keyin_char&0ffh
  1368  067B  0084               	movwf	fsr0
  1369  067C  087B               	movf	(??_scancolumn1+0)+0,w
  1370  067D  1383               	bcf	status, 7	;select IRP bank0
  1371  067E  0080               	movwf	indf
  1372                           	line	177
  1373                           	
  1374  067F                     l1122:	
  1375                           ;PR9B.c: 177: password_count+=1;
  1376  067F  3001               	movlw	(01h)
  1377  0680  00FB               	movwf	(??_scancolumn1+0)+0
  1378  0681  087B               	movf	(??_scancolumn1+0)+0,w
  1379  0682  07FC               	addwf	(_password_count),f
  1380                           	line	178
  1381                           ;PR9B.c: 178: }
  1382  0683  2F11               	goto	l137
  1383                           	line	179
  1384                           	
  1385  0684                     l114:	
  1386                           ;PR9B.c: 179: else if(RA1==0)
  1387  0684  1885               	btfsc	(41/8),(41)&7	;volatile
  1388  0685  2E87               	goto	u711
  1389  0686  2E88               	goto	u710
  1390  0687                     u711:
  1391  0687  2EB2               	goto	l120
  1392  0688                     u710:
  1393  0688  2E8A               	goto	l121
  1394                           	line	181
  1395                           	
  1396  0689                     l1124:	
  1397                           ;PR9B.c: 180: {
  1398                           ;PR9B.c: 181: while(RA1==0)continue;
  1399  0689  2E8A               	goto	l121
  1400                           	
  1401  068A                     l122:	
  1402                           	
  1403  068A                     l121:	
  1404  068A  1C85               	btfss	(41/8),(41)&7	;volatile
  1405  068B  2E8D               	goto	u721
  1406  068C  2E8E               	goto	u720
  1407  068D                     u721:
  1408  068D  2E8A               	goto	l121
  1409  068E                     u720:
  1410  068E  2E8F               	goto	l1126
  1411                           	
  1412  068F                     l123:	
  1413                           	line	182
  1414                           	
  1415  068F                     l1126:	
  1416                           ;PR9B.c: 182: if(password_count==0)lcd_clr();
  1417  068F  08FC               	movf	(_password_count),f
  1418  0690  1D03               	skipz
  1419  0691  2E93               	goto	u731
  1420  0692  2E94               	goto	u730
  1421  0693                     u731:
  1422  0693  2E99               	goto	l124
  1423  0694                     u730:
  1424                           	
  1425  0694                     l1128:	
  1426  0694  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1427                           	
  1428  0699                     l124:	
  1429                           	line	183
  1430                           ;PR9B.c: 183: lcd_goto(password_count);
  1431  0699  087C               	movf	(_password_count),w
  1432  069A  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1433                           	line	184
  1434                           ;PR9B.c: 184: send_char('*');
  1435  069F  302A               	movlw	(02Ah)
  1436  06A0  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1437                           	line	185
  1438                           	
  1439  06A5                     l1130:	
  1440                           ;PR9B.c: 185: keyin_char[password_count]='2';
  1441  06A5  3032               	movlw	(032h)
  1442  06A6  00FB               	movwf	(??_scancolumn1+0)+0
  1443  06A7  087C               	movf	(_password_count),w
  1444  06A8  3E20               	addlw	_keyin_char&0ffh
  1445  06A9  0084               	movwf	fsr0
  1446  06AA  087B               	movf	(??_scancolumn1+0)+0,w
  1447  06AB  1383               	bcf	status, 7	;select IRP bank0
  1448  06AC  0080               	movwf	indf
  1449                           	line	186
  1450                           	
  1451  06AD                     l1132:	
  1452                           ;PR9B.c: 186: password_count+=1;
  1453  06AD  3001               	movlw	(01h)
  1454  06AE  00FB               	movwf	(??_scancolumn1+0)+0
  1455  06AF  087B               	movf	(??_scancolumn1+0)+0,w
  1456  06B0  07FC               	addwf	(_password_count),f
  1457                           	line	187
  1458                           ;PR9B.c: 187: }
  1459  06B1  2F11               	goto	l137
  1460                           	line	188
  1461                           	
  1462  06B2                     l120:	
  1463                           ;PR9B.c: 188: else if(RA2==0)
  1464  06B2  1905               	btfsc	(42/8),(42)&7	;volatile
  1465  06B3  2EB5               	goto	u741
  1466  06B4  2EB6               	goto	u740
  1467  06B5                     u741:
  1468  06B5  2EE0               	goto	l126
  1469  06B6                     u740:
  1470  06B6  2EB8               	goto	l127
  1471                           	line	190
  1472                           	
  1473  06B7                     l1134:	
  1474                           ;PR9B.c: 189: {
  1475                           ;PR9B.c: 190: while(RA2==0)continue;
  1476  06B7  2EB8               	goto	l127
  1477                           	
  1478  06B8                     l128:	
  1479                           	
  1480  06B8                     l127:	
  1481  06B8  1D05               	btfss	(42/8),(42)&7	;volatile
  1482  06B9  2EBB               	goto	u751
  1483  06BA  2EBC               	goto	u750
  1484  06BB                     u751:
  1485  06BB  2EB8               	goto	l127
  1486  06BC                     u750:
  1487  06BC  2EBD               	goto	l1136
  1488                           	
  1489  06BD                     l129:	
  1490                           	line	191
  1491                           	
  1492  06BD                     l1136:	
  1493                           ;PR9B.c: 191: if(password_count==0)lcd_clr();
  1494  06BD  08FC               	movf	(_password_count),f
  1495  06BE  1D03               	skipz
  1496  06BF  2EC1               	goto	u761
  1497  06C0  2EC2               	goto	u760
  1498  06C1                     u761:
  1499  06C1  2EC7               	goto	l130
  1500  06C2                     u760:
  1501                           	
  1502  06C2                     l1138:	
  1503  06C2  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1504                           	
  1505  06C7                     l130:	
  1506                           	line	192
  1507                           ;PR9B.c: 192: lcd_goto(password_count);
  1508  06C7  087C               	movf	(_password_count),w
  1509  06C8  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1510                           	line	193
  1511                           ;PR9B.c: 193: send_char('*');
  1512  06CD  302A               	movlw	(02Ah)
  1513  06CE  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1514                           	line	194
  1515                           	
  1516  06D3                     l1140:	
  1517                           ;PR9B.c: 194: keyin_char[password_count]='3';
  1518  06D3  3033               	movlw	(033h)
  1519  06D4  00FB               	movwf	(??_scancolumn1+0)+0
  1520  06D5  087C               	movf	(_password_count),w
  1521  06D6  3E20               	addlw	_keyin_char&0ffh
  1522  06D7  0084               	movwf	fsr0
  1523  06D8  087B               	movf	(??_scancolumn1+0)+0,w
  1524  06D9  1383               	bcf	status, 7	;select IRP bank0
  1525  06DA  0080               	movwf	indf
  1526                           	line	195
  1527                           	
  1528  06DB                     l1142:	
  1529                           ;PR9B.c: 195: password_count+=1;
  1530  06DB  3001               	movlw	(01h)
  1531  06DC  00FB               	movwf	(??_scancolumn1+0)+0
  1532  06DD  087B               	movf	(??_scancolumn1+0)+0,w
  1533  06DE  07FC               	addwf	(_password_count),f
  1534                           	line	196
  1535                           ;PR9B.c: 196: }
  1536  06DF  2F11               	goto	l137
  1537                           	line	197
  1538                           	
  1539  06E0                     l126:	
  1540                           ;PR9B.c: 197: else if(RA3==0)
  1541  06E0  1985               	btfsc	(43/8),(43)&7	;volatile
  1542  06E1  2EE3               	goto	u771
  1543  06E2  2EE4               	goto	u770
  1544  06E3                     u771:
  1545  06E3  2F11               	goto	l137
  1546  06E4                     u770:
  1547  06E4  2EE6               	goto	l133
  1548                           	line	199
  1549                           	
  1550  06E5                     l1144:	
  1551                           ;PR9B.c: 198: {
  1552                           ;PR9B.c: 199: while(RA3==0)continue;
  1553  06E5  2EE6               	goto	l133
  1554                           	
  1555  06E6                     l134:	
  1556                           	
  1557  06E6                     l133:	
  1558  06E6  1D85               	btfss	(43/8),(43)&7	;volatile
  1559  06E7  2EE9               	goto	u781
  1560  06E8  2EEA               	goto	u780
  1561  06E9                     u781:
  1562  06E9  2EE6               	goto	l133
  1563  06EA                     u780:
  1564  06EA  2EEB               	goto	l1146
  1565                           	
  1566  06EB                     l135:	
  1567                           	line	200
  1568                           	
  1569  06EB                     l1146:	
  1570                           ;PR9B.c: 200: if(password_count==0)lcd_clr();
  1571  06EB  08FC               	movf	(_password_count),f
  1572  06EC  1D03               	skipz
  1573  06ED  2EEF               	goto	u791
  1574  06EE  2EF0               	goto	u790
  1575  06EF                     u791:
  1576  06EF  2EF5               	goto	l136
  1577  06F0                     u790:
  1578                           	
  1579  06F0                     l1148:	
  1580  06F0  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1581                           	
  1582  06F5                     l136:	
  1583                           	line	201
  1584                           ;PR9B.c: 201: lcd_goto(password_count);
  1585  06F5  087C               	movf	(_password_count),w
  1586  06F6  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1587                           	line	202
  1588                           ;PR9B.c: 202: send_char('*');
  1589  06FB  302A               	movlw	(02Ah)
  1590  06FC  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1591                           	line	203
  1592                           	
  1593  0701                     l1150:	
  1594                           ;PR9B.c: 203: keyin_char[password_count]='A';
  1595  0701  3041               	movlw	(041h)
  1596  0702  00FB               	movwf	(??_scancolumn1+0)+0
  1597  0703  087C               	movf	(_password_count),w
  1598  0704  3E20               	addlw	_keyin_char&0ffh
  1599  0705  0084               	movwf	fsr0
  1600  0706  087B               	movf	(??_scancolumn1+0)+0,w
  1601  0707  1383               	bcf	status, 7	;select IRP bank0
  1602  0708  0080               	movwf	indf
  1603                           	line	204
  1604                           	
  1605  0709                     l1152:	
  1606                           ;PR9B.c: 204: password_count+=1;
  1607  0709  3001               	movlw	(01h)
  1608  070A  00FB               	movwf	(??_scancolumn1+0)+0
  1609  070B  087B               	movf	(??_scancolumn1+0)+0,w
  1610  070C  07FC               	addwf	(_password_count),f
  1611  070D  2F11               	goto	l137
  1612                           	line	205
  1613                           	
  1614  070E                     l132:	
  1615  070E  2F11               	goto	l137
  1616                           	line	206
  1617                           	
  1618  070F                     l131:	
  1619  070F  2F11               	goto	l137
  1620                           	
  1621  0710                     l125:	
  1622  0710  2F11               	goto	l137
  1623                           	
  1624  0711                     l119:	
  1625                           	
  1626  0711                     l137:	
  1627  0711  0008               	return
  1628                           	opt stack 0
  1629                           GLOBAL	__end_of_scancolumn1
  1630  0712                     	__end_of_scancolumn1:
  1631                           	signat	_scancolumn1,88
  1632                           	global	_clearrow2
  1633                           
  1634 ;; *************** function _clearrow2 *****************
  1635 ;; Defined at:
  1636 ;;		line 145 in file "PR9B.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		None
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           psect	text388,local,class=CODE,delta=2,merge=1
  1663                           global __ptext388
  1664  02BA                     __ptext388:
  1665                           psect	text388
  1666                           	file	"PR9B.c"
  1667                           	line	145
  1668                           	global	__size_of_clearrow2
  1669  0007                     	__size_of_clearrow2	equ	__end_of_clearrow2-_clearrow2
  1670                           	
  1671  02BA                     _clearrow2:	
  1672                           	opt	stack 7
  1673                           ; Regs used in _clearrow2: []
  1674                           	line	146
  1675                           	
  1676  02BA                     l1048:	
  1677                           ;PR9B.c: 146: RE1=1;
  1678  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1679  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1680  02BC  1489               	bsf	(73/8),(73)&7	;volatile
  1681                           	line	147
  1682                           ;PR9B.c: 147: RE0=0;
  1683  02BD  1009               	bcf	(72/8),(72)&7	;volatile
  1684                           	line	148
  1685                           ;PR9B.c: 148: RA5=1;
  1686  02BE  1685               	bsf	(45/8),(45)&7	;volatile
  1687                           	line	149
  1688                           ;PR9B.c: 149: RA4=1;
  1689  02BF  1605               	bsf	(44/8),(44)&7	;volatile
  1690                           	line	150
  1691                           	
  1692  02C0                     l105:	
  1693  02C0  0008               	return
  1694                           	opt stack 0
  1695                           GLOBAL	__end_of_clearrow2
  1696  02C1                     	__end_of_clearrow2:
  1697                           	signat	_clearrow2,88
  1698                           	global	_scancolumn2
  1699                           
  1700 ;; *************** function _scancolumn2 *****************
  1701 ;; Defined at:
  1702 ;;		line 209 in file "PR9B.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;		None               void
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          1       0       0       0       0
  1719 ;;      Totals:         1       0       0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_lcd_clr
  1725 ;;		_lcd_goto
  1726 ;;		_send_char
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           psect	text389,local,class=CODE,delta=2,merge=1
  1732                           global __ptext389
  1733  0596                     __ptext389:
  1734                           psect	text389
  1735                           	file	"PR9B.c"
  1736                           	line	209
  1737                           	global	__size_of_scancolumn2
  1738  00BE                     	__size_of_scancolumn2	equ	__end_of_scancolumn2-_scancolumn2
  1739                           	
  1740  0596                     _scancolumn2:	
  1741                           	opt	stack 3
  1742                           ; Regs used in _scancolumn2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1743                           	line	210
  1744                           	
  1745  0596                     l1154:	
  1746                           ;PR9B.c: 210: if(RA0==0)
  1747  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  1748  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  1749  0598  1805               	btfsc	(40/8),(40)&7	;volatile
  1750  0599  2D9B               	goto	u801
  1751  059A  2D9C               	goto	u800
  1752  059B                     u801:
  1753  059B  2DC6               	goto	l140
  1754  059C                     u800:
  1755  059C  2D9E               	goto	l141
  1756                           	line	212
  1757                           	
  1758  059D                     l1156:	
  1759                           ;PR9B.c: 211: {
  1760                           ;PR9B.c: 212: while(RA0==0)continue;
  1761  059D  2D9E               	goto	l141
  1762                           	
  1763  059E                     l142:	
  1764                           	
  1765  059E                     l141:	
  1766  059E  1C05               	btfss	(40/8),(40)&7	;volatile
  1767  059F  2DA1               	goto	u811
  1768  05A0  2DA2               	goto	u810
  1769  05A1                     u811:
  1770  05A1  2D9E               	goto	l141
  1771  05A2                     u810:
  1772  05A2  2DA3               	goto	l1158
  1773                           	
  1774  05A3                     l143:	
  1775                           	line	213
  1776                           	
  1777  05A3                     l1158:	
  1778                           ;PR9B.c: 213: if(password_count==0)lcd_clr();
  1779  05A3  08FC               	movf	(_password_count),f
  1780  05A4  1D03               	skipz
  1781  05A5  2DA7               	goto	u821
  1782  05A6  2DA8               	goto	u820
  1783  05A7                     u821:
  1784  05A7  2DAD               	goto	l144
  1785  05A8                     u820:
  1786                           	
  1787  05A8                     l1160:	
  1788  05A8  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1789                           	
  1790  05AD                     l144:	
  1791                           	line	214
  1792                           ;PR9B.c: 214: lcd_goto(password_count);
  1793  05AD  087C               	movf	(_password_count),w
  1794  05AE  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1795                           	line	215
  1796                           ;PR9B.c: 215: send_char('*');
  1797  05B3  302A               	movlw	(02Ah)
  1798  05B4  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1799                           	line	216
  1800                           	
  1801  05B9                     l1162:	
  1802                           ;PR9B.c: 216: keyin_char[password_count]='4';
  1803  05B9  3034               	movlw	(034h)
  1804  05BA  00FB               	movwf	(??_scancolumn2+0)+0
  1805  05BB  087C               	movf	(_password_count),w
  1806  05BC  3E20               	addlw	_keyin_char&0ffh
  1807  05BD  0084               	movwf	fsr0
  1808  05BE  087B               	movf	(??_scancolumn2+0)+0,w
  1809  05BF  1383               	bcf	status, 7	;select IRP bank0
  1810  05C0  0080               	movwf	indf
  1811                           	line	217
  1812                           	
  1813  05C1                     l1164:	
  1814                           ;PR9B.c: 217: password_count+=1;
  1815  05C1  3001               	movlw	(01h)
  1816  05C2  00FB               	movwf	(??_scancolumn2+0)+0
  1817  05C3  087B               	movf	(??_scancolumn2+0)+0,w
  1818  05C4  07FC               	addwf	(_password_count),f
  1819                           	line	218
  1820                           ;PR9B.c: 218: }
  1821  05C5  2E53               	goto	l163
  1822                           	line	219
  1823                           	
  1824  05C6                     l140:	
  1825                           ;PR9B.c: 219: else if(RA1==0)
  1826  05C6  1885               	btfsc	(41/8),(41)&7	;volatile
  1827  05C7  2DC9               	goto	u831
  1828  05C8  2DCA               	goto	u830
  1829  05C9                     u831:
  1830  05C9  2DF4               	goto	l146
  1831  05CA                     u830:
  1832  05CA  2DCC               	goto	l147
  1833                           	line	221
  1834                           	
  1835  05CB                     l1166:	
  1836                           ;PR9B.c: 220: {
  1837                           ;PR9B.c: 221: while(RA1==0)continue;
  1838  05CB  2DCC               	goto	l147
  1839                           	
  1840  05CC                     l148:	
  1841                           	
  1842  05CC                     l147:	
  1843  05CC  1C85               	btfss	(41/8),(41)&7	;volatile
  1844  05CD  2DCF               	goto	u841
  1845  05CE  2DD0               	goto	u840
  1846  05CF                     u841:
  1847  05CF  2DCC               	goto	l147
  1848  05D0                     u840:
  1849  05D0  2DD1               	goto	l1168
  1850                           	
  1851  05D1                     l149:	
  1852                           	line	222
  1853                           	
  1854  05D1                     l1168:	
  1855                           ;PR9B.c: 222: if(password_count==0)lcd_clr();
  1856  05D1  08FC               	movf	(_password_count),f
  1857  05D2  1D03               	skipz
  1858  05D3  2DD5               	goto	u851
  1859  05D4  2DD6               	goto	u850
  1860  05D5                     u851:
  1861  05D5  2DDB               	goto	l150
  1862  05D6                     u850:
  1863                           	
  1864  05D6                     l1170:	
  1865  05D6  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1866                           	
  1867  05DB                     l150:	
  1868                           	line	223
  1869                           ;PR9B.c: 223: lcd_goto(password_count);
  1870  05DB  087C               	movf	(_password_count),w
  1871  05DC  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1872                           	line	224
  1873                           ;PR9B.c: 224: send_char('*');
  1874  05E1  302A               	movlw	(02Ah)
  1875  05E2  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1876                           	line	225
  1877                           	
  1878  05E7                     l1172:	
  1879                           ;PR9B.c: 225: keyin_char[password_count]='5';
  1880  05E7  3035               	movlw	(035h)
  1881  05E8  00FB               	movwf	(??_scancolumn2+0)+0
  1882  05E9  087C               	movf	(_password_count),w
  1883  05EA  3E20               	addlw	_keyin_char&0ffh
  1884  05EB  0084               	movwf	fsr0
  1885  05EC  087B               	movf	(??_scancolumn2+0)+0,w
  1886  05ED  1383               	bcf	status, 7	;select IRP bank0
  1887  05EE  0080               	movwf	indf
  1888                           	line	226
  1889                           	
  1890  05EF                     l1174:	
  1891                           ;PR9B.c: 226: password_count+=1;
  1892  05EF  3001               	movlw	(01h)
  1893  05F0  00FB               	movwf	(??_scancolumn2+0)+0
  1894  05F1  087B               	movf	(??_scancolumn2+0)+0,w
  1895  05F2  07FC               	addwf	(_password_count),f
  1896                           	line	227
  1897                           ;PR9B.c: 227: }
  1898  05F3  2E53               	goto	l163
  1899                           	line	228
  1900                           	
  1901  05F4                     l146:	
  1902                           ;PR9B.c: 228: else if(RA2==0)
  1903  05F4  1905               	btfsc	(42/8),(42)&7	;volatile
  1904  05F5  2DF7               	goto	u861
  1905  05F6  2DF8               	goto	u860
  1906  05F7                     u861:
  1907  05F7  2E22               	goto	l152
  1908  05F8                     u860:
  1909  05F8  2DFA               	goto	l153
  1910                           	line	230
  1911                           	
  1912  05F9                     l1176:	
  1913                           ;PR9B.c: 229: {
  1914                           ;PR9B.c: 230: while(RA2==0)continue;
  1915  05F9  2DFA               	goto	l153
  1916                           	
  1917  05FA                     l154:	
  1918                           	
  1919  05FA                     l153:	
  1920  05FA  1D05               	btfss	(42/8),(42)&7	;volatile
  1921  05FB  2DFD               	goto	u871
  1922  05FC  2DFE               	goto	u870
  1923  05FD                     u871:
  1924  05FD  2DFA               	goto	l153
  1925  05FE                     u870:
  1926  05FE  2DFF               	goto	l1178
  1927                           	
  1928  05FF                     l155:	
  1929                           	line	231
  1930                           	
  1931  05FF                     l1178:	
  1932                           ;PR9B.c: 231: if(password_count==0)lcd_clr();
  1933  05FF  08FC               	movf	(_password_count),f
  1934  0600  1D03               	skipz
  1935  0601  2E03               	goto	u881
  1936  0602  2E04               	goto	u880
  1937  0603                     u881:
  1938  0603  2E09               	goto	l156
  1939  0604                     u880:
  1940                           	
  1941  0604                     l1180:	
  1942  0604  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  1943                           	
  1944  0609                     l156:	
  1945                           	line	232
  1946                           ;PR9B.c: 232: lcd_goto(password_count);
  1947  0609  087C               	movf	(_password_count),w
  1948  060A  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  1949                           	line	233
  1950                           ;PR9B.c: 233: send_char('*');
  1951  060F  302A               	movlw	(02Ah)
  1952  0610  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  1953                           	line	234
  1954                           	
  1955  0615                     l1182:	
  1956                           ;PR9B.c: 234: keyin_char[password_count]='6';
  1957  0615  3036               	movlw	(036h)
  1958  0616  00FB               	movwf	(??_scancolumn2+0)+0
  1959  0617  087C               	movf	(_password_count),w
  1960  0618  3E20               	addlw	_keyin_char&0ffh
  1961  0619  0084               	movwf	fsr0
  1962  061A  087B               	movf	(??_scancolumn2+0)+0,w
  1963  061B  1383               	bcf	status, 7	;select IRP bank0
  1964  061C  0080               	movwf	indf
  1965                           	line	235
  1966                           	
  1967  061D                     l1184:	
  1968                           ;PR9B.c: 235: password_count+=1;
  1969  061D  3001               	movlw	(01h)
  1970  061E  00FB               	movwf	(??_scancolumn2+0)+0
  1971  061F  087B               	movf	(??_scancolumn2+0)+0,w
  1972  0620  07FC               	addwf	(_password_count),f
  1973                           	line	236
  1974                           ;PR9B.c: 236: }
  1975  0621  2E53               	goto	l163
  1976                           	line	237
  1977                           	
  1978  0622                     l152:	
  1979                           ;PR9B.c: 237: else if(RA3==0)
  1980  0622  1985               	btfsc	(43/8),(43)&7	;volatile
  1981  0623  2E25               	goto	u891
  1982  0624  2E26               	goto	u890
  1983  0625                     u891:
  1984  0625  2E53               	goto	l163
  1985  0626                     u890:
  1986  0626  2E28               	goto	l159
  1987                           	line	239
  1988                           	
  1989  0627                     l1186:	
  1990                           ;PR9B.c: 238: {
  1991                           ;PR9B.c: 239: while(RA3==0)continue;
  1992  0627  2E28               	goto	l159
  1993                           	
  1994  0628                     l160:	
  1995                           	
  1996  0628                     l159:	
  1997  0628  1D85               	btfss	(43/8),(43)&7	;volatile
  1998  0629  2E2B               	goto	u901
  1999  062A  2E2C               	goto	u900
  2000  062B                     u901:
  2001  062B  2E28               	goto	l159
  2002  062C                     u900:
  2003  062C  2E2D               	goto	l1188
  2004                           	
  2005  062D                     l161:	
  2006                           	line	240
  2007                           	
  2008  062D                     l1188:	
  2009                           ;PR9B.c: 240: if(password_count==0)lcd_clr();
  2010  062D  08FC               	movf	(_password_count),f
  2011  062E  1D03               	skipz
  2012  062F  2E31               	goto	u911
  2013  0630  2E32               	goto	u910
  2014  0631                     u911:
  2015  0631  2E37               	goto	l162
  2016  0632                     u910:
  2017                           	
  2018  0632                     l1190:	
  2019  0632  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2020                           	
  2021  0637                     l162:	
  2022                           	line	241
  2023                           ;PR9B.c: 241: lcd_goto(password_count);
  2024  0637  087C               	movf	(_password_count),w
  2025  0638  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2026                           	line	242
  2027                           ;PR9B.c: 242: send_char('*');
  2028  063D  302A               	movlw	(02Ah)
  2029  063E  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2030                           	line	243
  2031                           	
  2032  0643                     l1192:	
  2033                           ;PR9B.c: 243: keyin_char[password_count]='B';
  2034  0643  3042               	movlw	(042h)
  2035  0644  00FB               	movwf	(??_scancolumn2+0)+0
  2036  0645  087C               	movf	(_password_count),w
  2037  0646  3E20               	addlw	_keyin_char&0ffh
  2038  0647  0084               	movwf	fsr0
  2039  0648  087B               	movf	(??_scancolumn2+0)+0,w
  2040  0649  1383               	bcf	status, 7	;select IRP bank0
  2041  064A  0080               	movwf	indf
  2042                           	line	244
  2043                           	
  2044  064B                     l1194:	
  2045                           ;PR9B.c: 244: password_count+=1;
  2046  064B  3001               	movlw	(01h)
  2047  064C  00FB               	movwf	(??_scancolumn2+0)+0
  2048  064D  087B               	movf	(??_scancolumn2+0)+0,w
  2049  064E  07FC               	addwf	(_password_count),f
  2050  064F  2E53               	goto	l163
  2051                           	line	245
  2052                           	
  2053  0650                     l158:	
  2054  0650  2E53               	goto	l163
  2055                           	line	246
  2056                           	
  2057  0651                     l157:	
  2058  0651  2E53               	goto	l163
  2059                           	
  2060  0652                     l151:	
  2061  0652  2E53               	goto	l163
  2062                           	
  2063  0653                     l145:	
  2064                           	
  2065  0653                     l163:	
  2066  0653  0008               	return
  2067                           	opt stack 0
  2068                           GLOBAL	__end_of_scancolumn2
  2069  0654                     	__end_of_scancolumn2:
  2070                           	signat	_scancolumn2,88
  2071                           	global	_clearrow3
  2072                           
  2073 ;; *************** function _clearrow3 *****************
  2074 ;; Defined at:
  2075 ;;		line 153 in file "PR9B.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;		None               void
  2082 ;; Registers used:
  2083 ;;		None
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           psect	text390,local,class=CODE,delta=2,merge=1
  2102                           global __ptext390
  2103  02B3                     __ptext390:
  2104                           psect	text390
  2105                           	file	"PR9B.c"
  2106                           	line	153
  2107                           	global	__size_of_clearrow3
  2108  0007                     	__size_of_clearrow3	equ	__end_of_clearrow3-_clearrow3
  2109                           	
  2110  02B3                     _clearrow3:	
  2111                           	opt	stack 7
  2112                           ; Regs used in _clearrow3: []
  2113                           	line	154
  2114                           	
  2115  02B3                     l1050:	
  2116                           ;PR9B.c: 154: RE1=1;
  2117  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  02B5  1489               	bsf	(73/8),(73)&7	;volatile
  2120                           	line	155
  2121                           ;PR9B.c: 155: RE0=1;
  2122  02B6  1409               	bsf	(72/8),(72)&7	;volatile
  2123                           	line	156
  2124                           ;PR9B.c: 156: RA5=0;
  2125  02B7  1285               	bcf	(45/8),(45)&7	;volatile
  2126                           	line	157
  2127                           ;PR9B.c: 157: RA4=1;
  2128  02B8  1605               	bsf	(44/8),(44)&7	;volatile
  2129                           	line	158
  2130                           	
  2131  02B9                     l108:	
  2132  02B9  0008               	return
  2133                           	opt stack 0
  2134                           GLOBAL	__end_of_clearrow3
  2135  02BA                     	__end_of_clearrow3:
  2136                           	signat	_clearrow3,88
  2137                           	global	_scancolumn3
  2138                           
  2139 ;; *************** function _scancolumn3 *****************
  2140 ;; Defined at:
  2141 ;;		line 249 in file "PR9B.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0
  2157 ;;      Temps:          1       0       0       0       0
  2158 ;;      Totals:         1       0       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    4
  2162 ;; This function calls:
  2163 ;;		_lcd_clr
  2164 ;;		_lcd_goto
  2165 ;;		_send_char
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           psect	text391,local,class=CODE,delta=2,merge=1
  2171                           global __ptext391
  2172  04D8                     __ptext391:
  2173                           psect	text391
  2174                           	file	"PR9B.c"
  2175                           	line	249
  2176                           	global	__size_of_scancolumn3
  2177  00BE                     	__size_of_scancolumn3	equ	__end_of_scancolumn3-_scancolumn3
  2178                           	
  2179  04D8                     _scancolumn3:	
  2180                           	opt	stack 3
  2181                           ; Regs used in _scancolumn3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2182                           	line	250
  2183                           	
  2184  04D8                     l1196:	
  2185                           ;PR9B.c: 250: if(RA0==0)
  2186  04D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  04D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  04DA  1805               	btfsc	(40/8),(40)&7	;volatile
  2189  04DB  2CDD               	goto	u921
  2190  04DC  2CDE               	goto	u920
  2191  04DD                     u921:
  2192  04DD  2D08               	goto	l166
  2193  04DE                     u920:
  2194  04DE  2CE0               	goto	l167
  2195                           	line	252
  2196                           	
  2197  04DF                     l1198:	
  2198                           ;PR9B.c: 251: {
  2199                           ;PR9B.c: 252: while(RA0==0)continue;
  2200  04DF  2CE0               	goto	l167
  2201                           	
  2202  04E0                     l168:	
  2203                           	
  2204  04E0                     l167:	
  2205  04E0  1C05               	btfss	(40/8),(40)&7	;volatile
  2206  04E1  2CE3               	goto	u931
  2207  04E2  2CE4               	goto	u930
  2208  04E3                     u931:
  2209  04E3  2CE0               	goto	l167
  2210  04E4                     u930:
  2211  04E4  2CE5               	goto	l1200
  2212                           	
  2213  04E5                     l169:	
  2214                           	line	253
  2215                           	
  2216  04E5                     l1200:	
  2217                           ;PR9B.c: 253: if(password_count==0)lcd_clr();
  2218  04E5  08FC               	movf	(_password_count),f
  2219  04E6  1D03               	skipz
  2220  04E7  2CE9               	goto	u941
  2221  04E8  2CEA               	goto	u940
  2222  04E9                     u941:
  2223  04E9  2CEF               	goto	l170
  2224  04EA                     u940:
  2225                           	
  2226  04EA                     l1202:	
  2227  04EA  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2228                           	
  2229  04EF                     l170:	
  2230                           	line	254
  2231                           ;PR9B.c: 254: lcd_goto(password_count);
  2232  04EF  087C               	movf	(_password_count),w
  2233  04F0  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2234                           	line	255
  2235                           ;PR9B.c: 255: send_char('*');
  2236  04F5  302A               	movlw	(02Ah)
  2237  04F6  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2238                           	line	256
  2239                           	
  2240  04FB                     l1204:	
  2241                           ;PR9B.c: 256: keyin_char[password_count]='7';
  2242  04FB  3037               	movlw	(037h)
  2243  04FC  00FB               	movwf	(??_scancolumn3+0)+0
  2244  04FD  087C               	movf	(_password_count),w
  2245  04FE  3E20               	addlw	_keyin_char&0ffh
  2246  04FF  0084               	movwf	fsr0
  2247  0500  087B               	movf	(??_scancolumn3+0)+0,w
  2248  0501  1383               	bcf	status, 7	;select IRP bank0
  2249  0502  0080               	movwf	indf
  2250                           	line	257
  2251                           	
  2252  0503                     l1206:	
  2253                           ;PR9B.c: 257: password_count+=1;
  2254  0503  3001               	movlw	(01h)
  2255  0504  00FB               	movwf	(??_scancolumn3+0)+0
  2256  0505  087B               	movf	(??_scancolumn3+0)+0,w
  2257  0506  07FC               	addwf	(_password_count),f
  2258                           	line	258
  2259                           ;PR9B.c: 258: }
  2260  0507  2D95               	goto	l189
  2261                           	line	259
  2262                           	
  2263  0508                     l166:	
  2264                           ;PR9B.c: 259: else if(RA1==0)
  2265  0508  1885               	btfsc	(41/8),(41)&7	;volatile
  2266  0509  2D0B               	goto	u951
  2267  050A  2D0C               	goto	u950
  2268  050B                     u951:
  2269  050B  2D36               	goto	l172
  2270  050C                     u950:
  2271  050C  2D0E               	goto	l173
  2272                           	line	261
  2273                           	
  2274  050D                     l1208:	
  2275                           ;PR9B.c: 260: {
  2276                           ;PR9B.c: 261: while(RA1==0)continue;
  2277  050D  2D0E               	goto	l173
  2278                           	
  2279  050E                     l174:	
  2280                           	
  2281  050E                     l173:	
  2282  050E  1C85               	btfss	(41/8),(41)&7	;volatile
  2283  050F  2D11               	goto	u961
  2284  0510  2D12               	goto	u960
  2285  0511                     u961:
  2286  0511  2D0E               	goto	l173
  2287  0512                     u960:
  2288  0512  2D13               	goto	l1210
  2289                           	
  2290  0513                     l175:	
  2291                           	line	262
  2292                           	
  2293  0513                     l1210:	
  2294                           ;PR9B.c: 262: if(password_count==0)lcd_clr();
  2295  0513  08FC               	movf	(_password_count),f
  2296  0514  1D03               	skipz
  2297  0515  2D17               	goto	u971
  2298  0516  2D18               	goto	u970
  2299  0517                     u971:
  2300  0517  2D1D               	goto	l176
  2301  0518                     u970:
  2302                           	
  2303  0518                     l1212:	
  2304  0518  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2305                           	
  2306  051D                     l176:	
  2307                           	line	263
  2308                           ;PR9B.c: 263: lcd_goto(password_count);
  2309  051D  087C               	movf	(_password_count),w
  2310  051E  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2311                           	line	264
  2312                           ;PR9B.c: 264: send_char('*');
  2313  0523  302A               	movlw	(02Ah)
  2314  0524  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2315                           	line	265
  2316                           	
  2317  0529                     l1214:	
  2318                           ;PR9B.c: 265: keyin_char[password_count]='8';
  2319  0529  3038               	movlw	(038h)
  2320  052A  00FB               	movwf	(??_scancolumn3+0)+0
  2321  052B  087C               	movf	(_password_count),w
  2322  052C  3E20               	addlw	_keyin_char&0ffh
  2323  052D  0084               	movwf	fsr0
  2324  052E  087B               	movf	(??_scancolumn3+0)+0,w
  2325  052F  1383               	bcf	status, 7	;select IRP bank0
  2326  0530  0080               	movwf	indf
  2327                           	line	266
  2328                           	
  2329  0531                     l1216:	
  2330                           ;PR9B.c: 266: password_count+=1;
  2331  0531  3001               	movlw	(01h)
  2332  0532  00FB               	movwf	(??_scancolumn3+0)+0
  2333  0533  087B               	movf	(??_scancolumn3+0)+0,w
  2334  0534  07FC               	addwf	(_password_count),f
  2335                           	line	267
  2336                           ;PR9B.c: 267: }
  2337  0535  2D95               	goto	l189
  2338                           	line	268
  2339                           	
  2340  0536                     l172:	
  2341                           ;PR9B.c: 268: else if(RA2==0)
  2342  0536  1905               	btfsc	(42/8),(42)&7	;volatile
  2343  0537  2D39               	goto	u981
  2344  0538  2D3A               	goto	u980
  2345  0539                     u981:
  2346  0539  2D64               	goto	l178
  2347  053A                     u980:
  2348  053A  2D3C               	goto	l179
  2349                           	line	270
  2350                           	
  2351  053B                     l1218:	
  2352                           ;PR9B.c: 269: {
  2353                           ;PR9B.c: 270: while(RA2==0)continue;
  2354  053B  2D3C               	goto	l179
  2355                           	
  2356  053C                     l180:	
  2357                           	
  2358  053C                     l179:	
  2359  053C  1D05               	btfss	(42/8),(42)&7	;volatile
  2360  053D  2D3F               	goto	u991
  2361  053E  2D40               	goto	u990
  2362  053F                     u991:
  2363  053F  2D3C               	goto	l179
  2364  0540                     u990:
  2365  0540  2D41               	goto	l1220
  2366                           	
  2367  0541                     l181:	
  2368                           	line	271
  2369                           	
  2370  0541                     l1220:	
  2371                           ;PR9B.c: 271: if(password_count==0)lcd_clr();
  2372  0541  08FC               	movf	(_password_count),f
  2373  0542  1D03               	skipz
  2374  0543  2D45               	goto	u1001
  2375  0544  2D46               	goto	u1000
  2376  0545                     u1001:
  2377  0545  2D4B               	goto	l182
  2378  0546                     u1000:
  2379                           	
  2380  0546                     l1222:	
  2381  0546  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2382                           	
  2383  054B                     l182:	
  2384                           	line	272
  2385                           ;PR9B.c: 272: lcd_goto(password_count);
  2386  054B  087C               	movf	(_password_count),w
  2387  054C  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2388                           	line	273
  2389                           ;PR9B.c: 273: send_char('*');
  2390  0551  302A               	movlw	(02Ah)
  2391  0552  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2392                           	line	274
  2393                           	
  2394  0557                     l1224:	
  2395                           ;PR9B.c: 274: keyin_char[password_count]='9';
  2396  0557  3039               	movlw	(039h)
  2397  0558  00FB               	movwf	(??_scancolumn3+0)+0
  2398  0559  087C               	movf	(_password_count),w
  2399  055A  3E20               	addlw	_keyin_char&0ffh
  2400  055B  0084               	movwf	fsr0
  2401  055C  087B               	movf	(??_scancolumn3+0)+0,w
  2402  055D  1383               	bcf	status, 7	;select IRP bank0
  2403  055E  0080               	movwf	indf
  2404                           	line	275
  2405                           	
  2406  055F                     l1226:	
  2407                           ;PR9B.c: 275: password_count+=1;
  2408  055F  3001               	movlw	(01h)
  2409  0560  00FB               	movwf	(??_scancolumn3+0)+0
  2410  0561  087B               	movf	(??_scancolumn3+0)+0,w
  2411  0562  07FC               	addwf	(_password_count),f
  2412                           	line	276
  2413                           ;PR9B.c: 276: }
  2414  0563  2D95               	goto	l189
  2415                           	line	277
  2416                           	
  2417  0564                     l178:	
  2418                           ;PR9B.c: 277: else if(RA3==0)
  2419  0564  1985               	btfsc	(43/8),(43)&7	;volatile
  2420  0565  2D67               	goto	u1011
  2421  0566  2D68               	goto	u1010
  2422  0567                     u1011:
  2423  0567  2D95               	goto	l189
  2424  0568                     u1010:
  2425  0568  2D6A               	goto	l185
  2426                           	line	279
  2427                           	
  2428  0569                     l1228:	
  2429                           ;PR9B.c: 278: {
  2430                           ;PR9B.c: 279: while(RA3==0)continue;
  2431  0569  2D6A               	goto	l185
  2432                           	
  2433  056A                     l186:	
  2434                           	
  2435  056A                     l185:	
  2436  056A  1D85               	btfss	(43/8),(43)&7	;volatile
  2437  056B  2D6D               	goto	u1021
  2438  056C  2D6E               	goto	u1020
  2439  056D                     u1021:
  2440  056D  2D6A               	goto	l185
  2441  056E                     u1020:
  2442  056E  2D6F               	goto	l1230
  2443                           	
  2444  056F                     l187:	
  2445                           	line	280
  2446                           	
  2447  056F                     l1230:	
  2448                           ;PR9B.c: 280: if(password_count==0)lcd_clr();
  2449  056F  08FC               	movf	(_password_count),f
  2450  0570  1D03               	skipz
  2451  0571  2D73               	goto	u1031
  2452  0572  2D74               	goto	u1030
  2453  0573                     u1031:
  2454  0573  2D79               	goto	l188
  2455  0574                     u1030:
  2456                           	
  2457  0574                     l1232:	
  2458  0574  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2459                           	
  2460  0579                     l188:	
  2461                           	line	281
  2462                           ;PR9B.c: 281: lcd_goto(password_count);
  2463  0579  087C               	movf	(_password_count),w
  2464  057A  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2465                           	line	282
  2466                           ;PR9B.c: 282: send_char('*');
  2467  057F  302A               	movlw	(02Ah)
  2468  0580  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2469                           	line	283
  2470                           	
  2471  0585                     l1234:	
  2472                           ;PR9B.c: 283: keyin_char[password_count]='C';
  2473  0585  3043               	movlw	(043h)
  2474  0586  00FB               	movwf	(??_scancolumn3+0)+0
  2475  0587  087C               	movf	(_password_count),w
  2476  0588  3E20               	addlw	_keyin_char&0ffh
  2477  0589  0084               	movwf	fsr0
  2478  058A  087B               	movf	(??_scancolumn3+0)+0,w
  2479  058B  1383               	bcf	status, 7	;select IRP bank0
  2480  058C  0080               	movwf	indf
  2481                           	line	284
  2482                           	
  2483  058D                     l1236:	
  2484                           ;PR9B.c: 284: password_count+=1;
  2485  058D  3001               	movlw	(01h)
  2486  058E  00FB               	movwf	(??_scancolumn3+0)+0
  2487  058F  087B               	movf	(??_scancolumn3+0)+0,w
  2488  0590  07FC               	addwf	(_password_count),f
  2489  0591  2D95               	goto	l189
  2490                           	line	285
  2491                           	
  2492  0592                     l184:	
  2493  0592  2D95               	goto	l189
  2494                           	line	286
  2495                           	
  2496  0593                     l183:	
  2497  0593  2D95               	goto	l189
  2498                           	
  2499  0594                     l177:	
  2500  0594  2D95               	goto	l189
  2501                           	
  2502  0595                     l171:	
  2503                           	
  2504  0595                     l189:	
  2505  0595  0008               	return
  2506                           	opt stack 0
  2507                           GLOBAL	__end_of_scancolumn3
  2508  0596                     	__end_of_scancolumn3:
  2509                           	signat	_scancolumn3,88
  2510                           	global	_clearrow4
  2511                           
  2512 ;; *************** function _clearrow4 *****************
  2513 ;; Defined at:
  2514 ;;		line 161 in file "PR9B.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		None
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2528 ;;      Params:         0       0       0       0       0
  2529 ;;      Locals:         0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0
  2531 ;;      Totals:         0       0       0       0       0
  2532 ;;Total ram usage:        0 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_main
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           psect	text392,local,class=CODE,delta=2,merge=1
  2541                           global __ptext392
  2542  02AC                     __ptext392:
  2543                           psect	text392
  2544                           	file	"PR9B.c"
  2545                           	line	161
  2546                           	global	__size_of_clearrow4
  2547  0007                     	__size_of_clearrow4	equ	__end_of_clearrow4-_clearrow4
  2548                           	
  2549  02AC                     _clearrow4:	
  2550                           	opt	stack 7
  2551                           ; Regs used in _clearrow4: []
  2552                           	line	162
  2553                           	
  2554  02AC                     l1052:	
  2555                           ;PR9B.c: 162: RE1=1;
  2556  02AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  02AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  02AE  1489               	bsf	(73/8),(73)&7	;volatile
  2559                           	line	163
  2560                           ;PR9B.c: 163: RE0=1;
  2561  02AF  1409               	bsf	(72/8),(72)&7	;volatile
  2562                           	line	164
  2563                           ;PR9B.c: 164: RA5=1;
  2564  02B0  1685               	bsf	(45/8),(45)&7	;volatile
  2565                           	line	165
  2566                           ;PR9B.c: 165: RA4=0;
  2567  02B1  1205               	bcf	(44/8),(44)&7	;volatile
  2568                           	line	166
  2569                           	
  2570  02B2                     l111:	
  2571  02B2  0008               	return
  2572                           	opt stack 0
  2573                           GLOBAL	__end_of_clearrow4
  2574  02B3                     	__end_of_clearrow4:
  2575                           	signat	_clearrow4,88
  2576                           	global	_scancolumn4
  2577                           
  2578 ;; *************** function _scancolumn4 *****************
  2579 ;; Defined at:
  2580 ;;		line 289 in file "PR9B.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;		None               void
  2587 ;; Registers used:
  2588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          1       0       0       0       0
  2597 ;;      Totals:         1       0       0       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    4
  2601 ;; This function calls:
  2602 ;;		_lcd_clr
  2603 ;;		_lcd_goto
  2604 ;;		_send_char
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           psect	text393,local,class=CODE,delta=2,merge=1
  2610                           global __ptext393
  2611  041A                     __ptext393:
  2612                           psect	text393
  2613                           	file	"PR9B.c"
  2614                           	line	289
  2615                           	global	__size_of_scancolumn4
  2616  00BE                     	__size_of_scancolumn4	equ	__end_of_scancolumn4-_scancolumn4
  2617                           	
  2618  041A                     _scancolumn4:	
  2619                           	opt	stack 3
  2620                           ; Regs used in _scancolumn4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2621                           	line	290
  2622                           	
  2623  041A                     l1238:	
  2624                           ;PR9B.c: 290: if(RA0==0)
  2625  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  2626  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  2627  041C  1805               	btfsc	(40/8),(40)&7	;volatile
  2628  041D  2C1F               	goto	u1041
  2629  041E  2C20               	goto	u1040
  2630  041F                     u1041:
  2631  041F  2C4A               	goto	l192
  2632  0420                     u1040:
  2633  0420  2C22               	goto	l193
  2634                           	line	292
  2635                           	
  2636  0421                     l1240:	
  2637                           ;PR9B.c: 291: {
  2638                           ;PR9B.c: 292: while(RA0==0)continue;
  2639  0421  2C22               	goto	l193
  2640                           	
  2641  0422                     l194:	
  2642                           	
  2643  0422                     l193:	
  2644  0422  1C05               	btfss	(40/8),(40)&7	;volatile
  2645  0423  2C25               	goto	u1051
  2646  0424  2C26               	goto	u1050
  2647  0425                     u1051:
  2648  0425  2C22               	goto	l193
  2649  0426                     u1050:
  2650  0426  2C27               	goto	l1242
  2651                           	
  2652  0427                     l195:	
  2653                           	line	293
  2654                           	
  2655  0427                     l1242:	
  2656                           ;PR9B.c: 293: if(password_count==0)lcd_clr();
  2657  0427  08FC               	movf	(_password_count),f
  2658  0428  1D03               	skipz
  2659  0429  2C2B               	goto	u1061
  2660  042A  2C2C               	goto	u1060
  2661  042B                     u1061:
  2662  042B  2C31               	goto	l196
  2663  042C                     u1060:
  2664                           	
  2665  042C                     l1244:	
  2666  042C  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2667                           	
  2668  0431                     l196:	
  2669                           	line	294
  2670                           ;PR9B.c: 294: lcd_goto(password_count);
  2671  0431  087C               	movf	(_password_count),w
  2672  0432  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2673                           	line	295
  2674                           ;PR9B.c: 295: send_char('*');
  2675  0437  302A               	movlw	(02Ah)
  2676  0438  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2677                           	line	296
  2678                           	
  2679  043D                     l1246:	
  2680                           ;PR9B.c: 296: keyin_char[password_count]='*';
  2681  043D  302A               	movlw	(02Ah)
  2682  043E  00FB               	movwf	(??_scancolumn4+0)+0
  2683  043F  087C               	movf	(_password_count),w
  2684  0440  3E20               	addlw	_keyin_char&0ffh
  2685  0441  0084               	movwf	fsr0
  2686  0442  087B               	movf	(??_scancolumn4+0)+0,w
  2687  0443  1383               	bcf	status, 7	;select IRP bank0
  2688  0444  0080               	movwf	indf
  2689                           	line	297
  2690                           	
  2691  0445                     l1248:	
  2692                           ;PR9B.c: 297: password_count+=1;
  2693  0445  3001               	movlw	(01h)
  2694  0446  00FB               	movwf	(??_scancolumn4+0)+0
  2695  0447  087B               	movf	(??_scancolumn4+0)+0,w
  2696  0448  07FC               	addwf	(_password_count),f
  2697                           	line	298
  2698                           ;PR9B.c: 298: }
  2699  0449  2CD7               	goto	l215
  2700                           	line	299
  2701                           	
  2702  044A                     l192:	
  2703                           ;PR9B.c: 299: else if(RA1==0)
  2704  044A  1885               	btfsc	(41/8),(41)&7	;volatile
  2705  044B  2C4D               	goto	u1071
  2706  044C  2C4E               	goto	u1070
  2707  044D                     u1071:
  2708  044D  2C78               	goto	l198
  2709  044E                     u1070:
  2710  044E  2C50               	goto	l199
  2711                           	line	301
  2712                           	
  2713  044F                     l1250:	
  2714                           ;PR9B.c: 300: {
  2715                           ;PR9B.c: 301: while(RA1==0)continue;
  2716  044F  2C50               	goto	l199
  2717                           	
  2718  0450                     l200:	
  2719                           	
  2720  0450                     l199:	
  2721  0450  1C85               	btfss	(41/8),(41)&7	;volatile
  2722  0451  2C53               	goto	u1081
  2723  0452  2C54               	goto	u1080
  2724  0453                     u1081:
  2725  0453  2C50               	goto	l199
  2726  0454                     u1080:
  2727  0454  2C55               	goto	l1252
  2728                           	
  2729  0455                     l201:	
  2730                           	line	302
  2731                           	
  2732  0455                     l1252:	
  2733                           ;PR9B.c: 302: if(password_count==0)lcd_clr();
  2734  0455  08FC               	movf	(_password_count),f
  2735  0456  1D03               	skipz
  2736  0457  2C59               	goto	u1091
  2737  0458  2C5A               	goto	u1090
  2738  0459                     u1091:
  2739  0459  2C5F               	goto	l202
  2740  045A                     u1090:
  2741                           	
  2742  045A                     l1254:	
  2743  045A  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2744                           	
  2745  045F                     l202:	
  2746                           	line	303
  2747                           ;PR9B.c: 303: lcd_goto(password_count);
  2748  045F  087C               	movf	(_password_count),w
  2749  0460  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2750                           	line	304
  2751                           ;PR9B.c: 304: send_char('*');
  2752  0465  302A               	movlw	(02Ah)
  2753  0466  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2754                           	line	305
  2755                           	
  2756  046B                     l1256:	
  2757                           ;PR9B.c: 305: keyin_char[password_count]='0';
  2758  046B  3030               	movlw	(030h)
  2759  046C  00FB               	movwf	(??_scancolumn4+0)+0
  2760  046D  087C               	movf	(_password_count),w
  2761  046E  3E20               	addlw	_keyin_char&0ffh
  2762  046F  0084               	movwf	fsr0
  2763  0470  087B               	movf	(??_scancolumn4+0)+0,w
  2764  0471  1383               	bcf	status, 7	;select IRP bank0
  2765  0472  0080               	movwf	indf
  2766                           	line	306
  2767                           	
  2768  0473                     l1258:	
  2769                           ;PR9B.c: 306: password_count+=1;
  2770  0473  3001               	movlw	(01h)
  2771  0474  00FB               	movwf	(??_scancolumn4+0)+0
  2772  0475  087B               	movf	(??_scancolumn4+0)+0,w
  2773  0476  07FC               	addwf	(_password_count),f
  2774                           	line	307
  2775                           ;PR9B.c: 307: }
  2776  0477  2CD7               	goto	l215
  2777                           	line	308
  2778                           	
  2779  0478                     l198:	
  2780                           ;PR9B.c: 308: else if(RA2==0)
  2781  0478  1905               	btfsc	(42/8),(42)&7	;volatile
  2782  0479  2C7B               	goto	u1101
  2783  047A  2C7C               	goto	u1100
  2784  047B                     u1101:
  2785  047B  2CA6               	goto	l204
  2786  047C                     u1100:
  2787  047C  2C7E               	goto	l205
  2788                           	line	310
  2789                           	
  2790  047D                     l1260:	
  2791                           ;PR9B.c: 309: {
  2792                           ;PR9B.c: 310: while(RA2==0)continue;
  2793  047D  2C7E               	goto	l205
  2794                           	
  2795  047E                     l206:	
  2796                           	
  2797  047E                     l205:	
  2798  047E  1D05               	btfss	(42/8),(42)&7	;volatile
  2799  047F  2C81               	goto	u1111
  2800  0480  2C82               	goto	u1110
  2801  0481                     u1111:
  2802  0481  2C7E               	goto	l205
  2803  0482                     u1110:
  2804  0482  2C83               	goto	l1262
  2805                           	
  2806  0483                     l207:	
  2807                           	line	311
  2808                           	
  2809  0483                     l1262:	
  2810                           ;PR9B.c: 311: if(password_count==0)lcd_clr();
  2811  0483  08FC               	movf	(_password_count),f
  2812  0484  1D03               	skipz
  2813  0485  2C87               	goto	u1121
  2814  0486  2C88               	goto	u1120
  2815  0487                     u1121:
  2816  0487  2C8D               	goto	l208
  2817  0488                     u1120:
  2818                           	
  2819  0488                     l1264:	
  2820  0488  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2821                           	
  2822  048D                     l208:	
  2823                           	line	312
  2824                           ;PR9B.c: 312: lcd_goto(password_count);
  2825  048D  087C               	movf	(_password_count),w
  2826  048E  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2827                           	line	313
  2828                           ;PR9B.c: 313: send_char('*');
  2829  0493  302A               	movlw	(02Ah)
  2830  0494  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2831                           	line	314
  2832                           	
  2833  0499                     l1266:	
  2834                           ;PR9B.c: 314: keyin_char[password_count]='#';
  2835  0499  3023               	movlw	(023h)
  2836  049A  00FB               	movwf	(??_scancolumn4+0)+0
  2837  049B  087C               	movf	(_password_count),w
  2838  049C  3E20               	addlw	_keyin_char&0ffh
  2839  049D  0084               	movwf	fsr0
  2840  049E  087B               	movf	(??_scancolumn4+0)+0,w
  2841  049F  1383               	bcf	status, 7	;select IRP bank0
  2842  04A0  0080               	movwf	indf
  2843                           	line	315
  2844                           	
  2845  04A1                     l1268:	
  2846                           ;PR9B.c: 315: password_count+=1;
  2847  04A1  3001               	movlw	(01h)
  2848  04A2  00FB               	movwf	(??_scancolumn4+0)+0
  2849  04A3  087B               	movf	(??_scancolumn4+0)+0,w
  2850  04A4  07FC               	addwf	(_password_count),f
  2851                           	line	316
  2852                           ;PR9B.c: 316: }
  2853  04A5  2CD7               	goto	l215
  2854                           	line	317
  2855                           	
  2856  04A6                     l204:	
  2857                           ;PR9B.c: 317: else if(RA3==0)
  2858  04A6  1985               	btfsc	(43/8),(43)&7	;volatile
  2859  04A7  2CA9               	goto	u1131
  2860  04A8  2CAA               	goto	u1130
  2861  04A9                     u1131:
  2862  04A9  2CD7               	goto	l215
  2863  04AA                     u1130:
  2864  04AA  2CAC               	goto	l211
  2865                           	line	319
  2866                           	
  2867  04AB                     l1270:	
  2868                           ;PR9B.c: 318: {
  2869                           ;PR9B.c: 319: while(RA3==0)continue;
  2870  04AB  2CAC               	goto	l211
  2871                           	
  2872  04AC                     l212:	
  2873                           	
  2874  04AC                     l211:	
  2875  04AC  1D85               	btfss	(43/8),(43)&7	;volatile
  2876  04AD  2CAF               	goto	u1141
  2877  04AE  2CB0               	goto	u1140
  2878  04AF                     u1141:
  2879  04AF  2CAC               	goto	l211
  2880  04B0                     u1140:
  2881  04B0  2CB1               	goto	l1272
  2882                           	
  2883  04B1                     l213:	
  2884                           	line	320
  2885                           	
  2886  04B1                     l1272:	
  2887                           ;PR9B.c: 320: if(password_count==0)lcd_clr();
  2888  04B1  08FC               	movf	(_password_count),f
  2889  04B2  1D03               	skipz
  2890  04B3  2CB5               	goto	u1151
  2891  04B4  2CB6               	goto	u1150
  2892  04B5                     u1151:
  2893  04B5  2CBB               	goto	l214
  2894  04B6                     u1150:
  2895                           	
  2896  04B6                     l1274:	
  2897  04B6  120A  118A  22DC   	fcall	_lcd_clr
              120A  118A         
  2898                           	
  2899  04BB                     l214:	
  2900                           	line	321
  2901                           ;PR9B.c: 321: lcd_goto(password_count);
  2902  04BB  087C               	movf	(_password_count),w
  2903  04BC  120A  118A  2322   	fcall	_lcd_goto
              120A  118A         
  2904                           	line	322
  2905                           ;PR9B.c: 322: send_char('*');
  2906  04C1  302A               	movlw	(02Ah)
  2907  04C2  120A  118A  22F0   	fcall	_send_char
              120A  118A         
  2908                           	line	323
  2909                           	
  2910  04C7                     l1276:	
  2911                           ;PR9B.c: 323: keyin_char[password_count]='D';
  2912  04C7  3044               	movlw	(044h)
  2913  04C8  00FB               	movwf	(??_scancolumn4+0)+0
  2914  04C9  087C               	movf	(_password_count),w
  2915  04CA  3E20               	addlw	_keyin_char&0ffh
  2916  04CB  0084               	movwf	fsr0
  2917  04CC  087B               	movf	(??_scancolumn4+0)+0,w
  2918  04CD  1383               	bcf	status, 7	;select IRP bank0
  2919  04CE  0080               	movwf	indf
  2920                           	line	324
  2921                           	
  2922  04CF                     l1278:	
  2923                           ;PR9B.c: 324: password_count+=1;
  2924  04CF  3001               	movlw	(01h)
  2925  04D0  00FB               	movwf	(??_scancolumn4+0)+0
  2926  04D1  087B               	movf	(??_scancolumn4+0)+0,w
  2927  04D2  07FC               	addwf	(_password_count),f
  2928  04D3  2CD7               	goto	l215
  2929                           	line	325
  2930                           	
  2931  04D4                     l210:	
  2932  04D4  2CD7               	goto	l215
  2933                           	line	326
  2934                           	
  2935  04D5                     l209:	
  2936  04D5  2CD7               	goto	l215
  2937                           	
  2938  04D6                     l203:	
  2939  04D6  2CD7               	goto	l215
  2940                           	
  2941  04D7                     l197:	
  2942                           	
  2943  04D7                     l215:	
  2944  04D7  0008               	return
  2945                           	opt stack 0
  2946                           GLOBAL	__end_of_scancolumn4
  2947  04D8                     	__end_of_scancolumn4:
  2948                           	signat	_scancolumn4,88
  2949                           	global	_lcd_clr
  2950                           
  2951 ;; *************** function _lcd_clr *****************
  2952 ;; Defined at:
  2953 ;;		line 395 in file "PR9B.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0
  2970 ;;      Totals:         0       0       0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		_send_config
  2976 ;;		_delay
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;;		_scancolumn1
  2980 ;;		_scancolumn2
  2981 ;;		_scancolumn3
  2982 ;;		_scancolumn4
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           psect	text394,local,class=CODE,delta=2,merge=1
  2986                           global __ptext394
  2987  02DC                     __ptext394:
  2988                           psect	text394
  2989                           	file	"PR9B.c"
  2990                           	line	395
  2991                           	global	__size_of_lcd_clr
  2992  0014                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  2993                           	
  2994  02DC                     _lcd_clr:	
  2995                           	opt	stack 3
  2996                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  2997                           	line	396
  2998                           	
  2999  02DC                     l1092:	
  3000                           ;PR9B.c: 396: send_config(0x01);
  3001  02DC  3001               	movlw	(01h)
  3002  02DD  120A  118A  2309   	fcall	_send_config
              120A  118A         
  3003                           	line	397
  3004                           ;PR9B.c: 397: delay(50);
  3005  02E2  3000               	movlw	0
  3006  02E3  00F3               	movwf	(?_delay+3)
  3007  02E4  3000               	movlw	0
  3008  02E5  00F2               	movwf	(?_delay+2)
  3009  02E6  3000               	movlw	0
  3010  02E7  00F1               	movwf	(?_delay+1)
  3011  02E8  3032               	movlw	032h
  3012  02E9  00F0               	movwf	(?_delay)
  3013                           
  3014  02EA  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3015                           	line	398
  3016                           	
  3017  02EF                     l243:	
  3018  02EF  0008               	return
  3019                           	opt stack 0
  3020                           GLOBAL	__end_of_lcd_clr
  3021  02F0                     	__end_of_lcd_clr:
  3022                           	signat	_lcd_clr,88
  3023                           	global	_lcd_goto
  3024                           
  3025 ;; *************** function _lcd_goto *****************
  3026 ;; Defined at:
  3027 ;;		line 382 in file "PR9B.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  data            1    wreg     unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  data            1   10[COMMON] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         1       0       0       0       0
  3043 ;;      Temps:          1       0       0       0       0
  3044 ;;      Totals:         2       0       0       0       0
  3045 ;;Total ram usage:        2 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    3
  3048 ;; This function calls:
  3049 ;;		_send_config
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;;		_scancolumn1
  3053 ;;		_scancolumn2
  3054 ;;		_scancolumn3
  3055 ;;		_scancolumn4
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           psect	text395,local,class=CODE,delta=2,merge=1
  3059                           global __ptext395
  3060  0322                     __ptext395:
  3061                           psect	text395
  3062                           	file	"PR9B.c"
  3063                           	line	382
  3064                           	global	__size_of_lcd_goto
  3065  001D                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  3066                           	
  3067  0322                     _lcd_goto:	
  3068                           	opt	stack 3
  3069                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  3070                           ;lcd_goto@data stored from wreg
  3071  0322  00FA               	movwf	(lcd_goto@data)
  3072                           	line	383
  3073                           	
  3074  0323                     l1094:	
  3075                           ;PR9B.c: 383: if(data<16)
  3076  0323  3010               	movlw	(010h)
  3077  0324  027A               	subwf	(lcd_goto@data),w
  3078  0325  1803               	skipnc
  3079  0326  2B28               	goto	u651
  3080  0327  2B29               	goto	u650
  3081  0328                     u651:
  3082  0328  2B31               	goto	l1098
  3083  0329                     u650:
  3084                           	line	385
  3085                           	
  3086  0329                     l1096:	
  3087                           ;PR9B.c: 384: {
  3088                           ;PR9B.c: 385: send_config(0x80+data);
  3089  0329  087A               	movf	(lcd_goto@data),w
  3090  032A  3E80               	addlw	080h
  3091  032B  120A  118A  2309   	fcall	_send_config
              120A  118A         
  3092                           	line	386
  3093                           ;PR9B.c: 386: }
  3094  0330  2B3E               	goto	l240
  3095                           	line	387
  3096                           	
  3097  0331                     l238:	
  3098                           	line	389
  3099                           	
  3100  0331                     l1098:	
  3101                           ;PR9B.c: 387: else
  3102                           ;PR9B.c: 388: {
  3103                           ;PR9B.c: 389: data=data-20;
  3104  0331  087A               	movf	(lcd_goto@data),w
  3105  0332  3EEC               	addlw	0ECh
  3106  0333  00F9               	movwf	(??_lcd_goto+0)+0
  3107  0334  0879               	movf	(??_lcd_goto+0)+0,w
  3108  0335  00FA               	movwf	(lcd_goto@data)
  3109                           	line	390
  3110                           	
  3111  0336                     l1100:	
  3112                           ;PR9B.c: 390: send_config(0xc0+data);
  3113  0336  087A               	movf	(lcd_goto@data),w
  3114  0337  3EC0               	addlw	0C0h
  3115  0338  120A  118A  2309   	fcall	_send_config
              120A  118A         
  3116  033D  2B3E               	goto	l240
  3117                           	line	391
  3118                           	
  3119  033E                     l239:	
  3120                           	line	392
  3121                           	
  3122  033E                     l240:	
  3123  033E  0008               	return
  3124                           	opt stack 0
  3125                           GLOBAL	__end_of_lcd_goto
  3126  033F                     	__end_of_lcd_goto:
  3127                           	signat	_lcd_goto,4216
  3128                           	global	_send_config
  3129                           
  3130 ;; *************** function _send_config *****************
  3131 ;; Defined at:
  3132 ;;		line 358 in file "PR9B.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  data            1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  data            1    8[COMMON] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         1       0       0       0       0
  3150 ;;Total ram usage:        1 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		_delay
  3155 ;;		_e_pulse
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;;		_lcd_goto
  3159 ;;		_lcd_clr
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           psect	text396,local,class=CODE,delta=2,merge=1
  3163                           global __ptext396
  3164  0309                     __ptext396:
  3165                           psect	text396
  3166                           	file	"PR9B.c"
  3167                           	line	358
  3168                           	global	__size_of_send_config
  3169  0019                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  3170                           	
  3171  0309                     _send_config:	
  3172                           	opt	stack 3
  3173                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  3174                           ;send_config@data stored from wreg
  3175  0309  00F8               	movwf	(send_config@data)
  3176                           	line	359
  3177                           	
  3178  030A                     l1076:	
  3179                           ;PR9B.c: 359: RC0=0;
  3180  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  3181  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  3182  030C  1007               	bcf	(56/8),(56)&7	;volatile
  3183                           	line	360
  3184                           	
  3185  030D                     l1078:	
  3186                           ;PR9B.c: 360: PORTD=data;
  3187  030D  0878               	movf	(send_config@data),w
  3188  030E  0088               	movwf	(8)	;volatile
  3189                           	line	361
  3190                           	
  3191  030F                     l1080:	
  3192                           ;PR9B.c: 361: delay(50);
  3193  030F  3000               	movlw	0
  3194  0310  00F3               	movwf	(?_delay+3)
  3195  0311  3000               	movlw	0
  3196  0312  00F2               	movwf	(?_delay+2)
  3197  0313  3000               	movlw	0
  3198  0314  00F1               	movwf	(?_delay+1)
  3199  0315  3032               	movlw	032h
  3200  0316  00F0               	movwf	(?_delay)
  3201                           
  3202  0317  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3203                           	line	362
  3204                           	
  3205  031C                     l1082:	
  3206                           ;PR9B.c: 362: e_pulse();
  3207  031C  120A  118A  233F   	fcall	_e_pulse
              120A  118A         
  3208                           	line	363
  3209                           	
  3210  0321                     l229:	
  3211  0321  0008               	return
  3212                           	opt stack 0
  3213                           GLOBAL	__end_of_send_config
  3214  0322                     	__end_of_send_config:
  3215                           	signat	_send_config,4216
  3216                           	global	_beep_once
  3217                           
  3218 ;; *************** function _beep_once *****************
  3219 ;; Defined at:
  3220 ;;		line 337 in file "PR9B.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    1
  3241 ;; This function calls:
  3242 ;;		_delay
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           psect	text397,local,class=CODE,delta=2,merge=1
  3248                           global __ptext397
  3249  02C8                     __ptext397:
  3250                           psect	text397
  3251                           	file	"PR9B.c"
  3252                           	line	337
  3253                           	global	__size_of_beep_once
  3254  0014                     	__size_of_beep_once	equ	__end_of_beep_once-_beep_once
  3255                           	
  3256  02C8                     _beep_once:	
  3257                           	opt	stack 6
  3258                           ; Regs used in _beep_once: [wreg+status,2+status,0+pclath+cstack]
  3259                           	line	338
  3260                           	
  3261  02C8                     l1054:	
  3262                           ;PR9B.c: 338: RB2=1;
  3263  02C8  1283               	bcf	status, 5	;RP0=0, select bank0
  3264  02C9  1303               	bcf	status, 6	;RP1=0, select bank0
  3265  02CA  1506               	bsf	(50/8),(50)&7	;volatile
  3266                           	line	339
  3267                           	
  3268  02CB                     l1056:	
  3269                           ;PR9B.c: 339: delay(8000);
  3270  02CB  3000               	movlw	0
  3271  02CC  00F3               	movwf	(?_delay+3)
  3272  02CD  3000               	movlw	0
  3273  02CE  00F2               	movwf	(?_delay+2)
  3274  02CF  301F               	movlw	01Fh
  3275  02D0  00F1               	movwf	(?_delay+1)
  3276  02D1  3040               	movlw	040h
  3277  02D2  00F0               	movwf	(?_delay)
  3278                           
  3279  02D3  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3280                           	line	340
  3281                           	
  3282  02D8                     l1058:	
  3283                           ;PR9B.c: 340: RB2=0;
  3284  02D8  1283               	bcf	status, 5	;RP0=0, select bank0
  3285  02D9  1303               	bcf	status, 6	;RP1=0, select bank0
  3286  02DA  1106               	bcf	(50/8),(50)&7	;volatile
  3287                           	line	341
  3288                           	
  3289  02DB                     l223:	
  3290  02DB  0008               	return
  3291                           	opt stack 0
  3292                           GLOBAL	__end_of_beep_once
  3293  02DC                     	__end_of_beep_once:
  3294                           	signat	_beep_once,88
  3295                           	global	_beep_twice
  3296                           
  3297 ;; *************** function _beep_twice *****************
  3298 ;; Defined at:
  3299 ;;		line 344 in file "PR9B.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;		None               void
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    1
  3320 ;; This function calls:
  3321 ;;		_delay
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           psect	text398,local,class=CODE,delta=2,merge=1
  3327                           global __ptext398
  3328  03E6                     __ptext398:
  3329                           psect	text398
  3330                           	file	"PR9B.c"
  3331                           	line	344
  3332                           	global	__size_of_beep_twice
  3333  0034                     	__size_of_beep_twice	equ	__end_of_beep_twice-_beep_twice
  3334                           	
  3335  03E6                     _beep_twice:	
  3336                           	opt	stack 6
  3337                           ; Regs used in _beep_twice: [wreg+status,2+status,0+pclath+cstack]
  3338                           	line	345
  3339                           	
  3340  03E6                     l1060:	
  3341                           ;PR9B.c: 345: RB2=1;
  3342  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3343  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3344  03E8  1506               	bsf	(50/8),(50)&7	;volatile
  3345                           	line	346
  3346                           	
  3347  03E9                     l1062:	
  3348                           ;PR9B.c: 346: delay(8000);
  3349  03E9  3000               	movlw	0
  3350  03EA  00F3               	movwf	(?_delay+3)
  3351  03EB  3000               	movlw	0
  3352  03EC  00F2               	movwf	(?_delay+2)
  3353  03ED  301F               	movlw	01Fh
  3354  03EE  00F1               	movwf	(?_delay+1)
  3355  03EF  3040               	movlw	040h
  3356  03F0  00F0               	movwf	(?_delay)
  3357                           
  3358  03F1  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3359                           	line	347
  3360                           	
  3361  03F6                     l1064:	
  3362                           ;PR9B.c: 347: RB2=0;
  3363  03F6  1283               	bcf	status, 5	;RP0=0, select bank0
  3364  03F7  1303               	bcf	status, 6	;RP1=0, select bank0
  3365  03F8  1106               	bcf	(50/8),(50)&7	;volatile
  3366                           	line	348
  3367                           ;PR9B.c: 348: delay(13000);
  3368  03F9  3000               	movlw	0
  3369  03FA  00F3               	movwf	(?_delay+3)
  3370  03FB  3000               	movlw	0
  3371  03FC  00F2               	movwf	(?_delay+2)
  3372  03FD  3032               	movlw	032h
  3373  03FE  00F1               	movwf	(?_delay+1)
  3374  03FF  30C8               	movlw	0C8h
  3375  0400  00F0               	movwf	(?_delay)
  3376                           
  3377  0401  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3378                           	line	349
  3379                           	
  3380  0406                     l1066:	
  3381                           ;PR9B.c: 349: RB2=1;
  3382  0406  1283               	bcf	status, 5	;RP0=0, select bank0
  3383  0407  1303               	bcf	status, 6	;RP1=0, select bank0
  3384  0408  1506               	bsf	(50/8),(50)&7	;volatile
  3385                           	line	350
  3386                           ;PR9B.c: 350: delay(8000);
  3387  0409  3000               	movlw	0
  3388  040A  00F3               	movwf	(?_delay+3)
  3389  040B  3000               	movlw	0
  3390  040C  00F2               	movwf	(?_delay+2)
  3391  040D  301F               	movlw	01Fh
  3392  040E  00F1               	movwf	(?_delay+1)
  3393  040F  3040               	movlw	040h
  3394  0410  00F0               	movwf	(?_delay)
  3395                           
  3396  0411  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3397                           	line	351
  3398                           	
  3399  0416                     l1068:	
  3400                           ;PR9B.c: 351: RB2=0;
  3401  0416  1283               	bcf	status, 5	;RP0=0, select bank0
  3402  0417  1303               	bcf	status, 6	;RP1=0, select bank0
  3403  0418  1106               	bcf	(50/8),(50)&7	;volatile
  3404                           	line	352
  3405                           	
  3406  0419                     l226:	
  3407  0419  0008               	return
  3408                           	opt stack 0
  3409                           GLOBAL	__end_of_beep_twice
  3410  041A                     	__end_of_beep_twice:
  3411                           	signat	_beep_twice,88
  3412                           	global	_send_char
  3413                           
  3414 ;; *************** function _send_char *****************
  3415 ;; Defined at:
  3416 ;;		line 366 in file "PR9B.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  data            1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  data            1    8[COMMON] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         1       0       0       0       0
  3434 ;;Total ram usage:        1 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		_delay
  3439 ;;		_e_pulse
  3440 ;; This function is called by:
  3441 ;;		_scancolumn1
  3442 ;;		_scancolumn2
  3443 ;;		_scancolumn3
  3444 ;;		_scancolumn4
  3445 ;;		_send_string
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           psect	text399,local,class=CODE,delta=2,merge=1
  3449                           global __ptext399
  3450  02F0                     __ptext399:
  3451                           psect	text399
  3452                           	file	"PR9B.c"
  3453                           	line	366
  3454                           	global	__size_of_send_char
  3455  0019                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  3456                           	
  3457  02F0                     _send_char:	
  3458                           	opt	stack 4
  3459                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  3460                           ;send_char@data stored from wreg
  3461  02F0  00F8               	movwf	(send_char@data)
  3462                           	line	367
  3463                           	
  3464  02F1                     l1084:	
  3465                           ;PR9B.c: 367: RC0=1;
  3466  02F1  1283               	bcf	status, 5	;RP0=0, select bank0
  3467  02F2  1303               	bcf	status, 6	;RP1=0, select bank0
  3468  02F3  1407               	bsf	(56/8),(56)&7	;volatile
  3469                           	line	368
  3470                           	
  3471  02F4                     l1086:	
  3472                           ;PR9B.c: 368: PORTD=data;
  3473  02F4  0878               	movf	(send_char@data),w
  3474  02F5  0088               	movwf	(8)	;volatile
  3475                           	line	369
  3476                           	
  3477  02F6                     l1088:	
  3478                           ;PR9B.c: 369: delay(50);
  3479  02F6  3000               	movlw	0
  3480  02F7  00F3               	movwf	(?_delay+3)
  3481  02F8  3000               	movlw	0
  3482  02F9  00F2               	movwf	(?_delay+2)
  3483  02FA  3000               	movlw	0
  3484  02FB  00F1               	movwf	(?_delay+1)
  3485  02FC  3032               	movlw	032h
  3486  02FD  00F0               	movwf	(?_delay)
  3487                           
  3488  02FE  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3489                           	line	370
  3490                           	
  3491  0303                     l1090:	
  3492                           ;PR9B.c: 370: e_pulse();
  3493  0303  120A  118A  233F   	fcall	_e_pulse
              120A  118A         
  3494                           	line	371
  3495                           	
  3496  0308                     l232:	
  3497  0308  0008               	return
  3498                           	opt stack 0
  3499                           GLOBAL	__end_of_send_char
  3500  0309                     	__end_of_send_char:
  3501                           	signat	_send_char,4216
  3502                           	global	_e_pulse
  3503                           
  3504 ;; *************** function _e_pulse *****************
  3505 ;; Defined at:
  3506 ;;		line 374 in file "PR9B.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, pclath, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3520 ;;      Params:         0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    1
  3527 ;; This function calls:
  3528 ;;		_delay
  3529 ;; This function is called by:
  3530 ;;		_send_config
  3531 ;;		_send_char
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           psect	text400,local,class=CODE,delta=2,merge=1
  3535                           global __ptext400
  3536  033F                     __ptext400:
  3537                           psect	text400
  3538                           	file	"PR9B.c"
  3539                           	line	374
  3540                           	global	__size_of_e_pulse
  3541  0021                     	__size_of_e_pulse	equ	__end_of_e_pulse-_e_pulse
  3542                           	
  3543  033F                     _e_pulse:	
  3544                           	opt	stack 4
  3545                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  3546                           	line	375
  3547                           	
  3548  033F                     l1070:	
  3549                           ;PR9B.c: 375: RC1=1;
  3550  033F  1283               	bcf	status, 5	;RP0=0, select bank0
  3551  0340  1303               	bcf	status, 6	;RP1=0, select bank0
  3552  0341  1487               	bsf	(57/8),(57)&7	;volatile
  3553                           	line	376
  3554                           	
  3555  0342                     l1072:	
  3556                           ;PR9B.c: 376: delay(50);
  3557  0342  3000               	movlw	0
  3558  0343  00F3               	movwf	(?_delay+3)
  3559  0344  3000               	movlw	0
  3560  0345  00F2               	movwf	(?_delay+2)
  3561  0346  3000               	movlw	0
  3562  0347  00F1               	movwf	(?_delay+1)
  3563  0348  3032               	movlw	032h
  3564  0349  00F0               	movwf	(?_delay)
  3565                           
  3566  034A  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3567                           	line	377
  3568                           	
  3569  034F                     l1074:	
  3570                           ;PR9B.c: 377: RC1=0;
  3571  034F  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  0350  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  0351  1087               	bcf	(57/8),(57)&7	;volatile
  3574                           	line	378
  3575                           ;PR9B.c: 378: delay(50);
  3576  0352  3000               	movlw	0
  3577  0353  00F3               	movwf	(?_delay+3)
  3578  0354  3000               	movlw	0
  3579  0355  00F2               	movwf	(?_delay+2)
  3580  0356  3000               	movlw	0
  3581  0357  00F1               	movwf	(?_delay+1)
  3582  0358  3032               	movlw	032h
  3583  0359  00F0               	movwf	(?_delay)
  3584                           
  3585  035A  120A  118A  23B6   	fcall	_delay
              120A  118A         
  3586                           	line	379
  3587                           	
  3588  035F                     l235:	
  3589  035F  0008               	return
  3590                           	opt stack 0
  3591                           GLOBAL	__end_of_e_pulse
  3592  0360                     	__end_of_e_pulse:
  3593                           	signat	_e_pulse,88
  3594                           	global	_delay
  3595                           
  3596 ;; *************** function _delay *****************
  3597 ;; Defined at:
  3598 ;;		line 332 in file "PR9B.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  data            4    0[COMMON] unsigned long 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         4       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          4       0       0       0       0
  3615 ;;      Totals:         8       0       0       0       0
  3616 ;;Total ram usage:        8 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_beep_once
  3623 ;;		_beep_twice
  3624 ;;		_send_config
  3625 ;;		_send_char
  3626 ;;		_e_pulse
  3627 ;;		_lcd_clr
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           psect	text401,local,class=CODE,delta=2,merge=1
  3631                           global __ptext401
  3632  03B6                     __ptext401:
  3633                           psect	text401
  3634                           	file	"PR9B.c"
  3635                           	line	332
  3636                           	global	__size_of_delay
  3637  0030                     	__size_of_delay	equ	__end_of_delay-_delay
  3638                           	
  3639  03B6                     _delay:	
  3640                           	opt	stack 6
  3641                           ; Regs used in _delay: [wreg]
  3642                           	line	333
  3643                           	
  3644  03B6                     l1040:	
  3645                           ;PR9B.c: 333: for( ;data>0;data-=1);
  3646  03B6  0873               	movf	(delay@data+3),w
  3647  03B7  0472               	iorwf	(delay@data+2),w
  3648  03B8  0471               	iorwf	(delay@data+1),w
  3649  03B9  0470               	iorwf	(delay@data),w
  3650  03BA  1D03               	skipz
  3651  03BB  2BBD               	goto	u621
  3652  03BC  2BBE               	goto	u620
  3653  03BD                     u621:
  3654  03BD  2BC0               	goto	l1044
  3655  03BE                     u620:
  3656  03BE  2BE5               	goto	l220
  3657                           	
  3658  03BF                     l1042:	
  3659  03BF  2BE5               	goto	l220
  3660                           	
  3661  03C0                     l218:	
  3662                           	
  3663  03C0                     l1044:	
  3664  03C0  3001               	movlw	01h
  3665  03C1  00F4               	movwf	((??_delay+0)+0)
  3666  03C2  3000               	movlw	0
  3667  03C3  00F5               	movwf	((??_delay+0)+0+1)
  3668  03C4  3000               	movlw	0
  3669  03C5  00F6               	movwf	((??_delay+0)+0+2)
  3670  03C6  3000               	movlw	0
  3671  03C7  00F7               	movwf	((??_delay+0)+0+3)
  3672  03C8  0874               	movf	0+(??_delay+0)+0,w
  3673  03C9  02F0               	subwf	(delay@data),f
  3674  03CA  0875               	movf	1+(??_delay+0)+0,w
  3675  03CB  1C03               	skipc
  3676  03CC  0F75               	incfsz	1+(??_delay+0)+0,w
  3677  03CD  2BCF               	goto	u635
  3678  03CE  2BD0               	goto	u636
  3679  03CF                     u635:
  3680  03CF  02F1               	subwf	(delay@data+1),f
  3681  03D0                     u636:
  3682  03D0  0876               	movf	2+(??_delay+0)+0,w
  3683  03D1  1C03               	skipc
  3684  03D2  0F76               	incfsz	2+(??_delay+0)+0,w
  3685  03D3  2BD5               	goto	u637
  3686  03D4  2BD6               	goto	u638
  3687  03D5                     u637:
  3688  03D5  02F2               	subwf	(delay@data+2),f
  3689  03D6                     u638:
  3690  03D6  0877               	movf	3+(??_delay+0)+0,w
  3691  03D7  1C03               	skipc
  3692  03D8  0F77               	incfsz	3+(??_delay+0)+0,w
  3693  03D9  2BDB               	goto	u639
  3694  03DA  2BDC               	goto	u630
  3695  03DB                     u639:
  3696  03DB  02F3               	subwf	(delay@data+3),f
  3697  03DC                     u630:
  3698                           
  3699  03DC  0873               	movf	(delay@data+3),w
  3700  03DD  0472               	iorwf	(delay@data+2),w
  3701  03DE  0471               	iorwf	(delay@data+1),w
  3702  03DF  0470               	iorwf	(delay@data),w
  3703  03E0  1D03               	skipz
  3704  03E1  2BE3               	goto	u641
  3705  03E2  2BE4               	goto	u640
  3706  03E3                     u641:
  3707  03E3  2BC0               	goto	l1044
  3708  03E4                     u640:
  3709  03E4  2BE5               	goto	l220
  3710                           	
  3711  03E5                     l219:	
  3712                           	line	334
  3713                           	
  3714  03E5                     l220:	
  3715  03E5  0008               	return
  3716                           	opt stack 0
  3717                           GLOBAL	__end_of_delay
  3718  03E6                     	__end_of_delay:
  3719                           	signat	_delay,4216
  3720                           psect	text402,local,class=CODE,delta=2,merge=1
  3721                           global __ptext402
  3722  0000                     __ptext402:
  3723                           	global	btemp
  3724  007E                     	btemp set 07Eh
  3725                           
  3726                           	DABS	1,126,2	;btemp
  3727                           	global	wtemp0
  3728  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     46
    Constant    0
    Data        6
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_send_string
    _main->_scancolumn1
    _main->_scancolumn2
    _main->_scancolumn3
    _main->_scancolumn4
    _send_string->_send_char
    _scancolumn1->_lcd_goto
    _scancolumn2->_lcd_goto
    _scancolumn3->_lcd_goto
    _scancolumn4->_lcd_goto
    _lcd_clr->_send_config
    _lcd_goto->_send_config
    _send_config->_delay
    _beep_once->_delay
    _beep_twice->_delay
    _send_char->_delay
    _e_pulse->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2665
                        _send_config
                            _lcd_clr
                              _delay
                           _lcd_goto
                        _send_string
                          _clearrow1
                        _scancolumn1
                          _clearrow2
                        _scancolumn2
                          _clearrow3
                        _scancolumn3
                          _clearrow4
                        _scancolumn4
                          _beep_once
                         _beep_twice
 ---------------------------------------------------------------------------------
 (1) _send_string                                          3     3      0     180
                                              9 COMMON     3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _clearrow1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _scancolumn1                                          1     1      0     470
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _clearrow2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _scancolumn2                                          1     1      0     470
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _clearrow3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _scancolumn3                                          1     1      0     470
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _clearrow4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _scancolumn4                                          1     1      0     470
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _lcd_clr                                              0     0      0     157
                        _send_config
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             2     2      0     201
                                              9 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (3) _send_config                                          1     1      0     112
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (1) _beep_once                                            0     0      0      45
                              _delay
 ---------------------------------------------------------------------------------
 (1) _beep_twice                                           0     0      0      45
                              _delay
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0     112
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (3) _e_pulse                                              0     0      0      45
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                8     4      4      45
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_config
     _delay
     _e_pulse
       _delay
   _lcd_clr
     _send_config
       _delay
       _e_pulse
         _delay
     _delay
   _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _send_string
     _send_char
       _delay
       _e_pulse
         _delay
   _clearrow1
   _scancolumn1
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _clearrow2
   _scancolumn2
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _clearrow3
   _scancolumn3
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _clearrow4
   _scancolumn4
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _beep_once
     _delay
   _beep_twice
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       5       2        0.0%
EEDATA             100      0       0       0        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Wed Jun 27 13:00:30 2012

                   pc 0002          _stalled_char 0026                    l90 07DD                    l91 07DD  
                  l92 07DE                    l93 07FA                    l94 07F8                    l95 07F8  
                  l87 076E                    l88 07FB                    l96 07F9                    l97 07FC  
                  l89 07DF                    l98 07FD                    l99 07FD                    fsr 0004  
                 l102 02C7                   l111 02B2                   l200 0450                   l120 06B2  
                 l201 0455                   l105 02C0                   l121 068A                   l210 04D4  
                 l202 045F                   l130 06C7                   l122 068A                   l114 0684  
                 l203 04D6                   l211 04AC                   l131 070F                   l123 068F  
                 l115 065C                   l220 03E5                   l212 04AC                   l204 04A6  
                 l108 02B9                   l140 05C6                   l132 070E                   l124 0699  
                 l116 065C                   l213 04B1                   l205 047E                   l141 059E  
                 l125 0710                   l133 06E6                   l117 0661                   l214 04BB  
                 l206 047E                   l150 05DB                   l142 059E                   l134 06E6  
                 l126 06E0                   l118 066B                   l223 02DB                   l207 0483  
                 l215 04D7                   l151 0652                   l143 05A3                   l119 0711  
                 l135 06EB                   l127 06B8                   l232 0308                   l240 033E  
                 l208 048D                   l160 0628                   l152 0622                   l144 05AD  
                 l136 06F5                   l128 06B8                   l209 04D5                   l145 0653  
                 l161 062D                   l153 05FA                   l129 06BD                   l137 0711  
                 l218 03C0                   l226 0419                   l170 04EF                   l162 0637  
                 l154 05FA                   l146 05F4                   l250 0386                   l219 03E5  
                 l235 035F                   l243 02EF                   l171 0595                   l155 05FF  
                 l147 05CC                   l163 0653                   l251 0386                   l180 053C  
                 l172 0536                   l156 0609                   l148 05CC                   l229 0321  
                 l181 0541                   l173 050E                   l157 0651                   l149 05D1  
                 l238 0331                   l182 054B                   l174 050E                   l166 0508  
                 l158 0650                   l246 0374                   l239 033E                   l183 0593  
                 l175 0513                   l167 04E0                   l159 0628                   l247 0363  
                 l192 044A                   l184 0592                   l176 051D                   l168 04E0  
                 l193 0422                   l177 0594                   l185 056A                   l169 04E5  
                 l249 0385                   l194 0422                   l186 056A                   l178 0564  
                 l195 0427                   l187 056F                   l179 053C                   l196 0431  
                 l188 0579                   l197 04D7                   l189 0595                   l198 0478  
                 l199 0450                   _RA0 0028                   _RA1 0029                   _RA2 002A  
                 _RB1 0031                   _RA3 002B                   _RC0 0038                   _RB2 0032  
                 _RA4 002C                   _RC1 0039                   _RA5 002D                   _RC2 003A  
                 _RC3 003B                   _RE0 0048                   _RE1 0049                   u620 03BE  
                 u700 0666                   u621 03BD                   u701 0665                   u630 03DC  
                 u710 0688                   u711 0687                   u640 03E4                   u800 059C  
                 u720 068E                   u641 03E3                   u801 059B                   u721 068D  
                 u650 0329                   u810 05A2                   u730 0694                   u635 03CF  
                 u651 0328                   u811 05A1                   u731 0693                   u636 03D0  
                 u900 062C                   u820 05A8                   u740 06B6                   u660 0378  
                 u637 03D5                   u901 062B                   u821 05A7                   u741 06B5  
                 u638 03D6                   u910 0632                   u830 05CA                   u750 06BC  
                 u670 0384                   u639 03DB                   u911 0631                   u831 05C9  
                 u751 06BB                   u671 0383                   u920 04DE                   u840 05D0  
                 u760 06C2                   u680 065A                   u921 04DD                   u841 05CF  
                 u761 06C1                   u681 0659                   u930 04E4                   u850 05D6  
                 u770 06E4                   u690 0660                   u931 04E3                   u851 05D5  
                 u771 06E3                   u691 065F                   u940 04EA                   u860 05F8  
                 u780 06EA                   u941 04E9                   u861 05F7                   u781 06E9  
                 u950 050C                   u870 05FE                   u790 06F0                   u951 050B  
                 u871 05FD                   u791 06EF                   u960 0512                   u880 0604  
                 u961 0511                   u881 0603                   u970 0518                   u890 0626  
                 u971 0517                   u891 0625                   u980 053A                   u981 0539  
                 u990 0540                   u991 053F                   fsr0 0004                   indf 0000  
     send_config@data 0078                  l1100 0336                  l1110 0378                  l1102 0361  
                l1040 03B6                  l1200 04E5                  l1120 0677                  l1112 0654  
                l1104 0363                  l1042 03BF                  l1210 0513                  l1202 04EA  
                l1050 02B3                  l1130 06A5                  l1122 067F                  l1114 065B  
                l1106 036F                  l1044 03C0                  l1060 03E6                  l1052 02AC  
                l1220 0541                  l1212 0518                  l1204 04FB                  l1140 06D3  
                l1132 06AD                  l1124 0689                  l1116 0661                  l1108 0374  
                l1300 0725                  l1070 033F                  l1062 03E9                  l1054 02C8  
                l1230 056F                  l1222 0546                  l1214 0529                  l1206 0503  
                l1150 0701                  l1142 06DB                  l1134 06B7                  l1126 068F  
                l1118 0666                  l1046 02C1                  l1310 0743                  l1302 072B  
                l1072 0342                  l1064 03F6                  l1056 02CB                  l1080 030F  
                l1240 0421                  l1232 0574                  l1224 0557                  l1216 0531  
                l1208 050D                  l1160 05A8                  l1048 02BA                  l1152 0709  
                l1144 06E5                  l1136 06BD                  l1128 0694                  l1320 0767  
                l1312 0748                  l1304 0731                  l1074 034F                  l1090 0303  
                l1066 0406                  l1058 02D8                  l1082 031C                  l1250 044F  
                l1242 0427                  l1234 0585                  l1226 055F                  l1218 053B  
                l1170 05D6                  l1162 05B9                  l1154 0596                  l1146 06EB  
                l1138 06C2                  l1330 0782                  l1322 076E                  l1314 0755  
                l1306 0737                  l1084 02F1                  l1068 0416                  l1076 030A  
                l1092 02DC                  l1260 047D                  l1252 0455                  l1244 042C  
                l1236 058D                  l1228 0569                  l1180 0604                  l1172 05E7  
                l1164 05C1                  l1156 059D                  l1148 06F0                  l1340 079C  
                l1332 0787                  l1324 0773                  l1316 075B                  l1308 073D  
                l1086 02F4                  l1078 030D                  l1094 0323                  l1270 04AB  
                l1262 0483                  l1254 045A                  l1246 043D                  l1238 041A  
                l1190 0632                  l1182 0615                  l1174 05EF                  l1166 05CB  
                l1158 05A3                  l1350 07B7                  l1342 079D                  l1334 078C  
                l1326 0778                  l1318 0761                  l1088 02F6                  l1096 0329  
                l1272 04B1                  l1264 0488                  l1256 046B                  l1248 0445  
                l1192 0643                  l1184 061D                  l1176 05F9                  l1168 05D1  
                l1360 07D7                  l1352 07BD                  l1344 07A5                  l1336 0791  
                l1328 077D                  l1280 0712                  l1098 0331                  l1274 04B6  
                l1266 0499                  l1258 0473                  l1194 064B                  l1186 0627  
                l1178 05FF                  l1370 07F3                  l1362 07D8                  l1354 07C3  
                l1346 07AB                  l1338 0796                  l1290 0720                  l1282 0718  
                l1276 04C7                  l1268 04A1                  l1196 04D8                  l1188 062D  
                l1356 07CE                  l1348 07B1                  l1364 07DF                  l1292 0721  
                l1284 0719                  l1278 04CF                  l1198 04DF                  l1366 07EA  
                l1358 07D4                  l1294 0722                  l1286 071C                  l1368 07F0  
                l1296 0723                  l1288 071D                  l1298 0724                  STR_1 001A  
                STR_2 0009                  STR_3 0027                  STR_4 0030                  u1000 0546  
                u1001 0545                  u1010 0568                  u1011 0567                  u1100 047C  
                u1020 056E                  u1101 047B                  u1021 056D                  u1110 0482  
                u1030 0574                  u1111 0481                  u1031 0573                  u1120 0488  
                u1040 0420                  u1200 07B7                  u1121 0487                  u1041 041F  
                u1201 07B6                  u1130 04AA                  u1050 0426                  u1210 07BD  
                u1131 04A9                  u1051 0425                  u1211 07BC                  u1140 04B0  
                u1060 042C                  u1220 07C3                  u1141 04AF                  u1061 042B  
                u1221 07C2                  u1150 04B6                  u1070 044E                  u1151 04B5  
                u1071 044D                  u1080 0454                  u1160 079C                  u1081 0453  
                u1161 079B                  u1090 045A                  u1170 07A5                  u1091 0459  
                u1171 07A4                  u1180 07AB                  u1181 07AA                  u1190 07B1  
                u1191 07B0                  _main 0712                  btemp 007E          lcd_goto@data 007A  
                start 0000                 ?_main 0070                 _PORTC 0007                 _PORTD 0008  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _TRISE 0089       __end_of_e_pulse 0360       __end_of_lcd_clr 02F0                 _delay 03B6  
               pclath 000A                 status 0003                 wtemp0 007E          ?_scancolumn1 0070  
        ?_scancolumn2 0070          ?_scancolumn3 0070          ?_scancolumn4 0070          __end_of_main 0800  
              ??_main 007C                ?_delay 0070          ?_send_config 0070                _ADCON1 009F  
        ?_send_string 0070      __end_of_lcd_goto 033F             ??_e_pulse 0078             ??_lcd_clr 0079  
      _password_count 007C        __pcstackCOMMON 0070    __size_of_beep_once 0014          __pidataBANK0 02A6  
       __end_of_delay 03E6    __size_of_clearrow1 0007    __size_of_clearrow2 0007    __size_of_clearrow3 0007  
  __size_of_clearrow4 0007               ??_delay 0074            _beep_twice 03E6            __pbssBANK0 0020  
          __pmaintext 0712  __size_of_scancolumn1 00BE  __size_of_scancolumn2 00BE  __size_of_scancolumn3 00BE  
__size_of_scancolumn4 00BE    __size_of_send_char 0019     __end_of_beep_once 02DC             ?_lcd_goto 0070  
__size_of_send_config 0019     __end_of_clearrow1 02C8     __end_of_clearrow2 02C1     __end_of_clearrow3 02BA  
   __end_of_clearrow4 02B3  __size_of_send_string 0027               _e_pulse 033F            _keyin_char 0020  
             _lcd_clr 02DC           ?_beep_twice 0070            ??_lcd_goto 0079  end_of_initialization 03B2  
   __end_of_send_char 0309         send_char@data 0078   __size_of_beep_twice 0034   start_initialization 0387  
         __pdataBANK0 0026           __pbssCOMMON 007C     __size_of_lcd_goto 001D             _beep_once 02C8  
       ??_scancolumn1 007B         ??_scancolumn2 007B         ??_scancolumn3 007B         ??_scancolumn4 007B  
           _clearrow1 02C1             _clearrow2 02BA             _clearrow3 02B3             _clearrow4 02AC  
           __ptext400 033F             __ptext401 03B6             __ptext402 0000             __ptext390 02B3  
           __ptext391 04D8             __ptext392 02AC             __ptext393 041A             __ptext385 0360  
           __ptext394 02DC             __ptext386 02C1             __ptext395 0322             __ptext387 0654  
           __ptext396 0309             __ptext388 02BA             __ptext397 02C8             __ptext389 0596  
           __ptext398 03E6             __ptext399 02F0              ?_e_pulse 0070             __pstrings 0003  
            ?_lcd_clr 0070         ??_send_config 0078        __size_of_delay 0030          ??_beep_twice 0078  
           delay@data 0070         ??_send_string 0079            ?_beep_once 0070             _send_char 02F0  
          ?_clearrow1 0070            ?_clearrow2 0070            ?_clearrow3 0070            ?_clearrow4 0070  
 __end_of_scancolumn1 0712   __end_of_scancolumn2 0654   __end_of_scancolumn3 0596   __end_of_scancolumn4 04D8  
  __end_of_beep_twice 041A           __stringbase 0008   __end_of_send_config 0322            ?_send_char 0070  
        send_string@i 007A          send_string@s 007B   __end_of_send_string 0387      __size_of_e_pulse 0021  
    __size_of_lcd_clr 0014              _lcd_goto 0322           ??_beep_once 0078         __size_of_main 00EE  
         _scancolumn1 0654           _scancolumn2 0596           _scancolumn3 04D8           _scancolumn4 041A  
         ??_clearrow1 0070           ??_clearrow2 0070           ??_clearrow3 0070           ??_clearrow4 0070  
         _send_config 0309           _send_string 0360           ??_send_char 0078             stringcode 0003  
            stringdir 0003              stringtab 0003  
